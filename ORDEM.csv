FileName|ResearchQuestion|Theme|Subject|Sentence|
A1|RQ1|Principles and Values|User focus|Usability: C&C technology must match human abilities of both the operators and the end users.|
A1|RQ1|Principles and Values|Innovation|In addition to these SPUR challenges that must be addressed| there are many opportunities that cry for innovation.|
A1|RQ1|Principles and Values|Privacy and Security|Security/Privacy: We must protect the security and privacy of C&C users from criminals and terrorists while preventing the Orwellian vision of Big Brother.|
A1|RQ1|Principles and Values|Architecture|Massively Parallel Microprocessors. [...] another bold challenge is how to advance the SPUR manifesto when the hardware building block is a computer rather than a transistor.|
A1|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|As technologists| we must confront the current weaknesses and deliver on the potential opportunities of computer and communication technologies in the 21st century.|
A1|RQ1|Objective and Motivation|Transforming current practices through innovations|Hence| I believe for our new century we need a new manifesto for C&C.|
A1|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|But we now are all painfully aware of the drawbacks of 20th century C&C.|
A1|RQ1|Objective and Motivation|Solve existing problems and challenges|We need to create C&C the world can depend upon| since some are already relying on it with technology that doesn’t deserve our trust.|
A1|RQ1|Objective and Motivation|Changing culture and practices|To make genuine progress| the 'SPUR' manifesto must move ahead of cost-performance in the priorities of 21st century C&C.|
A1|RQ1|Main Guidelines|Adopt new technologies and approaches|We will likely need to innovate programming languages| debuggers| operating systems| databases| and so on.|
A1|RQ1|Main Guidelines|Simplify and improve usability|C&C technology must match human abilities of both the operators and the end users.|
A1|RQ1|Main Guidelines|Ensure security and privacy|We must protect the security and privacy of C&C users from criminals and terrorists.|
A1|RQ1|Main Guidelines|Adapt and evolve|another bold challenge is how to advance the SPUR manifesto.|
A1|RQ1|Impact and Applicability|Promote collaboration and communication|Consider this a call to arms for tackling that challenge.|
A1|RQ1|Impact and Applicability|Conduct research and experiments|We will likely need to innovate programming languages| debuggers| operating systems| databases| and so on.|
A1|RQ1|Impact and Applicability|Ensure security and privacy|Indeed| 21st century C&C should be as reliable as 20th century telephony.|
A1|RQ1|Call to Action|Challenge the status quo|Consider this a call to arms for tackling that challenge.|
A1|RQ1|Call to Action|Creating a better future|If we instead rise to these challenges to address weaknesses while leveraging new opportunities [...] then I believe the legacy of 21st century C&C will be one that we can be proud of.|
A1|RQ2|Gaps|Lack of practical guidelines for implementing principles|We need to create C&C the world can depend upon| since some are already relying on it with technology that doesn’t deserve our trust.|
A1|RQ2|Gaps|Lack of integration between different areas of software engineering|We will likely need to innovate programming languages| debuggers| operating systems| databases| and so on.|
A1|RQ3|Relationship with SWeBok|Software architecture|Massively Parallel Microprocessors [...] another bold challenge is how to advance the SPUR manifesto when the hardware building block is a computer rather than a transistor.|
A1|RQ3|Relationship with SWeBok|Software Quality|Reliability: We need to create C&C the world can depend upon.|
A1|RQ3|Relationship with SWeBok|Software Security|Security/Privacy: We must protect the security and privacy of C&C users from criminals and terrorists.|
A2|RQ1|Principles and Values|Collaboration|The tangible interface| as well as all the aspects of the ‘infrastructure’ had only in part been designed in advance. They were developed further in collaboration with pupils and teachers.|
A2|RQ1|Principles and Values|Innovation|Inspiring examples of ubiquitous media are increasingly emerging in art installations. Recent research focuses on producing dynamic| interactive| non-linear narratives (e.g. interactive storytelling)| or explores technologically innovative| immersive environments that diverge from conventional screen formats.|
A2|RQ1|Principles and Values|Change|Performance stresses the centrality of the actor that configures expressions and experience in environments; in this case| configuration is defined by the actor and his situation.|
A2|RQ1|Objective and Motivation|Transforming current practices through innovations|proposes a critical design agenda that pragmatically joins concepts from media studies| tangible or ubiquitous media design concerns| anthropological perspectives to performance and practices of theatre performance.|
A2|RQ1|Objective and Motivation|Emphasis on collaboration and interdisciplinarity|This paper addresses design agendas in Human-Computer Interaction and neighbouring fields motivated by the mixing of areas that were mostly kept separate until recently| such as media studies| performing arts| computing| and ubiquitous or tangible interfaces.|
A2|RQ1|Main Guidelines|Adopt new technologies and approaches|We need to privilege the sensing and sensible human ‘interpreter’ over the sensing and ‘once-and-for-all-interpreted’ system.|
A2|RQ1|Main Guidelines|Develop tools and techniques|Creative practices in the arts can fruitfully drive practical and conceptual attempts to address the Performative Development of such applications.|
A2|RQ1|Main Guidelines|Conduct research and experiments|These attempts have a strong explorative component and focus on the social aspects of the creative achievement.|
A2|RQ1|Main Guidelines|Simplify and improve usability|In these cases the director is looking for ways of making the mediating artefacts in order for the performance to become more transparent to actors’ inner traits and personality.|
A2|RQ1|Main Guidelines|Promote collaboration and communication|Participants create expressions embodied in space| artefacts| bodily movements and media choreographies with a spectator in mind and requiring energy for active participation and consciousness of the acts.|
A2|RQ1|Impact and Applicability|Promote collaboration and communication|The central point that emerged from the observations is that the mobile multimedia records emerged collaboratively and that the relevance of the media collections of a member resided in the way they were combined with the ones of the other members.|
A2|RQ1|Call to Action|Collaborate and share|Such a design process can unfold with the guide and inspiration from practical approaches in the visual and performing arts even without necessarily engaging people in any acting or performing activities| nor by embedding concepts from the arts in designed features.|
A2|RQ1|Call to Action|Creating a better future|Our agenda heavily relies on the generative roles of such principles from media studies. The perspective in which we frame and apply them is that of authorship and participation as a form of skilled appropriation.|
A2|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|Other approaches have critiqued the ‘disappearance’ of computers in the environment and the strive for embodied interaction| suggesting that these design ideals may be unachievable or incomplete.|
A2|RQ2|Gaps|Lack of practical guidelines for implementing principles|Dourish recognizes that questions of 'how it should be developed| explored| and instantiated remain open research problems'.|
A2|RQ3|Relationship with SWeBok|Software Design|The object of our design interventions is to engage people in creative activities in which a major contribution in their imaginative work is to create new human relationships while they tackle with the urge of socially determine their presence in a newly created space.|
A2|RQ3|Relationship with SWeBok|Software Construction|Methodologically| performance implies the uniqueness and contingencies of 'happenings'. This contrasts with positivistic movements that strive towards repeatable methods and techniques in design.|
A2|RQ3|Relationship with SWeBok|Software Engineering Professional Practice|The practical wisdom in the performing arts can be applied by devising activities with interactive technology.|
A3|RQ1|Principles and Values|Innovation|Technological advances provide an increasing opportunity for service computing.|
A3|RQ1|Principles and Values|Privacy and Security|Barriers to automated interorganizational service composition include disparities in competency| trust| accountability| functional and non-functional goals (including security and privacy).|
A3|RQ1|Principles and Values|Architecture|A Service Oriented Architecture (SOA) is a technology-independent framework for defining| registering and invoking services.|
A3|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|We propose a manifesto—a community declaration of objectives and approaches—as a way to establish common ground among researchers in the field and to guide its future development.|
A3|RQ1|Objective and Motivation|Improve or propose new technologies| approaches and methods|This manifesto first takes stock of the current state of service computing and then maps out a strategy for leveraging emerging concepts and technologies to deliver on the full potential of the service paradigm.|
A3|RQ1|Objective and Motivation|Solve existing problems and challenges|It identifies the major obstacles that hinder the development and potential realization of service computing in the real world.|
A3|RQ1|Main Guidelines|Adapt and evolve|A reboot of service computing is essential for it to play its crucial role in the era of cloud computing| big data| the Internet of Things (IoT)| and social and mobile computing.|
A3|RQ1|Main Guidelines|Develop tools and techniques|Service computing (or service-oriented computing) seeks to develop computational abstractions| architectures| techniques| and tools to support services broadly.|
A3|RQ1|Main Guidelines|Conduct research and experiments|A number of journals and conferences were founded to assist research development in this area.|
A3|RQ1|Main Guidelines|Promote collaboration and communication|An important direction is to formalize sociotechnical interactions as a basis for governance of autonomous services.|
A3|RQ1|Impact and Applicability|Establish standards and guidelines|Standardization bodies| such as the World Wide Web Consortium (W3C) and the Organization for the Advancement of Structured Information Standards (OASIS)| have led specification and standardization efforts for implementing service systems.|
A3|RQ1|Impact and Applicability|Consider context and application|Selecting and composing services from numerous and ever-changing devices and services to fulfill user requirements in a real-time and context-aware fashion is a difficult mission.|
A3|RQ1|Call to Action|Adopt new technologies and approaches|We call for the development of a new service paradigm that encompasses the four technologies identified by IDC| along with the introduction of new technologies.|
A3|RQ1|Call to Action|Creating a better future|Service computing has a bright future supporting the tremendous advances in emerging areas of computing such as mobile computing| cloud computing| big data| social computing| and beyond.|
A3|RQ2|Gaps|Lack of practical guidelines for implementing principles|Service systems have so far been built without an adequate rigorous foundation that would enable reasoning about them.|
A3|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|An often-overlooked strategic challenge in service computing is analyzing why service computing has not reached its full potential in the real world| and what needs to be done to change that.|
A3|RQ2|Gaps|Lack of integration between different areas of software engineering|One key impediment has been the confusion created by myriad of often-competing Web service standards| attempting to standardize every single aspect of the service life cycle.|
A3|RQ3|Relationship with SWeBok|Software architecture|A Service Oriented Architecture (SOA) is a technology-independent framework for defining| registering and invoking services.|
A3|RQ3|Relationship with SWeBok|Software Engineering Process|Service computing aims to support the creation and delivery of services| which involve computing devices and software components distributed on the Web and provisioned by diverse organizations.|
A4|RQ1|Principles and Values|Artificial intelligence|ABPMS is a new generation of business process management systems empowered by trustworthy AI technology to reason and act upon data within a set of restrictions.|
A4|RQ1|Main Guidelines|Adapt and evolve|An ABPMS must therefore be able to adapt itself to the new process context in real time.|
A4|RQ1|Main Guidelines|Simplify and improve usability|An ABPMS should be conversationally actionable... to proactively communicate with human agents about process-related actions| goals| and intentions| using natural language...|
A4|RQ1|Impact and Applicability|Develop tools and techniques|ABPMS should be able to achieve more complex automation than a traditional BPMS by using AI to minimize human-dependent training.|
A4|RQ1|Call to Action|Collaborate and share|An ABPMS must interact with human users as a 'learning apprentice'| adapting itself to the users’ work practices.|
A5|RQ1|Principles and Values|Collaboration|The participants included researchers from the four areas of database and transaction processing systems| fault tolerance and dependable systems| formal methods...|
A5|RQ1|Principles and Values|Change|The world of network-centric computing is changing. Web services| long-running workflows across organizational boundaries... critically need support for handling or even masking concurrency and component failures.|
A5|RQ1|Principles and Values|Architecture|Atomic actions... allow a wide range of faults to be tolerated by using backward and forward recovery. These actions can have multiple outcomes| allowing flexibility in designing resilient system architectures.|
A5|RQ1|Objective and Motivation|Transforming current practices through innovations|Atomic actions... allow a wide range of faults to be tolerated by using backward and forward recovery. These actions can have multiple outcomes| providing a flexible way to implement resilience in modern systems.|
A5|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Web services| long-running workflows across organizational boundaries... critically need support for handling or even masking concurrency and component failures| but cannot use traditional atomicity concepts.|
A5|RQ2|Gaps|Lack of practical guidelines for implementing principles|Even assuming that a useful relaxed notion of atomicity could be defined and implemented| the task of incorporating this concept into a practical development framework remains largely unexplored and challenging.|
A5|RQ3|Relationship with SWeBok|Software architecture|Atomic actions...allow a wide range of faults to be tolerated by using backward and forward recovery. These actions provide mechanisms that align with architectural concerns for resilience and fault tolerance.|
A5|RQ3|Relationship with SWeBok|Software Quality|The dependability of a computing system is its ability to deliver service that can justifiably be trusted.|
A6|RQ1|Principles and Values|Openness|Keep it open! We believe there is an inherent value in openness.|
A6|RQ1|Principles and Values|Ethics and Responsibility|Responsible technology needs to work tomorrow as well as today.|
A6|RQ1|Principles and Values|Privacy and Security|The more connected products become| the more the opportunity for data collection| control and surveillance.|
A6|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Emerging from a sense of uncertainty| these manifestos create publics for debate| demand attention and call for change.|
A6|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|Designers and developers are increasingly writing manifestos to express frustration and uncertainty as they struggle to negotiate between the possibilities that IoT technologies offer| and the ethical concerns they engender.|
A6|RQ1|Objective and Motivation|Emphasis on collaboration and interdisciplinarity|The authors of the RIOT collection position their community as responsible for dialogue| arguing that its members have a valuable contribution to make to ensure a future where IoT is 'responsible and human-centric' and works for everyone.|
A6|RQ1|Main Guidelines|Promote collaboration and communication|By giving users the ability to share their work more openly| we share challenges| solve problems and build better connected products together.|
A6|RQ1|Main Guidelines|Ensure security and privacy|Arduino believes you should have control of your own cloud service and control who access your data always.|
A6|RQ1|Impact and Applicability|Seek sustainability|Sustainable – against disposable design of fast moving consumer electronic goods.|
A6|RQ1|Call to Action|Adopt practices and principles|The best hope for improving the world is us| and we are responsible for making a better future.|
A6|RQ2|Gaps|Lack of practical guidelines for implementing principles|Doteveryone’s take on understandability pushes heavily for clarity about how a product or service works.|
A6|RQ2|Gaps|Little discussion of the social and political implications of technology|Not having transparency into how the technology is working| making decisions| literally moulding our perception of the world| is inherently political.|
A4|RQ3|Relationship with SWeBok|Software Engineering Models and Methods|CMMN provides the possibility for ad hoc sequencing that emerges by the case. Another alternative to CMMN could be to rely on the belief-desire-intention (BDI) agent perspective.?|
A4|RQ3|Relationship with SWeBok|Software Design|In an ABPMS| a process can be executed considering the current goal and the context to determine the next step of the process| and the agent can be seen as an assistant of the user who is responsible for driving a task through the process| whose real structure is discovered only during the process enactment.|
A7|RQ1|Principles and Values|Process improvement|The CbyC approach has two primary goals – to deliver software with defect rates an order of magnitude lower than current best commercial practice in a cost-effective manner; and to deliver durable software that is resilient to change throughout its lifecycle.|
A7|RQ1|Principles and Values|Architecture|CbyC has delivered software with defect rates of less than 0.1 defects per kloc (1|000 source lines of code) with good productivity – up to around 30 lines of code per day. The achieved defect rates compare very favorably with defect rates reported by Capability Maturity Model (CMM) Level 5.|
A7|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|High integrity software systems are often so large that conventional development processes cannot get anywhere near achieving tolerable defect rates.|
A7|RQ1|Main Guidelines|Adopt new technologies and approaches|SPARK was not specifically designed for any one market sector or industry standard| yet it has met (and exceeded) the requirements of almost all of them in the aerospace| rail| and security industries at the highest integrity levels.|
A7|RQ1|Main Guidelines|Develop tools and techniques|Using strong| tool-supported methods to validate each deliverable. For example carrying out proofs of formal specifications and static analysis of code.|
A7|RQ1|Impact and Applicability|Conduct research and experiments|Experience from a wide variety of projects has confirmed that CbyC is both effective and economical. [...] rigorous techniques employed by CbyC| such as formal methods and proofs| should no longer be viewed as belonging solely to academia| but can be used confidently and effectively in the commercial sector.|
A7|RQ1|Call to Action|Challenge the status quo|Developers are unlikely to change their ways without some social| financial| legal| or regulatory pressure to do so... Regulators: Create a social and legal environment in which quality becomes the norm rather than the exception.|
A7|RQ1|Call to Action|Adopt practices and principles|Developers are unlikely to change their ways without some social| financial| legal| or regulatory pressure to do so... Regulators: Create a social and legal environment in which quality becomes the norm rather than the exception.|
A7|RQ2|Gaps|Lack of practical guidelines for implementing principles|Typically| software development approaches endure a lack of precision that makes it very easy to introduce defects| and very hard to find those defects early.|
A7|RQ2|Gaps|Lack of integration between different areas of software engineering|Typically| software development approaches endure a lack of precision that makes it very easy to introduce defects| and very hard to find those defects early.|
A7|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|The approach has evolved over time and now applies to the entire systems development lifecycle| from validation of the concepts of operation| through to preserving correctness properties during long-term maintenance.|
A7|RQ3|Relationship with SWeBok|Software architecture|The CbyC approach [...] applies to the entire systems development lifecycle| from validation of the concepts of operation| through to preserving correctness properties during long-term maintenance.|
A7|RQ3|Relationship with SWeBok|Software Security|Elements of the CbyC approach have been used mainly for safety-critical applications| but more recently security-critical applications.|
A7|RQ3|Relationship with SWeBok|Software Engineering Process|The key to implementing these principles is to introduce sufficient precision at each step of the development of the software to enable reasoning about the correctness of that step.|
A7|RQ3|Relationship with SWeBok|Software Construction|Write Right. Where possible| we use sound| formal notations for all deliverables. For example| using Z (Spivey 1992) for writing specifications| or using SPARK (Barnes 2003) to write the code| which has an unambiguous semantics.|
A7|RQ3|Relationship with SWeBok|Software Testing|To detect and remove any defects that do occur as early as possible after introduction. [...] Testing becomes a confirmation that the software works| rather than the point at which it must be debugged.|
A8|RQ1|Principles and Values|User focus|The creation of accessible and inclusive technologies must start by understanding the actual user needs and what new technology opportunities there are.|
A8|RQ1|Principles and Values|Collaboration|The success of the Games was also enabled by the co-design of programs| policies| and places with local and disabled people.|
A8|RQ1|Principles and Values|Innovation|Disability has often spurred designers to create novel technologies that have later become universal; for example| both the typewriter and the commercial email client originated from a need to communicate by blind and deaf people.|
A8|RQ1|Principles and Values|Openness|A bottom-up approach to innovation is sparking a generation of people to design their own solutions and to share these to allow others to further evolve their designs.|
A8|RQ1|Principles and Values|Ethics and Responsibility|Accessibility and inclusion were not 'nice to haves|' but rather essential| built into contracting and delivery targets.|
A8|RQ1|Principles and Values|Artificial intelligence|Microsoft has used artificial intelligence to create SeeingAI| a visual assistant for visually impaired people.|
A8|RQ1|Principles and Values|Sustainability|DIX works on exactly such challenges| which are set within a broader global Sustainable Development Goals agenda to ensure no one is left behind.|
A8|RQ1|Principles and Values|Architecture|Digital manufacturing combined with advances in the Internet of Things| robotics| virtual and augmented reality| and low-power sensing are each opening up new and creative opportunities to address inclusion.|
A8|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Recent technological advances in artificial intelligence (AI)| the Internet of Things| and pervasive computing provide great scope for designers and researchers to explore this symbiosis when considering future innovations for disability.|
A8|RQ1|Objective and Motivation|Transforming current practices through innovations|Disability interaction (DIX) views disability as a source of innovation| one that can push the boundaries of the possible.|
A8|RQ1|Objective and Motivation|Emphasis on collaboration and interdisciplinarity|To do this there is a need to move beyond discipline-based inquiry| and even transdisciplinary investigation| to one in which disciplines no longer provide the framing but are replaced by issue-based design.|
A8|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|We propose a new lens| viewing AT as an extension of the mind and body [...] creating technologies to extend people’s capabilities| rather than specifically designing for impairment.|
A8|RQ1|Objective and Motivation|Solve existing problems and challenges|Globally| just 10 percent of the people who need AT have access to it| representing 'one of the most pressing problems facing the global health sector'.|
A8|RQ1|Objective and Motivation|Changing culture and practices|The time is ripe for HCI to lead the way in making the world truly accessible and inclusive.|
A8|RQ1|Main Guidelines|Adopt new technologies and approaches|DIX will utilize Dan Saffer’s four types of interaction design practice [...] to co-create completely new ways of interacting with technology.|
A8|RQ1|Main Guidelines|Develop tools and techniques|Digital manufacturing combined with advances in the Internet of Things| robotics| virtual and augmented reality| and low-power sensing are each opening up new and creative opportunities to address inclusion.|
A8|RQ1|Main Guidelines|Promote collaboration and communication|DIX will work with disabled people and disabled people’s organizations to define the problem| create the solution| and the maker movement on how to grow communities of practice.|
A8|RQ1|Main Guidelines|Consider context and application|DIX will utilize Dan Saffer’s four types of interaction design practice [...] to co-create completely new ways of interacting with technology.|
A8|RQ1|Main Guidelines|Adapt and evolve|The resulting models will drive further research questions and insights| evolving the research manifesto put forward here.|
A8|RQ1|Main Guidelines|Share knowledge|We will create an open source community of researchers and innovators to co-develop research and design protocols with disabled people.|
A8|RQ1|Call to Action|Adopt new technologies and approaches|If you would like to join this movement| which is determined to achieve breakthrough technologies that will ensure no one is left behind| you are warmly invited to join the community.|
A8|RQ1|Call to Action|Collaborate and share|We will create an open source community of researchers and innovators to co-develop research and design protocols with disabled people.|
A8|RQ1|Call to Action|Educate and train|We plan to create a global community of people who can contribute to the development of the curriculum for DIX.|
A8|RQ1|Call to Action|Building and strengthening communities|We plan to create a global community of people who can contribute to the development of the curriculum for DIX.|
A8|RQ1|Call to Action|Challenge the status quo|DIX puts disability front and center in the design process| and in so doing aims to achieve breakthrough technologies that ensure no one is left behind.|
A8|RQ2|Gaps|Lack of practical guidelines for implementing principles|Globally| just 10 percent of the people who need AT have access to it| representing 'one of the most pressing problems facing the global health sector'.|
A8|RQ2|Gaps|Little discussion of the social and political implications of technology|Globally| just 10 percent of the people who need AT have access to it| representing 'one of the most pressing problems facing the global health sector'.|
A8|RQ3|Relationship with SWeBok|Software architecture|Digital manufacturing combined with advances in the Internet of Things| robotics| virtual and augmented reality| and low-power sensing are opening up new opportunities to address inclusion.|
A9|RQ1|Principles and Values|User focus|Currently| most existing creation platforms are tailored to specific types of end-users| mostly people with a substantial background in or affinity with technology.|
A9|RQ1|Principles and Values|Collaboration|Sharing creations and talking about them with other people is a key characteristic of DiY culture.|
A9|RQ1|Principles and Values|Innovation|It should motivate them to think out of the box| to generate innovative ideas| solutions or content| constrained as little as possible by existing technology or conventions.|
A9|RQ1|Principles and Values|Openness|Freedom is an important aspect of DiY: freedom to begin when and however one wishes| and freedom to end without finishing.|
A9|RQ1|Principles and Values|Process improvement|The system should guide users to reformulate or organize ideas| solutions or content into useful components.|
A9|RQ1|Objective and Motivation|Transforming current practices through innovations|The manifesto aims at providing a framework for do-it-yourself systems enabling non-technical users to create internet-of-things applications.|
A9|RQ1|Objective and Motivation|Emphasis on collaboration and interdisciplinarity|Several user studies including non-technical users| and highlight aspects that should be taken into account in order to open up internet-of-things creation to a wider audience.|
A9|RQ1|Main Guidelines|Adopt new technologies and approaches|The system should be a platform that inspires and supports people to be creative| to self-actualize in their projects.|
A9|RQ1|Main Guidelines|Develop tools and techniques|Useful components| that are essentially small applications with fractal characteristics| can be compared to a LEGO brick in terms of reusability and composability.|
A9|RQ1|Main Guidelines|Conduct research and experiments|Qualitative research was conducted to understand how and why users would create their own smart experiences in an Internet-of-things world.|
A9|RQ1|Impact and Applicability|Promote collaboration and communication|Collaboration is supported and facilitated between users with various roles in the creation process: creators| debuggers| cleaners| collectors| spectators/fans| etc.|
A9|RQ1|Impact and Applicability|Simplify and improve usability|Instead of requiring programming skills from every user| the system enables the users to start from (sets of) useful components made by others with more computational skills.|
A9|RQ1|Call to Action|Collaborate and share|Sharing creations and talking about them with other people is a key characteristic of DiY culture.|
A9|RQ1|Call to Action|Educate and train|Users have different levels of computational thinking. The system should support at least three different types of users (the amateur| the professional-amateur and the professional).|
A9|RQ2|Gaps|Lack of practical guidelines for implementing principles|Although recently a lot of work has been done to satisfy and enhance this end-user programming requirement for context awareness| applications are usually designed for one specific group of end-users.|
A9|RQ2|Gaps|Lack of integration between different areas of software engineering|There is still a substantial amount of work to be done in order to allow non-technical users to write a program without requiring any programming skills.|
A9|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|Although the existing DiY-related manifestos described above do offer links and starting points| many issues related to DiY IoT creation have not yet been touched upon.|
A9|RQ3|Relationship with SWeBok|Software Requirements|End-users should be enabled to describe their own context model| related to the environment they live in.|
A9|RQ3|Relationship with SWeBok|Software architecture|The system should support at least three different types of users (the amateur| the professional-amateur and the professional) in order to reach an equal level of computational complexity.|
A9|RQ3|Relationship with SWeBok|Software Design|By using such sets| users can create projects (e.g. an application that makes a tune play when one opens a jewelry box).|
A9|RQ3|Relationship with SWeBok|Software Construction|The smallest entity in the system is called a ‘useful component’ (e.g. a hardware light sensor that can transmit values to a system).|
A9|RQ3|Relationship with SWeBok|Software Engineering Process|The system should guide users to reformulate or organize ideas| solutions or content into useful components.|
A9|RQ3|Relationship with SWeBok|Software Engineering Models and Methods|High-level abstraction models are presented as 'easy' programming methods.|
A9|RQ3|Relationship with SWeBok|Software Quality|It should motivate them to think out of the box| to generate innovative ideas| solutions or content| constrained as little as possible by existing technology or conventions.|
A9|RQ3|Relationship with SWeBok|Software Engineering Professional Practice|An increasingly popular example of open design can be found in 3D printing| where downloadable designs can be shared| allowing users to easily adapt the design to their own tastes.|
A9|RQ3|Relationship with SWeBok|Computing Foundations|The system should support a spectrum of expertise in computational thinking by offering different layers of computational abstractions.|
A10|RQ1|Principles and Values|Process improvement|The concept of soundiness seeks to improve analysis processes balancing precision| scalability| and soundness.|
A10|RQ1|Main Guidelines|Establish standards and guidelines|We issue a call to the community to clearly identify the nature and extent of unsoundness in static analyses.|
A10|RQ1|Main Guidelines|Adapt and evolve|Soundy analysis aims to be as sound as possible without excessively compromising precision and scalability.|
A10|RQ1|Impact and Applicability|Adapt and evolve|A practical analysis| therefore| adapts by deliberately under-approximating certain complex language features.|
A10|RQ1|Call to Action|Challenge the status quo|We strongly feel the community should embrace the practical necessity of unsoundness and rethink soundness expectations.|
A10|RQ1|Call to Action|Adopt practices and principles|The programming language research community should adopt the notion of soundiness as a guiding principle.|
A11|RQ1|Principles and Values|User focus|Meta-design shifts control from designers to users and empowers users to create and contribute their own visions and objectives.|
A11|RQ1|Principles and Values|Collaboration|Meta-design creates the enabling conditions for collaborative design in which all participants| not just skilled computer professionals| incrementally acquire ownership of problems and contribute actively to their solutions.|
A11|RQ1|Principles and Values|Innovation|Meta-design characterizes objectives| techniques| and processes for creating new media and environments allowing 'owners of problems' (that is| end users) to act as designers.|
A11|RQ1|Principles and Values|Process improvement|We propose a meta-design approach| where users are motivated to learn by examples and demonstrations of working systems to show them what is achievable.|
A11|RQ1|Principles and Values|Change|To accommodate unexpected issues at use time| systems must be 'underdesigned' at design time.|
A11|RQ1|Principles and Values|Architecture|Meta-design provides a pathway to transform development as coding—a discrete computing activity—into design of artifacts as part of the users’ work (or leisure) practice.|
A11|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|The future success of EUD depends on creating tools that end users are motivated to learn and use in daily work practices.|
A11|RQ1|Objective and Motivation|Emphasis on collaboration and interdisciplinarity|Meta-design creates interactive systems that define the conditions for interaction... interaction as the real object of creative production.|
A11|RQ1|Objective and Motivation|Transforming current practices through innovations|Meta-design puts owners of problems in charge of creating open| evolvable systems that address the limitations associated with closed systems.|
A11|RQ1|Main Guidelines|Promote collaboration and communication|Meta-design provides users with opportunities| tools| and social structures to extend the system to fit their needs.|
A11|RQ1|Main Guidelines|Adapt and evolve|Systems that evolve over a sustained time span must continually alternate between periods of activity| unplanned evolution| and periods of deliberate (re)structuring and enhancement.|
A11|RQ1|Main Guidelines|Develop tools and techniques|The goal for EUD tools is to reduce the learning burden while providing powerful facilities to address a wide range of problems.|
A11|RQ1|Call to Action|Adopt practices and principles|Meta-design has the potential to create a culture in which all participants in collaborative design processes can express themselves and engage in personally meaningful activities.|
A11|RQ1|Call to Action|Creating a better future| it must address the challenges of creating new mindsets| new sources of creativity| cultural changes| and innovative societies.|
A11|RQ2|Gaps|Lack of practical guidelines for implementing principles|Given that some learning burden will always be present| tools must motivate their users. (Implies absence of detailed practical guidelines.)|
A11|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|EUD is only a partial success story. Here| we argue the spread of EUD depends on a fine balance between user motivation| effective tools| and management support. (Suggesting a lack of continuous adaptation/evolution of manifestos.)|
A11|RQ3|Relationship with SWeBok|Software Requirements|Because the needs| objectives| and situational contexts of users can only be anticipated at design time| users often find the system unfit for their tasks at use time. (Related to requirement elicitation and validation.)|
A11|RQ3|Relationship with SWeBok|Software architecture|Meta-design provides a pathway to transform development as coding—a discrete computing activity—into design of artifacts as part of the users’ work practice. (Pertains to the architecture definition and evaluation process.)|
A11|RQ3|Relationship with SWeBok|Software Design| programming is only part of an end-user developer’s needs. (Relates to software design principles and methods.)|
A11|RQ3|Relationship with SWeBok|Software Quality|Critical success factors for EUD depend on the domain. In most business domains| training| technical| and management support are vital for helping EUD flourish. (Quality improvement implied by critical success factors.)|
A11|RQ3|Relationship with SWeBok|Software Engineering Process|We have developed the seeding| evolutionary growth| and reseeding (SER) process model| a descriptive and prescriptive model for large evolving systems.|
A12|RQ1|Principles and Values|Privacy and Security|It is therefore of paramount importance to fully understand the characteristics| principles and challenges that underlie the development of secure information systems.|
A12|RQ1|Principles and Values|Process improvement|To adequately consider security issues during the information systems development life cycle| security should be integrated within information systems engineering languages| methods| methodologies and processes.|
A12|RQ1|Principles and Values|Collaboration|Information systems engineering and security engineering research communities traditionally work independently... it is important to unify the efforts on the two fields.|
A12|RQ1|Objective and Motivation|Solve existing problems and challenges|Securing information systems raises a set of intertwined issues in the areas of security engineering and information systems engineering... However| existing methods usually fail to provide precise enough semantics to support the analysis and design of security requirements and properties.|
A12|RQ1|Objective and Motivation|Transforming current practices through innovations|The main aim of this paper is to propose such an engineering discipline for secure information systems development| which we call Secure Information Systems Engineering.|
A12|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|Security is usually considered after the analysis| design and implementation of the system has been completed... this usually results in problematic systems and security vulnerabilities.|
A12|RQ1|Main Guidelines|Establish standards and guidelines|Security should be considered from the early stages of the development process and security requirements should be defined alongside with the system’s requirements specification.|
A12|RQ1|Main Guidelines|Promote collaboration and communication|It is important to unify the efforts on the two fields... to produce solutions that truly work.|
A12|RQ1|Main Guidelines|Share knowledge|It is of paramount importance to produce tools to support the development process... validate the security functionalities of the proposed solution against the security requirements of the system.|
A12|RQ1|Impact and Applicability|Adopt new technologies and approaches|The production of novel techniques| methods| processes and tools which will integrate security and information systems engineering principles.|
A12|RQ1|Impact and Applicability|Develop tools and techniques|A tool should not only support developers in modelling and reasoning about security (and functional requirements) during the analysis stage| but it should help to transform the requirements to design| check the consistency of the proposed solution.|
A12|RQ1|Call to Action|Collaborate and share|There is also need to encourage a curriculum which incorporates the different aspects coming from the various interdisciplinary subjects in order to provide the required knowledge.|
A12|RQ2|Gaps|Lack of practical guidelines for implementing principles|These approaches lack the definition of a structured process for considering security. A well-defined and structured process is of paramount importance when considering security during the development.|
A12|RQ2|Gaps|Lack of integration between different areas of software engineering|Information systems engineering and security engineering research communities traditionally work independently...This separation not only creates a void in the proposed solutions but it also results in restricted sharing of existing knowledge.|
A12|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|One of the main problems of considering security during the development stages of an information system is the lack of methods and techniques to trace the provided functionality to security requirements and also test the solution before the implementation of the system.|
A12|RQ3|Relationship with SWeBok|Software architecture|Securing information systems raises a set of intertwined issues in the areas of security engineering and information systems engineering... security mechanisms are enforced into the system without considering the overall design and this usually results in problematic systems and security vulnerabilities.|
A12|RQ3|Relationship with SWeBok|Software Requirements|Requirements engineers do not usually receive appropriate training in eliciting| analysing and specifying security requirements. As a result| they often confuse them with security mechanisms which are used to fulfil them.|
A12|RQ3|Relationship with SWeBok|Software Engineering Process|Security should be considered from the early stages of the development process and security requirements should be defined alongside with the system’s requirements specification...To adequately consider security issues during the information systems development life cycle| security should be integrated within methodologies and processes.|
A12|RQ3|Relationship with SWeBok|Software Security|According to Anderson (2001)| 'security engineering is about building systems to remain dependable in the face of malice| error or mischance'... security is concerned with methods providing cost-effective and operationally effective protection of information systems from undesirable events.|
A12|RQ3|Relationship with SWeBok|Software Engineering Professional Practice|Professional training courses and university curriculum should help towards the solution of the above problem. However| they propagate it. Information systems and security engineering training as well as curriculum development in universities follows the separation of the two research areas.|
A13|RQ1|Principles and Values|User focus|Software systems mediate so many aspects of our lives. However| software practice has a tendency to focus only on the immediate effects and tangible benefits of software products and platforms.|
A13|RQ1|Principles and Values|Collaboration|This article presents a cross-disciplinary initiative to create a common ground and a point of reference for the global community of research and practice in software and sustainability.|
A13|RQ1|Principles and Values|Innovation|By trading off longer-term sustainability questions for shorter-term success criteria| we accumulate threats to sustainability. We argue that this trade-off itself is unnecessary.|
A13|RQ1|Principles and Values|Openness|The Karlskrona Manifesto is a vehicle for a much-needed conversation about sustainability within and beyond the software community.|
A13|RQ1|Principles and Values|Process improvement|Efforts to increase the maintainability of software products and facilitate their evolution have often focused on improving architecture| decreasing lifecycle costs and managing technical debt.|
A13|RQ1|Principles and Values|Change|There is a rapidly increasing awareness of the fundamental need and desire for a more sustainable world| and there is a lot of genuine desire and goodwill - but this alone can be ineffective unless we come to understand that...|
A13|RQ1|Principles and Values|Sustainability|Sustainability is at its heart a systemic concept and has to be understood on a set of dimensions| including social| environmental| economic| individual| and technical.|
A13|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Sustainability has emerged as a broad concern for society. Many engineering disciplines have been grappling with challenges in how we sustain technical| social and ecological systems.|
A13|RQ1|Objective and Motivation|Transforming current practices through innovations|Technology is part of the dilemma and part of possible responses. We often talk about the immediate impact of technology| but rarely acknowledge its indirect and systemic effects.|
A13|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|The lack of long-term thinking in software engineering research and practice has been critiqued throughout the history of the discipline.|
A13|RQ1|Main Guidelines|Address ethical and social issues|The codes of ethics for software professionals must be revisited to account for second and third-order effects of software systems.|
A13|RQ1|Main Guidelines|Seek sustainability|Sustainability is fundamental to our society. The current state of our world is unsustainable in more ways than we often recognize.|
A13|RQ1|Impact and Applicability|Ensure security and privacy|The lack of long-term thinking over security considerations in SE has led to a ‘digital dark age’ where information assets become unreadable due to rapid technology changes.|
A13|RQ2|Gaps|Lack of practical guidelines for implementing principles|There is a narrow perception of sustainability that frames it as protecting the environment or being able to maintain a business activity| whereas it is a pervasive concern that translates into discipline-specific questions in each area it applies.|
A13|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|While increasing attention on the broader effects of software on society has helped develop our understanding of these issues| a common perspective on how to incorporate sustainability thinking into the design of software systems is missing.|
A13|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|Sustainability requires long-term thinking. Consider multiple timescales| including longer-term indicators in assessment and decisions.|
A13|RQ3|Relationship with SWeBok|Software architecture|Improving architecture| decreasing lifecycle costs| and managing technical debt have often been the focus when considering sustainability in software engineering.|
A13|RQ3|Relationship with SWeBok|Software Quality|Technical sustainability of a software system cannot be separated from social and financial sustainability of the organization that created it.|
A13|RQ3|Relationship with SWeBok|Software Security|Neumann has criticized the lack of long-term thinking over security considerations in SE| highlighting the risks of ignoring sustainability.|
A14|RQ1|Principles and Values|User focus|Users before algorithms: Mining algorithms are only useful in industry if users fund their use in real-world applications.|
A14|RQ1|Principles and Values|Collaboration|Our experience tells us that successful inductive software engineering projects require extensive user input.|
A14|RQ1|Principles and Values|Innovation|We made the case above that successful inductive software engineering projects require extensive user input. User input is not a primary concern of Figure 2.|
A14|RQ1|Principles and Values|Openness|Be open-minded: It is unwise to enter into an inductive study with fixed hypotheses or approaches particularly for data that has not been mined before.|
A14|RQ1|Principles and Values|Ethics and Responsibility|Do smart learning: Important outcomes are riding on your conclusions. Make sure that you check and validate them.|
A14|RQ1|Principles and Values|Process improvement|Plan for scale: In any industrial application| the data mining method is repeated multiple times to either answer an extra user question| make some enhancement and/or bug fix to the method| or to deploy it to a different set of users.|
A14|RQ1|Principles and Values|Change|Early feedback: Continuous and early feedback from users| allows needed changes to be made as soon as possible.|
A14|RQ1|Objective and Motivation|Transforming current practices through innovations|We present both the principles of our manifesto as well as tips (generalizations drawn from commonalities among our individual experience) to aid those who choose to follow these principles.|
A14|RQ1|Objective and Motivation|Solve existing problems and challenges|Understanding user goals to inductively generate the models that most matter to the user.|
A14|RQ1|Main Guidelines|Adopt new technologies and approaches|Broad skill set| big toolkit: Successful inductive engineers routinely try multiple inductive technologies.|
A14|RQ1|Main Guidelines|Develop tools and techniques|To handle the wide range of possible goals of different goals| an inductive engineer should be ready to deploy a wide range of tools.|
A14|RQ1|Impact and Applicability|Ensure security and privacy|Live with the data you have: You go mining with the data you have—not the data you might want or wish to have at a later time.|
A14|RQ1|Call to Action|Creating a better future|We look forward to a rapid evolution of this manifesto as more inductive engineers (a) discuss their methods and (b) find common themes in their work.|
A14|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|It would be useful to augment those classes with inductive engineering project work [...] Such projects could structure their training around the scout and survey stage.|
A14|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|We look forward to a rapid evolution of this manifesto as more inductive engineers (a) discuss their methods and (b) find common themes in their work.|
A14|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|It would be useful to document the patterns of the expert users and the anti-patterns of the novices.|
A14|RQ3|Relationship with SWeBok|Software architecture|Plan for scale: In any industrial application| the data mining method is repeated multiple times to either answer an extra user question| make some enhancement and/or bug fix to the method| or to deploy it to a different set of users.|
A14|RQ3|Relationship with SWeBok|Software Quality|Do smart learning: Important outcomes are riding on your conclusions. Make sure that you check and validate them.|
A14|RQ3|Relationship with SWeBok|Software Testing|CRANE is a risk assessment and test prioritization tool used at Microsoft that alerts developers if the next software check-in might be problematic.|
A14|RQ3|Relationship with SWeBok|Software Engineering Process|The development effort often takes weeks/ months/ years of work for scout/ survey/ build (respectively).|
A15|RQ1|Principles and Values|Collaboration|Beyond specific techniques| we hope the guidelines in this paper can provide a focus for discussion among researchers| router vendors| protocol designers| and network operators — the stakeholders in the measurement enterprise.|
A15|RQ1|Principles and Values|Process improvement|This paper deals with the problem of producing effective measurements to help run large networks more effectively. We focus on novel approaches to passive measurement.|
A15|RQ1|Principles and Values|Change|And yet there are signs that change is possible. Cisco Express Forwarding offers per-prefix counters| a massive step up in utility (and implementation complexity) from SNMP counters.|
A15|RQ1|Principles and Values|Architecture|Unlike the telephone network| where observability and controllability was built into the design| the simplicity of the Internet service model has made it difficult to observe.|
A15|RQ1|Objective and Motivation|Solve existing problems and challenges|Despite these winds of change| other than the Juniper DCU solution| no solution represents a concerted effort to put all the options (i.e.| new router implementation features| protocol changes| new tools) together to orchestrate effective systems solutions to user needs.|
A15|RQ1|Main Guidelines|Establish standards and guidelines|We use the principles as a yardstick in Section III to examine existing proposals. We also use the principles to suggest new solutions to two specific problems in Section IV and Section V.|
A15|RQ1|Impact and Applicability|Develop tools and techniques|We illustrate this thesis using two examples. Our major example is that of measuring traffic matrices using class counters and class sampling.|
A15|RQ2|Gaps|Lack of integration between different areas of software engineering|Unlike the telephone network| where observability and controllability was built into the design| the simplicity of the Internet service model has made it difficult to observe.|
A15|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|This leads to either the need to trick the network into providing data| or to collect| correlate| and synthesize vast amounts of spatially separated data.|
A15|RQ3|Relationship with SWeBok|Software architecture|We believe that there is a large semantic gap between data provided easily by the network and the needs of users like ISPs.|
A15|RQ3|Relationship with SWeBok|Software Quality|Failure to address the semantic gap will lead to a continued proliferation of ad hoc tools and a lack of coherent data| with a large hidden cost in reduced productivity for network managers.|
A16|RQ1|Principles and Values|Collaboration|The vision of the Pragmatic Web is thus to augment human collaboration effectively by appropriate technologies| such as systems for ontology negotiations| for ontology-based business interactions| and for pragmatic ontology-building efforts in communities of practice.|
A16|RQ1|Principles and Values|Openness|The best hope for the Semantic Web is to encourage the emergence of communities of interest and practice that develop their own consensus knowledge on the basis of which they will standardize their representations.|
A16|RQ1|Principles and Values|Artificial intelligence|Data and rules for reasoning about data and information are systematically described| for example by using the Resource Description Framework (RDF)| after which they can be more easily shared and used by people as well as by distributed software agents.|
A16|RQ1|Principles and Values|Architecture|Ontologies represent concepts and relations between the concepts; these can be hierarchical relations| whole-part relations| or any other meaningful type of linkage between the concepts.|
A16|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|The goal of the Semantic Web is to develop the basis for intelligent applications that enable more efficient information use by not just providing a set of linked documents but a collection of knowledge repositories with meaningful content and additional logic structure.|
A16|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|The most problematic assumption is that context-free facts and logical rules would be sufficient [...] It is practically impossible to describe data well enough for it to be used in arbitrary applications.|
A16|RQ1|Main Guidelines|Promote collaboration and communication|Communication partners have to agree continuously on what they can assume to be the shared background. This is especially important in an organizational context where parties from different professional| social| and cultural backgrounds need to understand each other.|
A16|RQ1|Impact and Applicability|Develop tools and techniques|In order to realize the Pragmatic Web vision| new systematic analysis approaches are required. Insights from the language-action perspective| among others| can serve as a theoretical foundation for communication modeling and system design.|
A16|RQ2|Gaps|Lack of integration between different areas of software engineering|An ontology is an agreed-upon conceptual specification used for making ontological commitments. The crucial question is: how do human agents commit and renegotiate their meaning commitments? And what kind of socio-technical infrastructure is required to leverage these conversations?|
A16|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|Ontologies are not fixed| but co-evolve with their communities of use.|
A16|RQ3|Relationship with SWeBok|Software architecture|Ontologies enable clear and precise interorganizational communication and interaction within distinct professional boundaries.|
A16|RQ3|Relationship with SWeBok|Software Quality|To set the research agenda for this important next phase in the evolution of the Web| we will be conducting the First International Pragmatic Web Conference this year in Stuttgart| Germany.|
A17|RQ1|Principles and Values|Architecture|We seek a firm foundation for the future of data. We do not believe that the database language SQL is capable of providing such a foundation. Instead| we believe that any such foundation must be firmly rooted in the Relational Model of Data| first presented to the world in 1969 by E. F. Codd in reference [6].|
A17|RQ1|Principles and Values|Innovation|We fully acknowledge the desirability of supporting certain features that have been much discussed in more recent times| including some that are commonly regarded as aspects of Object Orientation.|
A17|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|Reference [25]| while correctly espousing the Relational Model| fails to mention and emphasize the hopelessness of continuing to follow a commonly accepted perversion of that model| namely SQL| in fond pursuit of the Relational Model's ideals.|
A17|RQ1|Main Guidelines|Establish standards and guidelines|D shall be subject to certain prescriptions and certain proscriptions. Some prescriptions arise from the Relational Model of Data| and we shall call these Relational Model Prescriptions| abbreviated to RM Prescriptions.|
A17|RQ1|Impact and Applicability|Develop tools and techniques|We do believe that OO has significant contributions to make in the areas of user-defined data types and inheritance| but there is still no consensus on an abstract model| even with respect to these important topics.|
A17|RQ2|Gaps|Lack of integration between different areas of software engineering|We fully acknowledge the desirability of supporting certain features that have been much discussed in more recent times| including some that are commonly regarded as aspects of Object Orientation. We believe that these features are orthogonal to the Relational Model| and therefore that the Relational Model needs no extension.|
A17|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|Unfortunately| the same cannot quite be said of the OO Prescriptions and Proscriptions| as there is not| at the time of writing| a clear and commonly agreed model for them to be based on.|
A17|RQ3|Relationship with SWeBok|Software Engineering Models and Methods|The Relational Algebra as defined in reference [11] (Part II) shall be expressible without excessive circumlocution.|
A18|RQ1|Principles and Values|Change|Computer architecture is about to undergo| if not another revolution| then a vigorous shaking-up.|
A18|RQ1|Principles and Values|Process improvement|As a result| system designers and software engineers can no longer rely on increasing clock speed to hide software bloat.|
A18|RQ1|Principles and Values|Architecture|Instead| they have recently started shipping 'multicore' architectures| in which multiple processors (cores) communicate directly through shared hardware caches| providing increased concurrency instead of increased clock speed.|
A18|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|This adaptation will not be easy. Conventional synchronization techniques based on locks and conditions are unlikely to be effective in such a demanding environment.|
A18|RQ1|Objective and Motivation|Transforming current practices through innovations|Transactional memory is a computational model in which threads synchronize by optimistic| lock-free transactions.|
A18|RQ1|Main Guidelines|Develop tools and techniques|This synchronization model promises to alleviate many (perhaps not all) of the problems associated with locking| and there is a growing community of researchers working on both software and hardware support for this approach.|
A18|RQ1|Impact and Applicability|Establish standards and guidelines|This talk will survey the area| with a focus on open research problems.|
A18|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|This adaptation will not be easy. Conventional synchronization techniques based on locks and conditions are unlikely to be effective in such a demanding environment.|
A18|RQ2|Gaps|Lack of integration between different areas of software engineering|Coarse-grained locks| which protect relatively large amounts of data| do not scale| and fine-grained locks introduce substantial software engineering problems.|
A18|RQ3|Relationship with SWeBok|Software architecture|Instead| they have recently started shipping 'multicore' architectures| in which multiple processors (cores) communicate directly through shared hardware caches| providing increased concurrency instead of increased clock speed.|
A18|RQ3|Relationship with SWeBok|Software Engineering Models and Methods|Transactional memory is a computational model in which threads synchronize by optimistic| lock-free transactions.|
A18|RQ3|Relationship with SWeBok|Software Quality|This synchronization model promises to alleviate many (perhaps not all) of the problems associated with locking| and there is a growing community of researchers working on both software and hardware support for this approach.|
A19|RQ1|Principles and Values|Innovation|Traditional assurance is seen as a brake on innovation and often costly and time consuming. We therefore propose a modernized framework| 'Assurance 2.0|' as an enabler that supports innovation and continuous incremental assurance.|
A19|RQ1|Principles and Values|Artificial intelligence|Some of these are new| for example| autonomous systems with major functions driven by machine learning and AI| and ultra-rapid system development| while others are the familiar| persistent issues of the need for efficient| effective and timely assurance.|
A19|RQ1|Principles and Values|Architecture|This framework aims to support reasoning and communication about the behavior and trustworthiness of engineered systems and| ultimately| their certification.|
A19|RQ1|Objective and Motivation|Transforming current practices through innovations|We instead propose that assurance can be an enabler for innovation and a constructive element in a holistic design process.|
A19|RQ1|Objective and Motivation|Solve existing problems and challenges|System assurance is confronted by significant challenges. Some of these are new| for example| autonomous systems with major functions driven by machine learning and AI| and ultra-rapid system development| while others are the familiar| persistent issues of the need for efficient| effective and timely assurance.|
A19|RQ1|Main Guidelines|Address ethical and social issues|The indefeasibility criterion applied to assurance cases requires a comprehensive search for defeaters to the argument.|
A19|RQ1|Impact and Applicability|Establish standards and guidelines|This framework aims to support reasoning and communication about the behavior and trustworthiness of engineered systems and| ultimately| their certification. It builds on the notion of an 'Assurance Case|' where claims about the system are justified by an argument based on evidence.|
A19|RQ1|Impact and Applicability|Seek sustainability|Current assurance cases have served traditional safety-critical systems well| but we have observed them floundering when confronted by radically new challenges such as autonomous systems driven by machine learning| by new stakeholders such as the AI community| and by applications with a security focus.|
A19|RQ1|Call to Action|Creating a better future|We have described and illustrated Assurance 2.0| whose purpose is to respond to the assurance challenges posed by recent developments in system design and deployment| and to provide a framework in which assurance can become more dynamic and can enable innovation and greater automation.|
A19|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|Assurance is often seen as a drag on innovation and as an activity that is additional to (and generally comes after) the 'real work' of design and implementation.|
A19|RQ3|Relationship with SWeBok|Software architecture|This framework aims to support reasoning and communication about the behavior and trustworthiness of engineered systems and| ultimately| their certification.|
A19|RQ3|Relationship with SWeBok|Software Quality|Key elements of Assurance 2.0 are: Use of a limited repertoire of five building 'blocks' for arguments| with an associated framework that reduces the bewildering choice of free-form arguments by guiding assurance case development toward productive directions| and that eliminates many errors 'by construction' through use of rigorous side conditions.|
A20|RQ1|Principles and Values|User focus|We argue that requirements specification and verification can go a long way to make machine learning models even more fitting to the real world| especially in critical domains.|
A20|RQ1|Principles and Values|Collaboration|Our proposal enjoys the same spirit of works such as [15–17] which advocate for a more structured approach to machine learning model development.|
A20|RQ1|Principles and Values|Innovation|Our proposal represents a significant shift from the traditional 'performance-driven' machine learning development pipeline to a 'requirements-driven' machine learning development pipeline.|
A20|RQ1|Principles and Values|Ethics and Responsibility|We argue that requirements definition and satisfaction can go a long way to make machine learning models even more fitting to the real world| by reducing the risk of getting potentially dangerous unintended behaviors.|
A20|RQ1|Principles and Values|Privacy and Security|This obviously might make the development process more complex| because different requirements might be contradictory with one another: a problem that is well known in software engineering.|
A20|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Results like those above| though ground-breaking| overshadow the dangers that come with the careless use of machine learning models in critical applications.|
A20|RQ1|Objective and Motivation|Transforming current practices through innovations|We propose a novel pyramid machine learning development process which highlights how the requirement definition can help improving every single step of the standard machine learning model development process.|
A20|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|This automatically calls for the inclusion of the requirements in the development process| which are at the core of any development pipeline proposed in the field of software engineering.|
A20|RQ1|Main Guidelines|Address ethical and social issues|Indeed| we are proposing a 'requirements-driven' machine learning development pipeline in which performance is just one of the many requirements the model has to satisfy.|
A20|RQ1|Main Guidelines|Promote collaboration and communication|The pyramid shape allows to better highlight the close relationship that must exist between the requirement definition phase and all the others in the pipeline.|
A20|RQ1|Impact and Applicability|Develop tools and techniques|To this end| a good example is given by the recent research in the neuro-symbolic field| where researchers have started developing models that are guaranteed by-design to be compliant with a set of given requirements expressed as logical constraints.|
A20|RQ1|Call to Action|Adopt practices and principles|We therefore claim that the requirements’ definition should precede and involve the entire machine learning model development cycle| including the dataset construction.|
A20|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Despite the huge amount of work that can be categorized under the umbrella of 'requirement driven' machine learning| this is the first paper which explicitly advocates for a general model development methodology in which the requirement definition is a first class citizen.|
A20|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|Further| it is unrealistic to expect that all requirements are always known a priori and that they remain immutable throughout the development process.|
A20|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|It is clear that taking into account the requirement in the dataset definition and model construction will likely lead to models which will be easier to verify with respect to the stated requirements.|
A20|RQ3|Relationship with SWeBok|Software architecture|We propose a novel pyramid machine learning development process which (i) highlights how the requirement definition can help improving every single step of the standard machine learning model development process| and (ii) takes into account that some requirement adjustment might be necessary.|
A20|RQ3|Relationship with SWeBok|Software Quality|Our proposal enjoys the same spirit of works such as [15–17] which advocate for a more structured approach to machine learning model development.|
A20|RQ3|Relationship with SWeBok|Software Security|This obviously might make the development process more complex| because different requirements might be contradictory with one another: a problem that is well known in software engineering.|
A20|RQ3|Relationship with SWeBok|Software Engineering Process|From this perspective| this paper can be seen as a call to adopt the general methodologies used in software engineering for generic system development to the specific field of machine learning| highlighting the risks of not doing so.|
A21|RQ1|Principles and Values|User focus|Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.|
A21|RQ1|Principles and Values|Collaboration|Business people and developers must work together daily throughout the project.|
A21|RQ1|Principles and Values|Openness|At regular intervals| the team reflects on how to become more effective| then tunes and adjusts its behavior accordingly.|
A21|RQ1|Principles and Values|Process improvement|The best architectures| requirements| and designs emerge from self-organizing teams.|
A21|RQ1|Principles and Values|Change|Welcome changing requirements| even late in development. Agile processes harness change for the customer’s competitive advantage.|
A21|RQ1|Principles and Values|Architecture|Continuous attention to technical excellence and good design enhances agility.|
A21|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|We are uncovering better ways of developing software by doing it and helping others do it.|
A21|RQ1|Objective and Motivation|Transforming current practices through innovations|Through this work we have come to value: Individuals and interactions over processes and tools.|
A21|RQ1|Objective and Motivation|Changing culture and practices|While there is value in the items on the right| we value the items on the left more.|
A21|RQ1|Main Guidelines|Promote collaboration and communication|The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.|
A21|RQ1|Impact and Applicability|Adopt new technologies and approaches|Deliver working software frequently| from a couple of weeks to a couple of months| with a preference to the shorter timescale.|
A21|RQ1|Impact and Applicability|Simplify and improve usability|Simplicity – the art of maximizing the amount of work not done – is essential.|
A21|RQ1|Call to Action|Educate and train|We are uncovering better ways of developing software by doing it and helping others do it.|
A21|RQ3|Relationship with SWeBok|Software Requirements|The best architectures| requirements| and designs emerge from self-organizing teams.|
A21|RQ3|Relationship with SWeBok|Software architecture|Continuous attention to technical excellence and good design enhances agility.|
A21|RQ3|Relationship with SWeBok|Software Engineering Process|We are uncovering better ways of developing software by doing it and helping others do it.|
A21|RQ3|Relationship with SWeBok|Software Quality|Working software is the primary measure of progress.|
A21|RQ3|Relationship with SWeBok|Software Engineering Professional Practice|Build projects around motivated individuals. Give them the environment and support they need| and trust them to get the job done.|
A22|RQ1|Principles and Values|User focus|Software has a pervasive role in the digital society. It is expected to support the needs of citizens| the industry sectors and the society at large without doing unnecessary harm.|
A22|RQ1|Principles and Values|Collaboration|We envisage an evolution of the field where research synergies with other disciplines| and across sectors| are not only mutually beneficial but instrumental for a significant scientific advancement and a true positive impact on society.|
A22|RQ1|Principles and Values|Innovation|To make software development more effective and efficient| we need to create techniques and tools to analyze requirements| software artifacts| and contextual data.|
A22|RQ1|Principles and Values|Openness|We see this as a living document| and we appreciate all your feedback| which we will use as input for a next version of the document.|
A22|RQ1|Principles and Values|Ethics and Responsibility|We are| however| lacking a conceptual framework on the fundamental embedding of software into society that guarantees that software does what society needs.|
A22|RQ1|Principles and Values|Process improvement|Decisions made during software development should be based on solid empirical evidence.|
A22|RQ1|Principles and Values|Change|Sustainability of the software is often an afterthought. This needs to be flipped around| i.e.| we need to be able to design ‘future-proof’ software that can be changed efficiently and effectively.|
A22|RQ1|Principles and Values|Artificial intelligence|We must bring automation in software engineering to the next level| e.g.| by leveraging the advances in AI for augmented software engineering| test engineering| and search-based software engineering.|
A22|RQ1|Principles and Values|Privacy and Security|We must ensure that the organizations that develop critical systems do so in a transparent and dependable manner.|
A22|RQ1|Principles and Values|Sustainability|Software that fulfills social| economic| and environmental sustainability needs.|
A22|RQ1|Principles and Values|Architecture|How do we develop this software and simultaneously manage its complexity?|
A22|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|We position the challenges for software research in three clusters: (1) the reliability of software systems| (2) the efficiency and effectiveness of the construction of software systems| and (3) the long-term maintainability of software systems.|
A22|RQ1|Objective and Motivation|Transforming current practices through innovations|We need methods to reduce the complexity of software worth maintaining and extract domain knowledge from existing systems.|
A22|RQ1|Objective and Motivation|Emphasis on collaboration and interdisciplinarity|A serious investment in software research and education by the Dutch government is urgently needed.|
A22|RQ1|Main Guidelines|Address ethical and social issues|We need to understand how to develop reliable software also for such post-von-Neumann architectures.|
A22|RQ1|Impact and Applicability|Develop tools and techniques|We need to understand how to create efficient tools that support dedicated| new software languages| development environments and low code platforms.|
A22|RQ1|Impact and Applicability|Adapt and evolve|We must break this vicious cycle| and find new ways to create software that is long-living and that can be cost-efficiently evolved and migrated to new technologies.|
A22|RQ1|Call to Action|Building and strengthening communities|We hope this Manifesto starts by inspiring other researchers to reach out and provide feedback in this (and many other) directions.|
A22|RQ2|Gaps|Lack of practical guidelines for implementing principles|A fundamental problem of software research is how to ensure the reliability of software systems.|
A22|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Decisions made during software development should be based on solid empirical evidence.|
A22|RQ2|Gaps|Little discussion of the social and political implications of technology|We are| however| lacking a conceptual framework on the fundamental embedding of software into society.|
A22|RQ2|Gaps|Lack of integration between different areas of software engineering|Software research in the Netherlands is excellent but under siege due to the steep increase in student numbers and teaching load in recent years.|
A22|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|We need methods to reduce the complexity of software worth maintaining and extract domain knowledge from existing systems.|
A22|RQ3|Relationship with SWeBok|Software architecture|How do we develop this software and simultaneously manage its complexity?|
A22|RQ3|Relationship with SWeBok|Software Testing|Many verification technologies have been developed to improve software reliability| such as model checking| theorem proving| and monitoring systems.|
A22|RQ3|Relationship with SWeBok|Software Quality|Producing industrial software is not merely a matter of writing code; to be of quality it requires a strong research foundation.|
A22|RQ3|Relationship with SWeBok|Software Security|We must ensure that the organizations that develop critical systems do so in a transparent and dependable manner.|
A23|RQ1|Principles and Values|User focus|Reactive Systems are highly responsive| giving users effective interactive feedback.|
A23|RQ1|Principles and Values|Collaboration|Large systems are composed of smaller ones and therefore depend on the Reactive properties of their constituents.|
A23|RQ1|Principles and Values|Innovation|These systems are more robust| more resilient| more flexible and better positioned to meet modern demands.|
A23|RQ1|Principles and Values|Openness|We believe that a coherent approach to systems architecture is needed| and we believe that all necessary aspects are already recognised individually.|
A23|RQ1|Principles and Values|Ethics and Responsibility|Responsive systems focus on providing rapid and consistent response times| establishing reliable upper bounds so they deliver a consistent quality of service.|
A23|RQ1|Principles and Values|Process improvement|Reactive Systems apply design principles so these properties apply at all levels of scale| making them composable.|
A23|RQ1|Principles and Values|Change|These changes are happening because application requirements have changed dramatically in recent years.|
A23|RQ1|Principles and Values|Architecture|We want systems that are Responsive| Resilient| Elastic and Message Driven. We call these Reactive Systems.|
A23|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Today’s demands are simply not met by yesterday’s software architectures.|
A23|RQ1|Objective and Motivation|Transforming current practices through innovations|Reactive Systems support predictive| as well as Reactive| scaling algorithms by providing relevant live performance measures.|
A23|RQ1|Objective and Motivation|Emphasis on collaboration and interdisciplinarity|Large systems are composed of smaller ones and therefore depend on the Reactive properties of their constituents.|
A23|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|These changes are happening because application requirements have changed dramatically in recent years.|
A23|RQ1|Main Guidelines|Adopt new technologies and approaches|Employing explicit message-passing enables load management| elasticity| and flow control.|
A23|RQ1|Main Guidelines|Develop tools and techniques|They achieve elasticity in a cost-effective way on commodity hardware and software platforms.|
A23|RQ1|Main Guidelines|Establish standards and guidelines|This consistent behaviour in turn simplifies error handling| builds end user confidence| and encourages further interaction.|
A23|RQ1|Impact and Applicability|Adopt new technologies and approaches|Systems built as Reactive Systems are more flexible| loosely-coupled and scalable.|
A23|RQ1|Impact and Applicability|Develop tools and techniques|Reactive Systems apply design principles so these properties apply at all levels of scale| making them composable.|
A23|RQ1|Call to Action|Creating a better future|It is time to apply these design principles consciously from the start instead of rediscovering them each time.|
A23|RQ3|Relationship with SWeBok|Software architecture|We believe that a coherent approach to systems architecture is needed.|
A23|RQ3|Relationship with SWeBok|Software Engineering Process|Reactive Systems apply design principles so these properties apply at all levels of scale.|
A23|RQ3|Relationship with SWeBok|Software Quality|Responsive systems focus on providing rapid and consistent response times| establishing reliable upper bounds so they deliver a consistent quality of service.|
A24|RQ1|Principles and Values|Sustainability|We believe that energy-aware ICT is inevitable for many reasons: economic reasons| sustainability reasons| and because users will increasingly demand it.|
A24|RQ1|Principles and Values|Architecture|Energy awareness can and should be treated like an architectural quality attribute| no different from how we design for| analyze| prototype| and manage other qualities in an architecture such as modifiability| performance| availability| or security.|
A24|RQ1|Principles and Values|Process improvement|Energy awareness must become a standard competency of every ICT practitioner and a standard consideration for every decision maker and end user.|
A24|RQ1|Principles and Values|Artificial intelligence|Software should perform its core functionality while simultaneously ensuring energy awareness. If this happens| end users can count on software applications to be reliable and to promise the best tradeoff between energy and functionality.|
A24|RQ1|Objective and Motivation|Solve existing problems and challenges|The vast majority of practitioners (and researchers) are completely ignorant of energy concerns; they| and the programs they create| are anything but energy aware.|
A24|RQ1|Objective and Motivation|Create or improve tools and platforms|Best practices for energy-aware software engineering should end up being embedded in the tools| packages| and frameworks we create so that software engineers do not need to reinvent the wheel.|
A24|RQ1|Main Guidelines|Address ethical and social issues|Making software development processes explicitly energy aware allows for stakeholders to be informed of the options chosen regarding the energy consumption of software.|
A24|RQ1|Impact and Applicability|Ensure security and privacy|Energy-related information should flow to all stakeholders. Early in the development process| clients should be asked about their energy requirements.|
A24|RQ1|Impact and Applicability|Promote collaboration and communication|Energy awareness is required from all stakeholders| such as end users who may choose product A versus product B based on energy characteristics.|
A24|RQ1|Call to Action|Adopt practices and principles|To create energy-aware software| we must educate the next generation of engineers who need to acquire the competencies (and provide training for the current-generation workforce| too).|
A24|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|Experience tells that any quality that you address late in development tends to be treated superficially (or at great cost).|
A24|RQ3|Relationship with SWeBok|Software architecture|Energy awareness can and should be treated like an architectural quality attribute| no different from how we design for| analyze| prototype| and manage other qualities in an architecture such as modifiability| performance| availability| or security.|
A24|RQ3|Relationship with SWeBok|Software Engineering Process|Energy awareness should be engineered throughout the lifecycle.|
A24|RQ3|Relationship with SWeBok|Software Quality|Software Quality Should Not Come at the Expense of Energy Awareness.|
A25|RQ1|Principles and Values|Innovation|We argue that higher order mutants are potentially better able to simulate real faults and to reveal insights into bugs than the restricted class of first order mutants.|
A25|RQ1|Principles and Values|Process improvement|Mutation Testing has proved to be a very effective way to test programs. It is capable of simulating the effect of other white box testing techniques| while providing improved fault detection.|
A25|RQ1|Principles and Values|Change|We seek to challenge the long–held belief that Higher Order Mutants are ‘too numerous and too coupled’ to be worthy of consideration.|
A25|RQ1|Principles and Values|Architecture|We argue that the space of all mutants (first and higher order) is a search space| in which we should apply search based optimization techniques in order to find mutants that are fit for purpose.|
A25|RQ1|Objective and Motivation|Transforming current practices through innovations|The Mutation Testing community has previously shied away from Higher Order Mutation Testing believing it to be too expensive and therefore impractical. However| this paper argues that Search Based Software Engineering can provide a solution to this apparent problem.|
A25|RQ1|Objective and Motivation|Solve existing problems and challenges|The First Order Mutants we are so used to generating cannot capture many of these; real faults are simply too complex and subtle to be denoted by a single syntactic change.|
A25|RQ1|Main Guidelines|Develop tools and techniques|In order to make the use of Higher Order Mutation Testing practicable| we advocate the use of search based optimization techniques.|
A25|RQ1|Main Guidelines|Promote collaboration and communication|We argue that the Mutation Testing community should de-couple itself from the belief that first order mutants are the only set of worthwhile mutants.|
A25|RQ1|Impact and Applicability|Adapt and evolve|The Search Based approach to HOM Testing aims to address all three simultaneously: cost| uncertainty| and realism.|
A25|RQ1|Call to Action|Challenge the status quo|This paper has presented a polemic against this ‘First Order Restriction’ to which the community has been wedded for too long.|
A25|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|However these three issues remain at the heart of work on mutant testing. The Search Based approach to HOM Testing aims to address all three simultaneously.|
A25|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|We set out some directions for the future development of work on HOM Testing.|
A25|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|A strongly subsuming HOM subsumes the FOMs from which it is constructed and so any test case that kills the HOM is guaranteed to kill all of the FOMs.|
A25|RQ3|Relationship with SWeBok|Software Testing|Mutation Testing has proved to be a very effective way to test programs. It is capable of simulating the effect of other white box testing techniques| while providing improved fault detection.|
A25|RQ3|Relationship with SWeBok|Software architecture|We argue that the space of all mutants (first and higher order) is a search space| in which we should apply search based optimization techniques in order to find mutants that are fit for purpose.|
A25|RQ3|Relationship with SWeBok|Software Quality|By seeking only those mutants which are fit for purpose| we avoid the consideration of trivial| easily killed or unrealistic mutants.|
A26|RQ1|Principles and Values|User focus|Safety problems can be costly and catastrophic. Engineers typically rely on assurance cases to ensure their systems are adequately safe.|
A26|RQ1|Principles and Values|Collaboration|Safety analysis involves multiple parties| including software engineers| safety engineers| and regulators| and is supported by industrial tools.|
A26|RQ1|Principles and Values|Innovation|We propose to monitor the assurance case development activities| treat assurance cases as data| and learn suggestions that help safety engineers in designing safer systems.|
A26|RQ1|Principles and Values|Openness|This paper presents a manifesto for treating assurance cases as data. This manifesto declares our intentions| motives| and views.|
A26|RQ1|Principles and Values|Ethics and Responsibility|Monitoring development practices and ensuring that compliance expectations are met.|
A26|RQ1|Principles and Values|Process improvement|Safety engineers need automated tools that record safety design activities and collect data and that| after each change| can effectively and efficiently provide recommendations by relying on these data.|
A26|RQ1|Principles and Values|Change|Despite the automated tool support| the design of the safety argument is still mostly manual| time-consuming| and error-prone.|
A26|RQ1|Principles and Values|Artificial intelligence|Our forward-looking idea is to monitor safety designers during the AC development| collect and analyze data to provide (helpful) recommendations for the safety argument.|
A26|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Software safety problems can be costly and catastrophic. For example| automotive software failures have led to the loss of human lives and required automotive companies to recall their vehicles at significant costs.|
A26|RQ1|Objective and Motivation|Transforming current practices through innovations|Treating ACs as data can enable learning the development styles of experienced safety analysts| and use them to train less experienced personnel.|
A26|RQ1|Objective and Motivation|Emphasis on collaboration and interdisciplinarity|ACs are used by safety engineers to analyze vehicle safety| and are commonly constructed using Goal Structuring Notation (GSN).|
A26|RQ1|Objective and Motivation|Create or improve tools and platforms|We plan to implement a solution that follows the ideas presented by this manifesto by reusing existing machine learning and monitoring techniques to learn safety event relations and provide recommendations.|
A26|RQ1|Main Guidelines|Develop tools and techniques|We assessed the potential benefits of our idea by instrumenting an industrial AC tool (SOCRATES) to collect data and by monitoring the activity of four engineers during the design of an AC for the CERN Large Hadron Collider.|
A26|RQ1|Main Guidelines|Focus on education and training|Cross-developer recommendations. Analyzing AC development data can enable cross-developer recommendations.|
A26|RQ1|Impact and Applicability|Adapt and evolve|We are not aware of any prior work that proposes considering AC development as data.|
A26|RQ1|Call to Action|Creating a better future|To conclude| treating AC development as data may provide significant benefits to software development by enabling safety analysts to produce safer systems and reduce costs.|
A26|RQ2|Gaps|Lack of practical guidelines for implementing principles|Despite these limitations| our preliminary results confirm that there are patterns that can be learned from AC development data| and investigating the usage of AC as data may lead to practical benefits.|
A26|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|We plan to use our exemplar to evaluate the usefulness of our recommendations| and conduct user studies in collaboration with CSL.|
A26|RQ2|Gaps|Lack of integration between different areas of software engineering|Safety analysis involves multiple parties| including software engineers| safety engineers| and regulators| and is supported by industrial tools.|
A26|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|Monitoring and analyzing AC development data can enable engineers to extract metrics and statistics that improve AC development.|
A26|RQ3|Relationship with SWeBok|Software architecture|Safety engineers need automated tools that record safety design activities and collect data and that| after each change| can effectively and efficiently provide recommendations by relying on these data.|
A26|RQ3|Relationship with SWeBok|Software Engineering Process|To turn our idea into a practical framework (and a full-length paper)| we plan to proceed along the following steps: Develop an exemplar AC. Implement the proposed framework.|
A26|RQ3|Relationship with SWeBok|Software Quality|Providing recommendations for AC development is significantly different from proposing recommendation frameworks for source code development| since the goal of AC is to ensure that there is enough evidence to show that a system is safe.|
A27|RQ1|Principles and Values|User focus|The result is a mature course| read yearly by 50 computer science graduates| where almost 80% of the participants find the topic interesting and challenging| and 40% consider a future career in testing.|
A27|RQ1|Principles and Values|Collaboration|Throughout the course| we invite test experts from airlines| railways| and medical industries to present their best practices of organizing the testing process. Also| IT safety experts participate in steering the project and grading the students’ test strategies.|
A27|RQ1|Principles and Values|Innovation|We experimented with many innovative ideas to engage students and make them love the topic. The most unorthodox| yet effective interventions were: (1) to scare students by analyzing past software-related accidents; (2) to thrill them using bug-hunting gamification; (3) to trust them with end-to-end testing of safety-critical software-intensive systems| and (4) to inspire their careers by opening a dialogue with test professionals from industry.|
A27|RQ1|Principles and Values|Ethics and Responsibility|We deliberately pull out students from their comfort zone at the very start of the course. We want them to realize that unlike programming| testing is not a leisure activity. Or to put it bluntly - if they do not test properly| people will die.|
A27|RQ1|Principles and Values|Process improvement|We designed two assignments where students cover all the phases illustrated in Fig. 2. The first is a mini-project (PROJ) that immerses students in a testing experience| both as a developer and as a tester.|
A27|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|One may say that given the urgency of the call| everyone who is expected in his career to be in a way or another responsible for a software-based system (so not only its developers) should know how to systematically test it.|
A27|RQ1|Objective and Motivation|Transforming current practices through innovations|We developed VU-BugZoo| an innovative learning platform based on a repository of standalone and embedded code. This time we deliberately corrupted executable code to engage students in a fascinating| 'test-until-it-explodes' dynamic bug-hunting experience.|
A27|RQ1|Main Guidelines|Address ethical and social issues|Students must realize that an exhaustive testing is not possible and 100% safe systems do not exist. What they can realize though in one month is to design a sound| well-justified test strategy that guarantees a well-functioning| 'acceptable' safe system that mitigates the hazards with the highest risks.|
A27|RQ1|Impact and Applicability|Develop tools and techniques|A first pilot of the newly developed VU-BugZoo used for an online assessment during the COVID-19 pandemic was also very successful. Around 80% of the students found testing of a 100%-bug-guarantee executable more exciting and learning more effective.|
A27|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|From the evaluations collected during a 10 years long period (2010-2020)| summarized in Table II| one can see that almost 80% of the students constantly found the course interesting and the learning effect adequate.|
A27|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|Of course| implementing all these innovative ideas come with a price. A strong permanent technical support is needed from both the mechanical and electronics workshops. The material investment is also substantial.|
A28|RQ1|Principles and Values|User focus|With the abundance of digital data available to companies| a well-designed tool should enable its users to selectively manage parts of the BM.|
A28|RQ1|Principles and Values|Collaboration|A BMMS should include a rich portfolio of approaches| processes| and methods on how to analyze| change| test| and evaluate BMs in a group.|
A28|RQ1|Principles and Values|Innovation|Current BMDI approaches are largely constrained to sporadic innovation activities (e.g.| workshops).|
A28|RQ1|Principles and Values|Openness|A BMMS should be open to connections to relevant Enterprise Systems| in particular with respect to costs and revenues.|
A28|RQ1|Principles and Values|Ethics and Responsibility|Companies should aim at continuous innovation of their BMs with the same absolute rigor they apply to their product and service portfolio.|
A28|RQ1|Principles and Values|Process improvement|A BMMS would enable a company to monitor| maintain and improve its BM.|
A28|RQ1|Principles and Values|Change|We currently observe that the digitalization of business infrastructure causes a growing interrelation of products| processes| and services across various industries.|
A28|RQ1|Principles and Values|Artificial intelligence|Companies find themselves in and model the intricacies of their business activities.|
A28|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Digitalization of businesses and society at large requires continuous and more elaborate reflection on business models and has become a critical business success factor.|
A28|RQ1|Objective and Motivation|Transforming current practices through innovations|This trend calls for new strategic management tools| which align companies’ technological and economic strategy.|
A28|RQ1|Main Guidelines|Develop tools and techniques|Current research implies that a BMMS should enable users to both monitor and manage strategic business data in a continuing manner.|
A28|RQ1|Call to Action|Collaborate and share|A BMMS should include a rich portfolio of approaches| processes| and methods on how to analyze| change| test| and evaluate BMs in a group.|
A28|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|The conducted work has required two parallel research strands: the fundamental reconceptualization of a BM meta-model and the development of a prototype.|
A28|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|The long-term requirements are not yet implemented| but we intend to both realize them in future and provide a holistic set of requirements to other researchers and practitioners.|
A28|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|BM elements and interrelationships require iterative design – constantly attuning practical implementation to adequate functionality.|
A28|RQ3|Relationship with SWeBok|Software architecture|A BMMS should enable a company to monitor| maintain and improve its BM| ensuring alignment with strategic business needs.|
A28|RQ3|Relationship with SWeBok|Software Quality|The tool that we currently develop addresses this difficult task. As a short-term objective it is necessary to model a company’s business activities in a consistent manner.|
A29|RQ1|Principles and Values|User focus|We believe that multiple device ownership should be as casual| fluid and hassle-free as possible.|
A29|RQ1|Principles and Values|Collaboration|We argue that the transition to multiple device ownership will eventually lead us to liquid software – an approach that will allow data and applications to seamlessly move between multiple devices and screens.|
A29|RQ1|Principles and Values|Innovation|By liquid software| we refer to an approach in which applications and data can flow from one device or screen to another seamlessly.|
A29|RQ1|Principles and Values|Openness|Roaming between multiple devices shall not be limited to devices from a single vendor ecosystem only.|
A29|RQ1|Principles and Values|Ethics and Responsibility|The user should remain in control of the liquidity of applications and data.|
A29|RQ1|Principles and Values|Change|The dominant era of PCs and smartphones is about to come to an end| as we are at the cusp of yet another major disruption or paradigm shift.|
A29|RQ1|Principles and Values|Artificial intelligence|Cloud computing| wireless networks and local connectivity technologies make it possible to perform provisioning and synchronization over the air to a multiplicity of devices.|
A29|RQ1|Principles and Values|Privacy and Security|The ability of liquid software to readily flow from device to device is both a blessing and a curse.|
A29|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|The transition to multiple device ownership is still rife with problems.|
A29|RQ1|Objective and Motivation|Transforming current practices through innovations|We argue that the transition to multiple device ownership will eventually lead us to liquid software.|
A29|RQ1|Main Guidelines|Adopt new technologies and approaches|Cloud computing| wireless networks and local connectivity technologies make it possible to perform provisioning and synchronization over the air.|
A29|RQ1|Main Guidelines|Address ethical and social issues|Without proper precautions| the computer may import and run unsafe code| thereby opening up the computer to abuse.|
A29|RQ1|Impact and Applicability|Develop tools and techniques|A number of systems have emerged specifically to facilitate dynamic synchronization of data between different types of computing devices.|
A29|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Today| automatic synchronization of multiple computing devices is still supported only partially and is something that the user needs to turn on explicitly.|
A29|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|The solutions to the problem of unsafe liquid software fall into three categories: (1) user control| (2) implicit trust| and (3) verified access.|
A29|RQ3|Relationship with SWeBok|Software architecture|Liquid software entails a virtualized but personal computing experience that is independent of any particular device or OS platform.|
A29|RQ3|Relationship with SWeBok|Software Security|The very mobility of liquid software is a curse because it can open potentially huge security holes.|
A30|RQ1|Principles and Values|Collaboration|Ensure enterprise agility effectiveness by creating an environment with efficient| effective| communication and collaboration across the enterprise.|
A30|RQ1|Principles and Values|Innovation|Deliver continuously innovative and operationally relevant capabilities to meet our stakeholder needs.|
A30|RQ1|Principles and Values|Change|Change is constant - Build and maintain a foundation of trust across the enterprise.|
A30|RQ1|Objective and Motivation|Transforming current practices through innovations|Enterprise Agility is based on best practices and integration of established frameworks and standards outside the development domain.|
A30|RQ1|Objective and Motivation|Changing culture and practices|Organizational change is required for the enterprise to move at DevOps speed of technical change.|
A30|RQ1|Main Guidelines|Address ethical and social issues|Integrity of capabilities through continuous integration of risk & opportunity driven innovative change.|
A30|RQ1|Impact and Applicability|Develop tools and techniques|Exploit business and engineering opportunities to maintain operational excellence and enhance operational agility.|
A30|RQ1|Call to Action|Collaborate and share|Engage all stakeholders on a continuous basis to gather the right data to identify enterprise gaps| and develop corrective actions to support tactical and strategic enterprise planning decisions.|
A30|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|Further work additionally should establish an integrated maturity model approach to align/integrate various maturity models which facilitate improvement opportunities| dashboard awareness to leaders| and establish baselines for automation.|
A30|RQ3|Relationship with SWeBok|Software architecture|The enterprise architecture explicitly describes the organization through a set of independent| non-redundant artifacts| defining how these artifacts interrelate with each other.|
A30|RQ3|Relationship with SWeBok|Software Quality|Operational excellence in the Industry 4.0 age requires an enterprise architecture that not only embraces risk & opportunity it must embrace cyber-physical dependencies as well.|
A31|RQ1|Principles and Values|User focus|Using this Edge ICT fabric| which is closer to the Users| for executing network functions and services will bring several advantages| both in terms of improved performance and cost savings.|
A31|RQ1|Principles and Values|Collaboration|SDN (Software Defined Networks) and NfV (Network Functions Virtualization) are creating the conditions to reinvent the network architectures| improving dramatically the flexibility through virtualization and programmability.|
A31|RQ1|Principles and Values|Innovation|Technological advances (e.g. standard h/w performance| embedded communications| device miniaturization| etc.) and the related costs reductions are progressively moving an incredible amount of processing| storage| communications-networking capabilities at the edge of traditional networks.|
A31|RQ1|Principles and Values|Openness|The introduction of increased functionality at the edge opens up opportunities to execute network functions and applications closer to the customer increasing his quality of experience.|
A31|RQ1|Principles and Values|Artificial intelligence|The Edge ICT Fabric approach there is an original challenge regarding the data collection and state analysis (DCSA)| stemming from the fact that the network nodes are now VMs.|
A31|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|This paper argues that future network infrastructures will be composed by a stateless and low-complexity Core Network interconnecting very dynamic Edge Networks (ENs) capable of executing – in orchestration with Data Centers (DCs) - all the stateful network functions and services.|
A31|RQ1|Objective and Motivation|Transforming current practices through innovations|SDN and NfV are creating the conditions to reinvent the network architectures| improving dramatically the flexibility through virtualization and programmability.|
A31|RQ1|Main Guidelines|Adopt new technologies and approaches|The idea of extending this flexibility to Telecommunications networks is getting a growing attention| even more when looking at a deeper integration of processing| storage and networking resources.|
A31|RQ1|Impact and Applicability|Develop tools and techniques|Provisioning logic can be split into two parts: primitives for individual data plane and processing elements of Edge ICT Fabric| and primitives for coordinated provisioning of several distributed Edge ICT Fabric.|
A31|RQ1|Impact and Applicability|Adapt and evolve|The framework will be distributed and highly elastic| in order to serve the uniform growth from small scale to large scale systems.|
A31|RQ1|Call to Action|Creating a better future|Future steps in this direction include modeling and simulating diverse cooperation-competition business strategies for Telco-ICT ecosystems at the edge.|
A31|RQ2|Gaps|Lack of practical guidelines for implementing principles|Efficient methods are required to create optimal paths and Edge ICT Fabric-resource allocations under continuously changing conditions.|
A31|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|The paper has described three use cases whose study has allowed the derivation of a number of high-level requirements.|
A31|RQ3|Relationship with SWeBok|Software architecture|Future network infrastructures will be composed by a stateless and low-complexity Core Network interconnecting very dynamic Edge Networks capable of executing network functions and services.|
A32|RQ1|Principles and Values|User focus|Modern distributed systems [...] not only deliver smart functionalities| but become smart themselves| being able to swiftly react and adapt to environmental changes| while following continuous release cycles based on DevOps.|
A32|RQ1|Principles and Values|Collaboration|Our manifesto discusses the research challenges| a roadmap built on 6 research directions| and a concrete implementation timeline for the roadmap.|
A32|RQ1|Principles and Values|Innovation|We envision a research manifesto for non-functional certification of modern distributed systems that paves the way for the wide adoption of certification in the real world| also in those domains where certification is not mandatory.|
A32|RQ1|Principles and Values|Openness|These pillars aim to unleash a cost-effective and high-quality ecosystem that fosters the usage of certification in the real-world.|
A32|RQ1|Principles and Values|Ethics and Responsibility|Pushed by the increasing interest in certification| for instance in the European Union where the European Agency for Cybersecurity has received the mandate of developing several European certification schemes.|
A32|RQ1|Principles and Values|Change|Modern distributed systems are extremely elastic| adapting their topology to accommodate strict SLAs| contrasting with the ability to precisely define certification building blocks.|
A32|RQ1|Principles and Values|Artificial intelligence|The increasing interplay with the physical counterpart of distributed systems| as well as the increasing reliance on ML for both functional and non-functional aspects| is radically changing the service engineering landscape.|
A32|RQ1|Objective and Motivation|Transforming current practices through innovations|Our roadmap defines 6 research directions that aim to address the challenges in Section III.|
A32|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|Certification schemes have traditionally been built without keeping the pace with IT evolution| trying to adapt existing techniques developed for service-based systems to current distributed systems.|
A32|RQ1|Main Guidelines|Adopt new technologies and approaches|First| a set of modern and lightweight certification building blocks| whose definition can be performed with little to none human intervention.|
A32|RQ1|Impact and Applicability|Develop tools and techniques|A set of modern and lightweight certification building blocks| whose definition can be performed with little to none human intervention.|
A32|RQ1|Call to Action|Collaborate and share|We identify 4 main domains of analysis; for each domain| we describe the research challenges affecting the certification of modern distributed systems and analyze their impact.|
A32|RQ2|Gaps|Lack of practical guidelines for implementing principles|Certification is implemented as an independent| post-deployment activity disconnected from the service engineering process.|
A32|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Certification processes have traditionally been executed in lab environments| only recently moving to production environments (e.g.| cloud).|
A32|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|Certification life cycle includes all activities concerning the usage and management of awarded certificates. Often certification life cycle is managed through an all-or-nothing approach| where the certificate is either supported or revoked in case a new set of evidence invalidates its properties.|
A32|RQ3|Relationship with SWeBok|Software architecture|Modern distributed systems in our reference scenario challenge the assumptions and| in turn| the soundness of existing certification schemes.|
A32|RQ3|Relationship with SWeBok|Software Quality|Ultimately| there is a mismatch between the static and predictable nature of certification and the elastic and unpredictable nature of modern (ML-based) distributed systems.|
A32|RQ3|Relationship with SWeBok|Software Security|Non-functional properties| which traditionally specify attributes describing system artifacts only| should consider additional attributes describing system development and system evaluation.|
A33|RQ1|Principles and Values|User focus|Humans should emerge as first-class| multi-role citizens across the technology world in the 21st century... With SSE| software engineers should embrace the mission to provide individualized services to each and every end-user in situ to the extent possible.|
A33|RQ1|Principles and Values|Collaboration|This new venture will require professionals in both software engineering and services computing to collaborate with an unprecedented intensity| and jointly develop the new interdisciplinary field hereby named Software Services Engineering (SSE).|
A33|RQ1|Principles and Values|Innovation|Provisioning of highly adaptable and scalable microservices would be key to timely meeting ever-changing human desires and ever-evolving system requirements in the nimblest manner.|
A33|RQ1|Principles and Values|Openness|Facing such grand challenges| this declaration samples a subset of burning issues in SSE through observations in seven themes| only meant to be starting points for the SSE community to further investigate.|
A33|RQ1|Principles and Values|Ethics and Responsibility|The ultimate goal in pursuit of such a noble dream will be to provide genuinely individualized and trustworthy service| possibly enabled by AI| but it should be both explainable and ethical.|
A33|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Traditional requirements engineering researchers are being lured more than ever into exploiting the IoT environments where human users are deeply embedded| to gather contextual information that inevitably introduces lots of ambiguity and uncertainty.|
A33|RQ1|Objective and Motivation|Transforming current practices through innovations|An ultra-agile and field-programmable development methodology and environment will be imperative to achieving such ultra-fine grained microservices provisioning.|
A33|RQ1|Main Guidelines|Establish standards and guidelines|The conventional software engineering R&D scope needs be extended with data-driven services computing technologies (e.g.| blockchain| confidential computing| learning-based services| zero trust| etc.).|
A33|RQ1|Impact and Applicability|Develop tools and techniques|API-based microservice ecosystems are becoming pervasive inside and outside an enterprise due to various fast-evolving advancements in telecommunications| hardware| software| and services computing.|
A33|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|A still open issue is to simultaneously consider different models and coordinate the different independent reasoning processes by an explicit representation of the different uncertainties present in a system.|
A33|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|Much remains missing in achieving an explicit microservices architecture specifically suitable for IoT.|
A33|RQ3|Relationship with SWeBok|Software architecture|Microservice oriented architecture (MOA) provides practical design principles for decomposing the artifacts for designing| developing| and managing a complex software service into a composable set of API-defined microservices.|
A33|RQ3|Relationship with SWeBok|Software Security|Implementation and delivery of a microservice can be composed via other heterogeneous microservices dynamically in a context and/or situation-aware manner| but manageability and composability for itself must be assured as well| with support of design and analytics tools.|
A34|RQ1|Principles and Values|User focus|We have also observed that next generation of software services will become more context/situation-aware| self-aware and autonomous| ultra-mobile| ultra-fine-grained| ultra-trustworthy and driven by behaviors observed and captured from both the environment and humans of concern.|
A34|RQ1|Principles and Values|Collaboration|Services computing professionals and software engineers have been finding ways to intersect theories and practices that used to be more of a concern for the other camp.|
A34|RQ1|Principles and Values|Innovation|New terms such as Big Service| Internet of Services (IoS)| and Crossover Services are often used to delineate such phenomenon. Many research challenges are thus emerging from this point of view.|
A34|RQ1|Principles and Values|Architecture|This general production framework allows for modular service requirements decomposition and modular service composition during the development| enforces end-to-end assurance of service quality| and supports the operation| maintenance| and evolution of the encapsulated software functionalities instantiated as services.|
A34|RQ1|Objective and Motivation|Transforming current practices through innovations|Microservices-Based Ultra-fine-grained IoT Service Framework in SSE|
A34|RQ1|Objective and Motivation|Solve existing problems and challenges|An obvious trend is to connect these scattered services as public service networks that play the role of virtualized service infrastructure to support business innovations.|
A34|RQ1|Main Guidelines|Develop tools and techniques|Dynamic Composition of Individually Administered Microservices with Manageability Assurance|
A34|RQ1|Impact and Applicability|Adopt new technologies and approaches|Ultra-Agile Situation-Aware Edge-Centric DevOps Platforms with AI Enablers|
A34|RQ2|Gaps|Lack of practical guidelines for implementing principles|Although different services are developed and delivered by different organizations in different domains and across continental boundaries| an obvious trend is to connect these scattered services as public service networks that play the role of virtualized service infrastructure to support business innovations.|
A34|RQ2|Gaps|Lack of integration between different areas of software engineering|Industry observers with keen eyes have found that services computing and software engineering are becoming more and more intertwined.|
A34|RQ3|Relationship with SWeBok|Software architecture|Central to SSE| this general production framework allows for modular service requirements decomposition and modular service composition during the development| enforces end-to-end assurance of service quality| and supports the operation| maintenance| and evolution of the encapsulated software functionalities instantiated as services.|
A35|RQ1|Principles and Values|Sustainability|Sustainability is systemic. Sustainability is never an isolated property. Systems thinking must be the starting point for the transdisciplinary common ground of sustainability.|
A35|RQ1|Principles and Values|Change|Even though sustainability’s importance is increasingly recognized| many software systems are unsustainable. Even more alarming is that most software systems’ broader impacts on sustainability are unknown.|
A35|RQ1|Principles and Values|Architecture|Sustainability applies to both a system and its wider contexts. System design involves at least two spheres: the sustainability of the system itself and how it affects the sustainability of the wider system of which it will be part.|
A35|RQ1|Objective and Motivation|Solve existing problems and challenges|Because of these misperceptions| even though sustainability’s importance is increasingly recognized| many software systems are unsustainable.|
A35|RQ1|Objective and Motivation|Changing culture and practices|Changing design to take into account long-term effects doesn’t automatically imply sacrifices. However| innovation in sustainability can play out as decoupling present and future needs.|
A35|RQ1|Main Guidelines|Address ethical and social issues|Sustainability requires multiple timescales. We should assess the benefits and impacts on multiple timescales| and include longer-term indicators in assessment and decisions.|
A35|RQ1|Impact and Applicability|Develop tools and techniques|Finally| the manifesto proposes concrete ideas of how to start implementing these principles in different roles in the software-engineering community: software practitioners| researchers| professional associations| educators| customers| and users.|
A35|RQ1|Call to Action|Creating a better future|Will this manifesto change how we elicit and analyze requirements? Will it change how we design software? Will it have a big impact on software engineering’s future? We’ll know that in a few years.|
A35|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Even more alarming is that most software systems’ broader impacts on sustainability are unknown.|
A35|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|The system’s status and context should be visible at different abstraction levels and from different perspectives to enable participation and informed responsible choice.|
A35|RQ3|Relationship with SWeBok|Software Requirements|Sustainability must be considered even if the primary focus of the system under design isn’t sustainability| because the use of any software can impact its environment.|
A35|RQ3|Relationship with SWeBok|Software architecture|Sustainability applies to both a system and its wider contexts. System design involves at least two spheres: the sustainability of the system itself and how it affects the sustainability of the wider system of which it will be part.|
A35|RQ3|Relationship with SWeBok|Software Quality|Sustainability requires action on multiple levels. Some interventions have more leverage on a system than others.|
A36|RQ1|Principles and Values|User focus|Living Models provides a coherent view of the quality status of the system (integrating the perspectives of all stakeholders) which evolves together with the running systems.|
A36|RQ1|Principles and Values|Collaboration|A core concern of Living Models is to support the cooperation of stakeholders from IT management| software engineering and systems operation by providing appropriate model-based abstractions and the fostering of interdependencies.|
A36|RQ1|Principles and Values|Innovation|In this paper we will present the core ideas of Living Models – a novel paradigm of model–based development| management and operation of evolving service oriented systems.|
A36|RQ1|Principles and Values|Openness|Living Models is attached with a novel process model focusing on change and change propagation.|
A36|RQ1|Principles and Values|Ethics and Responsibility|Due to the open nature of these systems| complex quality properties like functional correctness| security and privacy of processed information play a major role for design and operation of service-oriented systems.|
A36|RQ1|Principles and Values|Process improvement|The software development process in a Living Models environment is driven by change events| the state of the model elements and their interrelationships with other model elements.|
A36|RQ1|Principles and Values|Change|The innovation of our approach is threefold. First| Living Models is based on the tight coupling of models and code.|
A36|RQ1|Principles and Values|Privacy and Security|In the health care scenario| the correctness and integrity of patient-related data is of uttermost importance for the safety of human lives.|
A36|RQ1|Principles and Values|Architecture|Living Models supports the management of quality requirements fostering the cooperation between stakeholders in IT management| software engineering and systems operation.|
A36|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Service oriented systems in most cases are dynamically evolving systems.|
A36|RQ1|Objective and Motivation|Transforming current practices through innovations|However| most existing frameworks focus on the construction of solutions and neglect quality support and the consideration of change as a first–class citizen.|
A36|RQ1|Main Guidelines|Develop tools and techniques|We developed this paradigm based on our experience of several years of work in the area of model-driven software development with a focus on security engineering and model-based quality assurance.|
A36|RQ1|Impact and Applicability|Establish standards and guidelines|The System Meta Model defines the backbone of the change management process.|
A36|RQ1|Call to Action|Collaborate and share|Each stakeholder operates on a subset of model elements in the System Model| e.g. being responsible for the quality assessment of these model elements.|
A36|RQ2|Gaps|Lack of practical guidelines for implementing principles|However| most existing frameworks focus on the construction of solutions and neglect quality support and the consideration of change as a first–class citizen.|
A36|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|There exist examples of environments supporting parts of the concepts of Living Models [...]. However| also these success stories support aspects of system evolution and quality assurance only in an ad–hoc way.|
A36|RQ2|Gaps|Lack of integration between different areas of software engineering|A core concern of Living Models is to support the cooperation of stakeholders from IT management| software engineering and systems operation.|
A36|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|System Models are the target of change and evolution. In order to support systematic analysis and reaction to change| System Models have to be made persistent.|
A36|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|Our core idea to meet these challenges is a rigorous use of models to bridge the gap between the domains and the related stakeholders.|
A36|RQ3|Relationship with SWeBok|Software architecture|The System Meta Model defines the backbone of the change management process.|
A36|RQ3|Relationship with SWeBok|Software Design|Each stakeholder operates on a subset of model elements in the System Model| e.g. being responsible for the quality assessment of these model elements.|
A36|RQ3|Relationship with SWeBok|Software Maintenance|System Models are the target of change and evolution. In order to support systematic analysis and reaction to change| System Models have to be made persistent.|
A36|RQ3|Relationship with SWeBok|Software Engineering Process|The software development process in a Living Models environment is driven by change events| the state of the model elements and their interrelationships with other model elements.|
A36|RQ3|Relationship with SWeBok|Software Quality|Living Models provides a coherent view of the quality status of the system (integrating the perspectives of all stakeholders) which evolves together with the running systems.|
A36|RQ3|Relationship with SWeBok|Software Security|Due to the open nature of these systems| complex quality properties like functional correctness| security and privacy of processed information play a major role for design and operation of service-oriented systems.|
A37|RQ1|Principles and Values|Innovation|The Flexiformalist Program aims to change this and calls for the development of a regime of partially formalizing mathematical knowledge into a modular ontology of mathematical theories (content commons)| and mathematical documents by semantic annotations and links into the content commons (semantic documents).|
A37|RQ1|Principles and Values|Collaboration|MKM is an interdisciplinary field at the intersection of mathematics| computer science| Semantic Web| library science| and scientific publishing that develops representation formats| methods| and tools to facilitate the creation of a 'universal digital library of mathematics' and empower its users with added value services.|
A37|RQ1|Principles and Values|Artificial intelligence|To judge possible machine support for STEM research and application we need to realize that many services do not require full formalization (as computation and verification do in P1).|
A37|RQ1|Principles and Values|Architecture|The establishment of a software infrastructure with a distributed network of archives that manage the content commons and collections of semantic documents| semantic web services that perform tasks to support current and future mathematic practices| and active document players that present semantic documents to readers.|
A37|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Mathematical knowledge is rich in content| sophisticated in structure| and technical in presentation. Its conservation| dissemination| and utilization constitutes a challenge for the community and an attractive line of inquiry.|
A37|RQ1|Objective and Motivation|Transforming current practices through innovations|We claim that the digitization/OCR effort should be complemented by a flexiformalization effort that makes the DMLs semantically accessible and turns mathematical documents into active documents.|
A37|RQ1|Main Guidelines|Develop tools and techniques|The establishment of a software infrastructure with a distributed network of archives that manage the content commons and collections of semantic documents.|
A37|RQ1|Impact and Applicability|Share knowledge|With the emerging technologies of flexiformal| semantic libraries and active documents| we have a way to make the mathematical literature more accessible to non-specialists| by giving access to crucial aspects of the context at the 'points of pain'.|
A37|RQ1|Call to Action|Creating a better future|In conclusion we can state that the relaxation of the black-and-white distinction of formality and informality to the flexiformality continuum opens up considerable opportunities for machine support in STEM research and applications.|
A37|RQ2|Gaps|Lack of practical guidelines for implementing principles|Efforts are currently under way to digitize and possibly OCR large parts of the published mathematical literature and turn them into generally accessible 'Digital Mathematical Libraries'.|
A37|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|As soon as a larger body of mathematical theories becomes available (by marking up concepts and axioms) we can automatically search for 'views' (aka. representation theorems) that allow to import all the theorems of the source theory into the target theory.|
A37|RQ3|Relationship with SWeBok|Software Engineering Process|To enable an optimal collaboration between man and machine| we need at the same time to keep close to established workflows of mathematicians and give algorithms the explicit representations needed for computation.|
A38|RQ1|Principles and Values|User focus|Process analytics| execution| and monitoring based on IoT data can enable an even more comprehensive view of systems and realize unused potential for optimization.|
A38|RQ1|Principles and Values|Collaboration|While the IoT and BPM have been regarded as separate topics in research and in practice| we strongly believe that [...] both BPM and the IoT will benefit from a wider integration.|
A38|RQ1|Principles and Values|Innovation|The solution to typical challenges related to the IoT| such as scalability [...] can benefit| as well| by the knowledge of such agendas and goals.|
A38|RQ1|Principles and Values|Openness|With the IoT producing a large amount of data that is stored in the cloud| even more information becomes available for analysis| possibly resolving issues of incompleteness.|
A38|RQ1|Principles and Values|Ethics and Responsibility|Privacy levels that exist at the sensor layer might be different with respect to those at the BPM one. A full-disclosure approach should be avoided| especially in contexts where sensitive information is collected.|
A38|RQ1|Principles and Values|Process improvement|The IoT could reduce the need to manually signify the completion of tasks since sensor data would already be available| leading to more accurate information| fewer errors| and efficiency gains.|
A38|RQ1|Principles and Values|Change|There are many open challenges to be tackled. Both BPM and the IoT will benefit from a wider integration.|
A38|RQ1|Principles and Values|Artificial intelligence|Decisions in processes require relevant information as the basis for making meaningful determinations. Information from the IoT| such as events| that is provided through in-memory databases and complex event processing can be useful in this context.|
A38|RQ1|Principles and Values|Privacy and Security|Privacy by design: Identify and examine possible data protection problems when designing new technology and incorporate privacy protection into the overall design.|
A38|RQ1|Principles and Values|Sustainability|The IoT provides many opportunities for organizations and industries| and for personal use| through meaningful yet dynamic interaction of humans| software| machines| and things.|
A38|RQ1|Principles and Values|Architecture|While the IoT generally focuses on communication and data flow| BPM approaches consider control flow| process models| and synchronous interactions.|
A38|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Still| there are many open challenges to be tackled. Both BPM and the IoT will benefit from a wider integration.|
A38|RQ1|Objective and Motivation|Transforming current practices through innovations|One approach to bridge the gap between IoT data and processes would be to break end-to-end models into microprocesses that represent habits and arrange them in a less prescriptive way.|
A38|RQ1|Objective and Motivation|Create or improve tools and platforms|The coordinating unit responsible for resource provisioning has advanced knowledge about the future behavior of agents since the agents have to follow their process models and thus can provide resources with greater accuracy.|
A38|RQ2|Gaps|Lack of practical guidelines for implementing principles|Currently| there is no universal way to represent these levels of autonomy and resolve conflicts originating from this distinction.|
A38|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|There is a gap between IoT data and concepts at a model level to enable behavior prediction and identify changes in behavior.|
A38|RQ2|Gaps|Little discussion of the social and political implications of technology|Finally| and partially related to the previous point| there are ethical aspects of integrating the IoT and BPM.|
A38|RQ2|Gaps|Lack of integration between different areas of software engineering|BPM methodologies and technologies can support the identification and selection of appropriate responses by recommending tasks| triggering tasks| and automating as well as monitoring task execution.|
A38|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|The IoT facilitates deriving situational knowledge when tracking and evaluating data streams.|
A38|RQ3|Relationship with SWeBok|Software architecture|While the IoT generally focuses on communication and data flow| BPM approaches consider control flow| process models| and synchronous interactions.|
A38|RQ3|Relationship with SWeBok|Software Quality|Privacy by design: Identify and examine possible data protection problems when designing new technology and incorporate privacy protection into the overall design.|
A38|RQ3|Relationship with SWeBok|Software Security|Privacy levels that exist at the sensor layer might be different with respect to those at the BPM one.|
A39|RQ1|Principles and Values|User focus|Transparency and people’s engagement to the business over... monitoring and controlling.|
A39|RQ1|Principles and Values|Collaboration|We advocate using the AGM meta-principles with a set of meta-values to help teams achieve superior business outcomes.|
A39|RQ1|Principles and Values|Innovation|Achieving business agility requires finding the right balance in governance and adapting it to suit each organization’s unique conditions and timing.|
A39|RQ1|Principles and Values|Change|The teams must develop the intrinsic ability to handle change systematically.|
A39|RQ1|Principles and Values|Architecture|The architecture of solutions should focus on optimizing the desired outcomes with the available resources.|
A39|RQ1|Objective and Motivation|Transforming current practices through innovations|We exercise the freedom to revisit the discussion of these principles while preserving their fundamental essence.|
A39|RQ1|Objective and Motivation|Solve existing problems and challenges|The level of governance must always be adapted according to the organizational context.|
A39|RQ1|Main Guidelines|Promote collaboration and communication|We propose an engaging research agenda encompassing 12 intriguing research lines for future endeavors.|
A39|RQ1|Impact and Applicability|Ensure security and privacy|Organizations need to establish robust security and auditing measures| ensuring business predictability.|
A39|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|This gap restricts the scope of exploration in this field. Similarly| the existing studies predominantly focus on practical applications or were purely propositional.|
A39|RQ2|Gaps|Lack of integration between different areas of software engineering|By embracing these principles| it is reasonable to imply that teams can navigate their efforts with innate intuition| productivity| equilibrium| and prosperity.|
A39|RQ3|Relationship with SWeBok|Software architecture|The architecture of solutions should focus on optimizing the desired outcomes with the available resources.|
A39|RQ3|Relationship with SWeBok|Software Quality|The meta-values emerge as enduring beliefs or ideals shared by team members and stakeholders about what is and is not suitable or appropriate in their attitudes.|
A39|RQ3|Relationship with SWeBok|Software Engineering Process|Governance must always be adapted according to the organizational context.|
A40|RQ1|Principles and Values|User focus|By establishing this manifesto| we seek to catalyze a shift in how Generative AI is conceived| developed| and applied within SE—a shift that reaffirms the primacy of human dignity| agency| and collective wellbeing in the face of rapid technological change.|
A40|RQ1|Principles and Values|Collaboration|Adopting| adapting| and empirically researching Generative AI in SE must inherently foster a culture of diversity| inclusivity| and continuous learning| embracing diverse| multidisciplinary perspectives for software engineering’s advancement.|
A40|RQ1|Principles and Values|Innovation|Generative AI is reshaping the landscape| affecting how we live and work. Our mission is to steer Generative AI in SE towards fairness| transparency| and justice| ensuring a future where technology lifts us up together| rather than divides us.|
A40|RQ1|Principles and Values|Openness|Implement transparent processes that actively identify and mitigate Generative AI-related biases| ensuring fairness| accountability| and trustworthiness in Generative AI applications.|
A40|RQ1|Principles and Values|Ethics and Responsibility|Talking about responsibility| ethics| transparency| fairness| and focusing on everyone’s wellbeing means insisting that all technology| including Generative AI| serves the common good.|
A40|RQ1|Principles and Values|Privacy and Security|Ensure that Generative AI technologies enhance| rather than replace| human decision-making and creativity| prioritizing human oversight in Generative AI development and application.|
A40|RQ1|Principles and Values|Sustainability|Committing to the responsible selection and use of Generative AI technologies| with a focus on minimizing environmental impact through energy efficiency and sustainable practices.|
A40|RQ1|Objective and Motivation|Transforming current practices through innovations|Bridging our core values to actionable principles| the Copenhagen Manifesto presents a roadmap for embedding these commitments into SE practices with Generative AI.|
A40|RQ1|Main Guidelines|Address ethical and social issues|Uphold ethical standards in both engineering practices and education| ensuring future generations of engineers are prepared to make ethical decisions in Generative AI use.|
A40|RQ1|Impact and Applicability|Develop tools and techniques|Develop Generative AI that amplifies the capabilities of software engineers| promoting professional growth and wellbeing.|
A40|RQ1|Call to Action|Adopt practices and principles|It is about developing and applying Generative AI with respect for each person’s rights and dignity to build a world that is better for our collective effort.|
A40|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Support and conduct empirical research to base Generative AI adoption and practices on evidence| enhancing the positive impact of Generative AI on society and addressing any challenges.|
A40|RQ2|Gaps|Little discussion of the social and political implications of technology|Talking about responsibility| ethics| transparency| fairness| and focusing on everyone’s wellbeing means insisting that all technology| including Generative AI| serves the common good.|
A40|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|Recognize and plan the evolving nature of Generative AI systems by committing to ongoing learning and adaptation in their design and application| ensuring they remain aligned with ethical and societal values.|
A40|RQ3|Relationship with SWeBok|Software architecture|The Copenhagen Manifesto presents a roadmap for embedding these commitments into SE practices with Generative AI| ensuring that technological advancement is not only innovative but also equitable| transparent| and socially and environmentally responsible.|
A40|RQ3|Relationship with SWeBok|Software Security|Implement transparent processes that actively identify and mitigate Generative AI-related biases| ensuring fairness| accountability| and trustworthiness in Generative AI applications.|
A40|RQ3|Relationship with SWeBok|Software Engineering Professional Practice|Uphold ethical standards in both engineering practices and education| ensuring future generations of engineers are prepared to make ethical decisions in Generative AI use.|
A41|RQ1|Principles and Values|Privacy and Security|Not enough attention| if any| is devoted to security.|
A41|RQ1|Principles and Values|Ethics and Responsibility|A 'contractual trust' relationship between client and contractor exists| in that they have agreed on binding terms and conditions in a Service Level Agreement (SLA).|
A41|RQ1|Principles and Values|Process improvement|The first step in the problem solution is security metrics identification| a task that so far remained elusive.|
A41|RQ1|Objective and Motivation|Solve existing problems and challenges|The problem raises a number of related challenges such as: identification of metrics which are more suitable for security-level negotiation| client and contractor perspective and security guarantees in service composition scenarios.|
A41|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Existing forms built around Web Services technology define means for specifying the parameters for a secure communications link. These include requirements for message encryption| signature| authentication and server access control.|
A41|RQ1|Main Guidelines|Establish standards and guidelines|Proposal 2: Protection Level Agreement (PLA) is proposed as the section of an agreement that contains security requirements.|
A41|RQ1|Impact and Applicability|Ensure security and privacy|The high level security goal of a client is to protect its data and make it available (always and only) to the entitled users.|
A41|RQ1|Impact and Applicability|Develop tools and techniques|A monitor system which controls PLA fulfilments should be developed.|
A41|RQ1|Call to Action|Adopt practices and principles|Proposal 4: External metrics should be used in PLA negotiations.|
A41|RQ2|Gaps|Lack of practical guidelines for implementing principles|There is no such evaluation method for operational security.|
A41|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Unclear performance and benchmarking metrics are a cause of 56% of outsourcing relationship failure.|
A41|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|In this article we have focused more on technical side of the agreement. One problem that we have left out is the issue of enforcement.|
A41|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|External metrics can be monitored by a client remotely. For monitoring of internal metrics special techniques should be applied to guarantee that the data may be trusted.|
A41|RQ3|Relationship with SWeBok|Software Security|The crucial point in PLA negotiation is identification of metrics which describe the level of protection.|
A41|RQ3|Relationship with SWeBok|Software Engineering Management|Before cooperation proceeds| participants negotiate a Service Level Agreement (SLA). The main part of the agreement is devoted to functional requirements and to some non-functional requirements such as performance.|
A41|RQ3|Relationship with SWeBok|Software Configuration  Management|The contractor must map the PLA to a functional SLA| to receive concrete requirements which defines what the contractor should install and how it should behave.|
A42|RQ1|Principles and Values|Collaboration|Ultimately| decreasing global coordination among formal methods researchers can lead to an extinction of the formal methods community| which is currently somewhat fragmented.|
A42|RQ1|Principles and Values|Process improvement|The manifesto for applicable formal methods expresses aims and intentions. We hope it will give crucial impulses to formal methods researchers to implement a modern research agenda for developing formal methods that can arguably be used for critical software engineering research.|
A42|RQ1|Principles and Values|Architecture|A formal method should create benefits through integration with other methods. For example| it could be integrated with a familiar design or engineering technique (e.g. contract-based design)| a widely used modelling technique (e.g. State Charts used in UML/SysML)| a programming language (e.g. JavaScript| C/C++| Java)| or a process model (e.g. Scrum).|
A42|RQ1|Objective and Motivation|Transforming current practices through innovations|Projects such as Ptolemy and AutoFocus can be considered rigorous top-down approaches to constructing seamless toolchains for engineering embedded software.|
A42|RQ1|Main Guidelines|Address ethical and social issues|The manifesto strives to foster progress in a currently dissatisfying situation found in the science of formal methods.|
A42|RQ1|Impact and Applicability|Develop tools and techniques|A formal method should come with tool support that prevents users from tedious work steps and helps them focus on essential and creative steps.|
A42|RQ1|Call to Action|Building and strengthening communities|Ideally| a representative| coordinated approach could lead to an authoritative voice towards the scientific| governmental| and industrial communities and| perhaps| inspire new schemes for research funding.|
A42|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Data from across a representative range of samples have never been rigorously measured (e.g. using controlled method experiments).|
A42|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|Understanding the links between formal methods is essential| especially for building toolchains for heterogeneous approaches.|
A42|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|The benefits of formal methods for making the process of code reviews more efficient have been studied| but data from industry is still lacking.|
A43|RQ1|Principles and Values|Innovation|The adoption of novel virtualization techniques such as containers that enable improved utilisation of the physical resources and further hide the complexities of hardware is becoming increasingly widespread| even leading to a new service model being offered by providers known as Container as a Service (CaaS).|
A43|RQ1|Principles and Values|Privacy and Security|The design of multiple co-existing control loops spanning from CDCs to the Edge is| by itself| a broad research challenge from the point of design| analysis and verification| implementation and testing.|
A43|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Given that rapid changes in computing/IT technologies in a span of 4–5 years are common| and the focus of the manifesto is for the next decade| we envision that identified research directions get addressed and will have impact on the next two or three generations of utility-oriented Cloud computing.|
A43|RQ1|Main Guidelines|Establish standards and guidelines|This comprehensive manifesto brings these advancements together and identifies open challenges that need to be addressed for realising the Future Generation Cloud Computing.|
A43|RQ1|Impact and Applicability|Develop tools and techniques|The manifesto then discusses the emerging trends and impact areas| that further drive these Cloud computing challenges.|
A43|RQ1|Call to Action|Creating a better future|The discussed research directions show a promising and exciting future for the Cloud computing field both technically and economically| and the manifesto calls the community for action in addressing them.|
A43|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|The manifesto identified the current major challenges in Cloud computing domain and summarised the state of the art along with the limitations.|
A43|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|Significant research was already performed to address the Cloud computing technological and adoption challenges| and the state of the art along with their limitations is discussed thoroughly in Section 2.|
A43|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|Novel research challenges in the area of scheduling will also arise in these decentralised and heterogeneous environments.|
A43|RQ3|Relationship with SWeBok|Software architecture|Cloud computing differs from earlier models of distributed computing such as grids and clusters| in that it promises virtually unlimited computational resources on demand.|
A43|RQ3|Relationship with SWeBok|Software Security|Security is a major concern in ICT systems and Cloud computing is no exception.|
A44|RQ1|Principles and Values|User focus|The iSBS track’s goal was to aggregate a large pool of experimental interaction data from a book search portal in order to support data analysis with multilingual and multicultural user groups.|
A44|RQ1|Principles and Values|Collaboration|We hope to spark a discussion within the wider community on the principles which| at the very least| should increase awareness of research documentation aspects in our community and| ideally| have a lasting and positive effect on our own research practices.|
A44|RQ1|Principles and Values|Innovation|Our manifesto is closely aligned with the FAIR principles| but focuses on the specific issues encountered in IIR| while at the same time expanding the scope beyond research data to encompass research designs and infrastructure.|
A44|RQ1|Principles and Values|Openness|It advocates the uptake of sharing and re-use in the IIR research community in order to support validation| standardization and ultimately comparability or even reproducibility of IIR research.|
A44|RQ1|Principles and Values|Ethics and Responsibility|Sharing research data means more than just sharing the original input and output data to an experiment. For a complete understanding and reliable interpretation of the data| the context of data production also needs to be documented.|
A44|RQ1|Principles and Values|Process improvement|We propose eight principles for improving the re-use of resources in the IIR community and present concrete steps on how to achieve them.|
A44|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|This perspective paper on resource re-use intends to draw the attention of the interactive information retrieval (IIR) community to the challenges of research documentation and archiving for future use.|
A44|RQ1|Objective and Motivation|Transforming current practices through innovations|The BIIRRR workshop also tested the publication of so-called experience papers| which allowed authors to discuss and document the research designs of previously published studies in a more detailed way—with room for describing failed experiments—which were not possible in the original outcomes-focused research publications.|
A44|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|Despite an ongoing interest in standardising IIR experimentation and evaluation within evaluation campaigns| this shows that establishing and maintaining a collaborative process and platform to support the re-use of IIR resources remains an unsolved issue.|
A44|RQ2|Gaps|Lack of practical guidelines for implementing principles|One of the major barriers to optimal re-use of research data is often the lack of contextualization and implicit knowledge transfer.|
A44|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|While research data access| re-use| and reproducibility have been promoted for years| there is still much we do not know about the intentions| incentives| practices and barriers to re-use.|
A44|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|No continuity or satisfying re-use practices appear to have been established throughout the years.|
A44|RQ3|Relationship with SWeBok|Software architecture|Only if we successfully trace| document and reference our research designs| data and—optimally— infrastructure| will we be able to build stably on top of the empirical and experiment-based research foundation that has already been established for IIR.|
A44|RQ3|Relationship with SWeBok|Software Quality|We envision a five-level system for data archiving and documentation to increase the re-use of IIR resources. While level five is the ultimate objective for ensuring open documentation and re-use| every level contributes to a more standardized| documented and re-usable resource space for IIR.|
A44|RQ3|Relationship with SWeBok|Software Security|Make sure that your data collection practice follows current data protection and privacy regulations such as the General Data Protection Regulation (GDPR) in the European Union.|
A45|RQ1|Principles and Values|User focus|User Centred Design (UCD) is an approach that puts the user at the centre of the design process.|
A45|RQ1|Principles and Values|Collaboration|The manifesto is designed to give people across disciplines| sectors and levels of engagement a way to take part in the conversation and to make informed choices.|
A45|RQ1|Principles and Values|Innovation|This paper presents a collection of ‘ethical by design’ principles for considering ethical aspects in the design and implementation of technology-based products and services.|
A45|RQ1|Principles and Values|Openness|The principles are intentionally broad so as to enable the people using them leeway to explore what is relevant to the particular context; they are not guidelines| but rather signposts to draw attention to aspects that should be considered| discussed| and supported.|
A45|RQ1|Principles and Values|Ethics and Responsibility|The purpose of this paper is to present preliminary principles that can aid understanding| uptake and sustained use of products| systems and services that assist people in everyday life from an ethical perspective.|
A45|RQ1|Principles and Values|Process improvement|Our position| then| is that design based thinking needs to incorporate ethical principles if the outputs are fairly going to serve the needs of the users.|
A45|RQ1|Principles and Values|Change|Future work includes establishing a standing| international working group tasked with refining and evaluating the ethical by design manifesto.|
A45|RQ1|Principles and Values|Privacy and Security|Balance appropriate privacy and security with equitable access by as many systems and people as possible| globally.|
A45|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|This challenge is becoming more difficult with the increasing number of invisible| distributed interoperating networks of systems augmented with artificial intelligence.|
A45|RQ1|Objective and Motivation|Transforming current practices through innovations|An ethical by design philosophy was discussed as an advance on the ‘privacy by design’ approach in the specific area of video surveillance.|
A45|RQ1|Main Guidelines|Address ethical and social issues|Actively look for and challenge biases and values that may be reflected in a product or service design.|
A45|RQ1|Main Guidelines|Establish standards and guidelines|Seek to integrate with and support the progression of policy.|
A45|RQ1|Impact and Applicability|Promote collaboration and communication|Support shared decision making and feedback.|
A45|RQ1|Impact and Applicability|Adapt and evolve|Be realistic about what is possible and needed.|
A45|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|While most agree that ethics in design is crucial| there is little effective guidance that enables a broader approach to help guide and signpost people when developing or considering solutions.|
A45|RQ2|Gaps|Little discussion of the social and political implications of technology|It is important that product and service designers and developers understand ethics during systems engineering as there have been many cases where designers and developers have implemented system features that violate ethical norms for the user.|
A45|RQ3|Relationship with SWeBok|Software Quality|Future work could include the application of the manifesto to carry out an audit of an existing product or service| that is| retrospective as well as prospective use of the principles.|
A45|RQ3|Relationship with SWeBok|Software Security|Balance appropriate privacy and security with equitable access by as many systems and people as possible| globally.|
A45|RQ3|Relationship with SWeBok|Software Engineering Professional Practice|Every person has a right to understand the product or service and underlying technology with which he or she engages.|
A46|RQ1|Principles and Values|Collaboration|In model-based development| models are usually constructed and manipulated by distributed teams| each working on a partial view of the overall system.|
A46|RQ1|Principles and Values|Innovation|We propose a framework for comparing different approaches to merging| by treating merge as an algebraic operator over models and model relationships.|
A46|RQ1|Principles and Values|Openness|Most approaches to merging are intended for merging models expressed in the same notation [...] Some approaches solve the problem of merging heterogeneous notations by first translating them into an underlying unified language and only then merge them.|
A46|RQ1|Principles and Values|Process improvement|Our framework emphasizes the need to make explicit all assumptions about the relationships between models| and indeed to treat model relationships as first-class objects.|
A46|RQ1|Objective and Motivation|Solve existing problems and challenges|The problem of model merging has been studied in many domains: schemata of several independently developed databases| static and dynamic UML models| web services| program variants| requirements models| and many varieties of reactive systems.|
A46|RQ1|Objective and Motivation|Transforming current practices through innovations|We present a manifesto for research on model merging. We propose a framework for comparing different approaches to merging.|
A46|RQ1|Main Guidelines|Develop tools and techniques|We propose a unifying framework for understanding the model merging problem. Our intent is to facilitate comparison and extension of existing approaches.|
A46|RQ1|Main Guidelines|Promote collaboration and communication|Distributed model management depends crucially on being able to put together models coming from different sources| the process we referred to as merge.|
A46|RQ1|Impact and Applicability|Adapt and evolve|The problem of model merging has been studied in many domains| each with different assumptions. We propose an algebraic framework to unify and extend these approaches.|
A46|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Our framework emphasizes the need to make explicit all assumptions about the relationships between models| and indeed to treat model relationships as first-class objects.|
A46|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|The relationships we describe in this paper go beyond versioning| to include all shared information in multiple models.|
A46|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|We do not assume any particular semantics for our structural models. Check-property depends on domain semantics and is not addressed in our work.|
A46|RQ3|Relationship with SWeBok|Software Engineering Process|A key insight gained by treating models and their operations as an algebra is the central role played by relationships| and the key questions of how relationships are discovered and represented.|
A46|RQ3|Relationship with SWeBok|Software Security|We can characterize each of these as algebraic operations over models and model relationships| in order to understand their properties.|
A47|RQ1|Principles and Values|User focus|By reusing the same components| from language to execution| users can expect consistent semantics across data systems| in addition to a more even set of available features. This reduces the user’s learning curve and cognitive burden| increasing their productivity.|
A47|RQ1|Principles and Values|Collaboration|We hope this work will foster collaboration| motivate further research| and promote a more composable future for data management.|
A47|RQ1|Principles and Values|Innovation|Given these trends| we foresee that composability is soon to cause another major disruption to how data management systems are designed.|
A47|RQ1|Principles and Values|Openness|Recently| projects like Velox| Substrait| and Ibis quickly gained adoption across the industry| allowing modern data stacks to be assembled by only reusing available parts.|
A47|RQ1|Principles and Values|Process improvement|By decomposing data management systems into a more modular stack of reusable components| development can be streamlined while creating a more consistent experience for users.|
A47|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|We believe it is time for a paradigm shift. We envision that by decomposing data management systems into a more modular stack of reusable components| the development of new engines can be streamlined| while reducing maintenance costs and ultimately providing a more consistent user experience.|
A47|RQ1|Objective and Motivation|Transforming current practices through innovations|We advocate for a paradigm shift in how data management systems are designed.|
A47|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|While workloads| requirements| and environmental trends have dramatically evolved since the first databases were developed| our software development practices have not; data management systems continue to be| by and large| developed and distributed as vertically integrated monoliths.|
A47|RQ1|Main Guidelines|Adopt new technologies and approaches|We believe composable is the future of data management| and hope more individuals and organizations will join us in this effort.|
A47|RQ1|Main Guidelines|Promote collaboration and communication|With this work| we hope to incentivize developers to follow a different mindset when developing data management systems.|
A47|RQ1|Impact and Applicability|Develop tools and techniques|We extend the state-of-the-art by presenting a novel reference composable architecture| and discussing the parts of this stack that have received less attention but are key to component composability and reusability.|
A47|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Despite the benefits| developing components in a way that they can be shared and reused across different projects is a challenging task.|
A47|RQ2|Gaps|Lack of integration between different areas of software engineering|Despite sharing many of the same architectural decisions| data structures| and internal data processing techniques| today| the degree of reuse between these systems is unsettlingly limited.|
A47|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|Developing components in a way that they can be shared and reused across different projects is a challenging task.|
A47|RQ3|Relationship with SWeBok|Software architecture|We extend the state-of-the-art by presenting a novel reference composable architecture| and discussing the parts of this stack that have received less attention but are key to component composability and reusability.|
A47|RQ3|Relationship with SWeBok|Software Engineering Models and Methods|We believe that by componentizing data management systems| the pace of innovation can be accelerated.|
A47|RQ3|Relationship with SWeBok|Software Engineering Process|The rapid evolution of user workloads has driven the development of hundreds of specialized data management systems.|
A48|RQ1|Principles and Values|Innovation|We make the case that enabling innovation in middleboxes is at least as important| if not more important| as that for traditional switches and routers.|
A48|RQ1|Principles and Values|Openness|Our vision is a world with software-centric middlebox implementations running on general-purpose hardware platforms that are managed via open and extensible management APIs.|
A48|RQ1|Principles and Values|Architecture|To this end| we present a research agenda that targets extensibility both at the level of a single middlebox| and the management of an ensemble of middleboxes.|
A48|RQ1|Objective and Motivation|Transforming current practices through innovations|Rather than take a philosophical stance on the merits of middleboxes| we propose to embrace deployment realities and focus instead on how we can architect middleboxes for extensibility.|
A48|RQ1|Main Guidelines|Develop tools and techniques|We proceed to explore the unique opportunities and challenges that arise in combining these strategies and applying them in the context of middleboxes.|
A48|RQ1|Impact and Applicability|Adopt new technologies and approaches|Software-based solutions reduce the cost and development cycles to build and deploy new middlebox applications.|
A48|RQ1|Call to Action|Collaborate and share|An open question in this regard is whether our proposed configuration parameters are either complete or minimal.|
A48|RQ2|Gaps|Lack of integration between different areas of software engineering|Today each application runs on separate hardware and each device must be provisioned to handle a peak load.|
A48|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|The challenge here is to find a practical relaxation that is both tractable and near-optimal.|
A48|RQ3|Relationship with SWeBok|Software architecture|We argue that this focus overlooks a key reality in how network deployments evolve in response to changing application| workload| and policy requirements.|
A48|RQ3|Relationship with SWeBok|Software Security|Administrators indicated that middleboxes represent a significant fraction of their (network) capital expenses and expressed the belief that processing complexity necessitates expensive hardware capabilities which contributes to the high capital costs associated with such appliances.|
A49|RQ1|Principles and Values|User focus|Faulty software contributes to the unreliability of the products in which it is embedded and is a source of significant recurring costs and delivery delays.|
A49|RQ1|Principles and Values|Collaboration|Our manifesto represents a consensus position that has emerged from a series of national and international meetings| workshops| and conferences held from 2004 to 2007.|
A49|RQ1|Principles and Values|Innovation|The VSI project aims to build on this individual research| but will make more significant progress by organizing wide-ranging and long-term scientific collaborations.|
A49|RQ1|Principles and Values|Openness|The open source movement shows the power of collective idealism in the development of high-quality software.|
A49|RQ1|Principles and Values|Ethics and Responsibility|Verification technology can be used to find and prevent known vulnerabilities that have significant economic costs| such as security holes.|
A49|RQ1|Principles and Values|Process improvement|Verification complements and extends the capabilities of other software engineering techniques| such as requirements analysis and testing.|
A49|RQ1|Principles and Values|Change|We anticipate that all these trends will continue.|
A49|RQ1|Principles and Values|Artificial intelligence|Improvements in the speed| capacity| and affordability of hardware are continuing at the traditional rate.|
A49|RQ1|Principles and Values|Privacy and Security|Verification technology can be used to find and prevent known vulnerabilities that have significant economic costs| such as security holes.|
A49|RQ1|Principles and Values|Sustainability|The goal of the initiative is to demonstrate the viability of developing large-scale| bug-free software through the end-to-end use of verification technology.|
A49|RQ1|Principles and Values|Architecture|Verification is applicable to all aspects of software construction and analysis: domain modeling| architectural design| formal specification| testing| refactoring| and maintenance.|
A49|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|We propose an ambitious and long-term research program toward the construction of error-free software systems.|
A49|RQ1|Objective and Motivation|Transforming current practices through innovations|We envision a world in which computer programmers make no more mistakes than other professionals| a world in which computer programs are always the most reliable components of any system or device.|
A49|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|The reliability of software is too important to be left to chance and good intentions.|
A49|RQ1|Main Guidelines|Establish standards and guidelines|Verification makes these properties explicit| and rigorously determines whether the program has the expected property.|
A49|RQ1|Impact and Applicability|Develop tools and techniques|Researchers will collaboratively study the scientific foundations of software verification covering theoretical aspects| interoperable tools| and comprehensive verification experiments.|
A49|RQ1|Call to Action|Collaborate and share|Collaboration is also required to deal with research challenges that are growing beyond the capabilities of single scientists and research teams.|
A49|RQ2|Gaps|Lack of practical guidelines for implementing principles|The main inhibiting factor during the early years of the project will be the lack of scientific staff with the right background| skills| and motivation.|
A49|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Before embarking now on a large-scale project to solve the problem| it is essential to understand and explain past failures and make a convincing case for future success.|
A49|RQ2|Gaps|Lack of integration between different areas of software engineering|The lack of collaboration with other areas of computing is also a current weakness.|
A49|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|Even though software requirements cannot be verified against a customer’s informal needs and desires| a great deal of clarity| insight| and precision can be gained by formalizing these requirements.|
A49|RQ3|Relationship with SWeBok|Software architecture|Verification is applicable to all aspects of software construction and analysis: domain modeling| architectural design| formal specification| testing| refactoring| and maintenance.|
A49|RQ3|Relationship with SWeBok|Software Quality|Current estimates of the cost of software error to the economies of the world are in the region of a hundred billion dollars per year.|
A49|RQ3|Relationship with SWeBok|Software Security|Verification technology can be used to find and prevent known vulnerabilities that have significant economic costs| such as security holes.|
A49|RQ3|Relationship with SWeBok|Software Engineering Process|The VSI project aims to build on this individual research| but will make more significant progress by organizing wide-ranging and long-term scientific collaborations.|
A50|RQ1|Principles and Values|User focus|Our highest priority is to satisfy the customer by building a non-linear| proactive| and self-adaptive system.|
A50|RQ1|Principles and Values|Collaboration|The most efficient and effective method of building an antifragile organization is building on honest| open and transparent communication.|
A50|RQ1|Principles and Values|Innovation|We propose a similar approach to Antifragility| namely we would like to define the principles ruling the building up of software systems which exploit faults and errors to become better and stronger.|
A50|RQ1|Principles and Values|Openness|All rights related to the Manifesto are free| open and belong to the community.|
A50|RQ1|Principles and Values|Ethics and Responsibility|Antifragility means much more than having an open and direct discussion. It means to build structurally not only a culture of trust but to accept proactively failures| in order to improve the whole system or organization.|
A50|RQ1|Principles and Values|Process improvement|Continuous exposure to faults and automatic fixing is the primary measure.|
A50|RQ1|Principles and Values|Change|We welcome changing scenarios where unexpected events (Black Swans) are the real paradigm shifting entities.|
A50|RQ1|Principles and Values|Artificial intelligence|A antifragile system should not block itself in front of unknown inputs| it has to accept them and to use machine learning algorithms to improve its efficiency.|
A50|RQ1|Principles and Values|Privacy and Security|We deliver assuring embedded and adaptive fault tolerance.|
A50|RQ1|Principles and Values|Sustainability|An antifragile organization promotes a context-aware environment.|
A50|RQ1|Principles and Values|Architecture|Antifragile architectures emerge from self-organizing| context-aware teams.|
A50|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|A large mission critical organization like NASA is actively trying to adopt Antifragility within its organization and systems.|
A50|RQ1|Objective and Motivation|Transforming current practices through innovations|This paper proposes a Manifesto for antifragile software both to systematize the knowledge acquired and to start developing a common framework for Antifragility.|
A50|RQ1|Objective and Motivation|Emphasis on collaboration and interdisciplinarity|All stakeholders| and the broader environment| lead the antifragile organization.|
A50|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|We suggest that Antifragile can be seen as an extreme way of doing Agile.|
A50|RQ1|Objective and Motivation|Create or improve tools and platforms|We are proposing a framework to let people discuss about the principles of designing antifragile software.|
A50|RQ1|Main Guidelines|Develop tools and techniques|Technical excellence| reality| and redundancy are essential dimensions for building an antifragile system.|
A50|RQ1|Main Guidelines|Address ethical and social issues|Errors are the primary source of an antifragile system. They shape the system letting it become antifragile.|
A50|RQ1|Main Guidelines|Establish standards and guidelines|At regular intervals| the developing team reflects about the context situation| on how to become more effective| then tunes and adjusts its behavior accordingly.|
A50|RQ1|Impact and Applicability|Ensure security and privacy|We deliver assuring embedded and adaptive fault tolerance.|
A50|RQ1|Impact and Applicability|Share knowledge|All rights related to the Manifesto are free| open and belong to the community.|
A50|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|This Manifesto does not want to be a fixed and complete set of principles. It is an open contribution to the discussion which needs to be improved and re-elaborated.|
A50|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|We hope to get some consensus in this proposal to start outlining a software Antifragility development methodology.|
A50|RQ3|Relationship with SWeBok|Software architecture|Antifragile architectures emerge from self-organizing| context-aware teams.|
A50|RQ3|Relationship with SWeBok|Software Quality|An antifragile system is per se exposed| to improve its functionality. On the other hand| automatic fixing is the outcome of the process.|
A50|RQ3|Relationship with SWeBok|Software Security|We deliver assuring embedded and adaptive fault tolerance.|
A50|RQ3|Relationship with SWeBok|Software Engineering Process|The numbers of principles chosen (12)| as also the starting point (e.g.| the customer| the team) are explicitly taken from the Agile Manifesto.|
A51|RQ1|Principles and Values|User focus|Users: Demand that the software you use embraces all the principles mentioned.|
A51|RQ1|Principles and Values|Collaboration|This is the result of the discussion and different viewpoints of academia and industry practitioners who joined at the first International Workshop on QuANtum SoftWare Engineering & pRogramming (QANSWER).|
A51|RQ1|Principles and Values|Innovation|We expect| in the near future| to take advantage of their huge computation capacity to solve problems which are considered very difficult for today’s 'classic' computers.|
A51|RQ1|Principles and Values|Openness|QSE is agnostic regarding quantum programming languages and technologies.|
A51|RQ1|Principles and Values|Ethics and Responsibility|Professional associations: Revise practice| attempting to incorporate principles; acknowledge explicitly the need to consider quantum software engineering as part of professional practice.|
A51|RQ1|Principles and Values|Process improvement|QSE assures the quality of quantum software. Quality management for both process and product are essential if quantum software with expected quality levels is to be produced.|
A51|RQ1|Principles and Values|Change|QSE embraces the coexistence of classical and quantum computing| and advocates the use of reengineering techniques to integrate new quantum algorithms with the existing classical information systems.|
A51|RQ1|Principles and Values|Artificial intelligence|Quantum computers attempt to use various 'counterintuitive' principles such as superposition and entanglement in the effort to provide faster computing speed.|
A51|RQ1|Principles and Values|Privacy and Security|QSE addresses security and privacy by design. Quantum information systems must be secure and guarantee the privacy of data and of users.|
A51|RQ1|Principles and Values|Sustainability|Quantum computing applications have direct applications| and many other potential ones| including energy efficiency and optimization in logistics| finance| and healthcare.|
A51|RQ1|Principles and Values|Architecture|QSE promotes quantum software reuse. The study of design and architectural patterns for quantum programs must be addressed.|
A51|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|We recognize that there is a rapidly-increasing awareness of the need for quantum computing applications.|
A51|RQ1|Objective and Motivation|Transforming current practices through innovations|Methodologies for developing quantum programs must be created or adapted from the existing ones.|
A51|RQ1|Objective and Motivation|Emphasis on collaboration and interdisciplinarity|QSE serves to deliver quantum software with processes and methods that are understandable| controllable and repeatable by broad communities.|
A51|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|We feel that the time has come to take care of producing quantum software by applying knowledge and lessons learned from the software engineering field.|
A51|RQ1|Objective and Motivation|Solve existing problems and challenges|Quantum software evolution must be handled throughout the whole quantum software lifecycle.|
A51|RQ1|Main Guidelines|Adopt new technologies and approaches|QSE assures the quality of quantum software. Since we cannot improve what we cannot measure| new metrics for quantum programs and quantum processes have to be developed.|
A51|RQ1|Main Guidelines|Develop tools and techniques|The study of design and architectural patterns for quantum programs must be addressed.|
A51|RQ1|Main Guidelines|Share knowledge|Researchers: Identify research questions in your field that can help us to better understand quantum software engineering. Discuss these with your peers.|
A51|RQ1|Impact and Applicability|Consider context and application|QSE assures the quality of quantum software. Quality management for both process and product are essential.|
A51|RQ1|Impact and Applicability|Seek sustainability|Quantum computing applications include energy efficiency and optimization in logistics| finance| and healthcare.|
A51|RQ1|Call to Action|Adopt practices and principles|QSE covers the governance and management of software. Managers should be aware of the particular processes| organizational structures| principles| policies and frameworks.|
A51|RQ2|Gaps|Lack of practical guidelines for implementing principles|Methodologies for developing quantum programs must be created or adapted from the existing ones.|
A51|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|New metrics for quantum programs and quantum processes have to be developed.|
A51|RQ2|Gaps|Lack of integration between different areas of software engineering|QSE embraces the coexistence of classical and quantum computing| and advocates the use of reengineering techniques to integrate new quantum algorithms with the existing classical information systems.|
A51|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|Since we cannot improve what we cannot measure| new metrics for quantum programs and quantum processes have to be developed.|
A51|RQ3|Relationship with SWeBok|Software architecture|The study of design and architectural patterns for quantum programs must be addressed.|
A51|RQ3|Relationship with SWeBok|Software Quality|QSE assures the quality of quantum software. Quality management for both process and product are essential.|
A51|RQ3|Relationship with SWeBok|Software Security|QSE addresses security and privacy by design. Quantum information systems must be secure and guarantee the privacy of data and of users.|
A51|RQ3|Relationship with SWeBok|Software Engineering Process|QSE supports the management of quantum software development projects| delivering quantum software that fulfills the initial business goal and requirements.|
A51|RQ3|Relationship with SWeBok|Software Engineering Professional Practice|Professional associations: Revise practice| attempting to incorporate principles; acknowledge explicitly the need to consider quantum software engineering as part of professional practice.|
A52|RQ1|Principles and Values|User focus|The link between UX and software engineering lies in the definition of quality models that address a mesh of functional and non-functional quality factors (e.g. reliability| security| accessibility) determining user acceptance.|
A52|RQ1|Principles and Values|Collaboration|The overarching goal of the workshop is to invite inputs for the construction of a coherent UX Manifesto constituted by the three pillars: Principles| Policy and Plans.|
A52|RQ1|Principles and Values|Innovation|Developing theoretically sound methodologies should be high in the UX research agenda.|
A52|RQ1|Principles and Values|Openness|The UX manifesto can become a reference model for future work on UX.|
A52|RQ1|Principles and Values|Ethics and Responsibility|It is intriguing to gather real case studies to illustrate how UX is actually handled in the professional world of interactive product design in terms of requirements analysis| design| engineering and evaluation.|
A52|RQ1|Principles and Values|Process improvement|To develop theoretically sound methodologies for analyzing| designing| engineering and evaluating UX.|
A52|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Is the research and practice on User Experience (UX) maturing since it has popularized the HCI community and the industry more than a decade ago?|
A52|RQ1|Objective and Motivation|Transforming current practices through innovations|Questions like 'How to design for UX?' and 'How to evaluate UX?' are easy to ask but difficult to answer.|
A52|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|There are critics that UX is only used as a marketing slogan.|
A52|RQ1|Main Guidelines|Establish standards and guidelines|Hence| whether specific standards for UX should be developed is debatable.|
A52|RQ1|Impact and Applicability|Adapt and evolve|Integrating the advantages of both approaches rather than treating them as mutually exclusive is the challenge of future UX theorizing.|
A52|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Theoretically UX is incoherent; methodologically UX is not yet mature either.|
A52|RQ2|Gaps|Lack of integration between different areas of software engineering|The link between UX and software engineering lies in the definition of quality models that address a mesh of functional and non-functional quality factors.|
A52|RQ3|Relationship with SWeBok|Software architecture|The link between UX and software engineering lies in the definition of quality models that address a mesh of functional and non-functional quality factors.|
A52|RQ3|Relationship with SWeBok|Software Engineering Professional Practice|To understand UX in practice through case studies| thereby identifying factors that may facilitate or hinder the incorporation of UX into interactive products.|
A53|RQ1|Principles and Values|User focus|Social media and online collaboration has enabled a greater level of connectedness| heralding a new era of belonging or global community through person-to-person collectivity.|
A53|RQ1|Principles and Values|Collaboration|Technology plus people-powered communities and platforms invite unprecedented advances| coupled with a sense of belonging.|
A53|RQ1|Principles and Values|Innovation|Cities remain the seedbed for innovation| and innovation can only emerge from an open and optimistic perspective of our future.|
A53|RQ1|Principles and Values|Openness|The power of networks of people – shaped by demand and opportunity| propelled by open innovation – is the foundation for our urban societies.|
A53|RQ1|Principles and Values|Ethics and Responsibility|Trust is the currency that fuels agile urban societies.|
A53|RQ1|Principles and Values|Change|The more we embrace the tension between self-reliance and interdependence| the better future we will create together for our cities| and for each other.|
A53|RQ1|Principles and Values|Sustainability|As the carbon economy wanes and the demand for new solutions grows| energy production and distribution will spark from the power of sharing and creative collaboration.|
A53|RQ1|Principles and Values|Architecture|Once networked| these assets can be effectively designed| utilised and maintained. Whole cities can adeptly reorganise in real time| anticipating demand and shaping local code accordingly.|
A53|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|The combination of technology plus empowered people fuels accelerated open learning| sharing and innovation across geographies and sectors.|
A53|RQ1|Objective and Motivation|Create or improve tools and platforms|Existing online platforms already address some of society’s urgent needs| especially for urban dwellers.|
A53|RQ1|Main Guidelines|Promote collaboration and communication|Tighter connections shift our social operating system from an orientation of the individual to the power of peers in collaboration.|
A53|RQ1|Main Guidelines|Seek sustainability|Self-contained| hyper-local systems will prove to be far more resilient and less expensive than last century’s ‘centralised’ utilities.|
A53|RQ1|Impact and Applicability|Adopt new technologies and approaches|By 2020| expect to see leading cities explore the idea of Community-as-a-Service (CaaS)| a concept that borrows inspiration from the software industry’s Software-as-a-Service or SaaS business models.|
A53|RQ1|Impact and Applicability|Share knowledge|Self-contained| hyper-local systems will prove to be far more resilient and less expensive than last century’s ‘centralised’ utilities. These CaaS models will be refined and shared rapidly| allowing each new service to adapt to local customs and environment.|
A53|RQ1|Call to Action|Collaborate and share|The power of networks of people – shaped by demand and opportunity| propelled by open innovation – is the foundation for our urban societies.|
A53|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|As each contributor generates power| communities will go beyond zero energy to build surplus. A new grid will form| each contributor representing a point on an open| shared power network.|
A53|RQ3|Relationship with SWeBok|Software Quality|Trust is the currency that fuels agile urban societies. Interactions become fluid through a global open currency – perhaps ‘bitseeds’| which will grow in value as community ecosystems develop and deepen.|
A53|RQ3|Relationship with SWeBok|Software Security|As we each generate our own energy| opportunities to ‘bank’ surplus come from the peer-to-peer| district-by-district mesh of hyper-local production and distribution.|
A54|RQ1|Principles and Values|Collaboration|Using many readers in place of a few referees can be viewed as a form of crowdsourcing.|
A54|RQ1|Principles and Values|Openness|Readersourcing can be defined as an independent| third-party| nonprofit| and academic/scientific endeavor aimed at quality rating of scholarly literature and scholars.|
A54|RQ1|Principles and Values|Ethics and Responsibility|Being a good reader (referee) is an evolutionarily stable strategy.|
A54|RQ1|Principles and Values|Process improvement|Readersourcing is a solution to a problem| but it immediately raises another problem| for which we need a solution: how to distinguish good readers from bad readers.|
A54|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|We are going to run out of good referees.|
A54|RQ1|Objective and Motivation|Create or improve tools and platforms|A Firefox plugin will also be available to allow readers to express their judgments without connecting to the Readersourcing Web site.|
A54|RQ1|Main Guidelines|Establish standards and guidelines|The last piece of the puzzle is to define what a right judgment is.|
A54|RQ1|Main Guidelines|Address ethical and social issues|A last problem is social acceptance: Will scholars spend time to express judgments? Will they accept an 'objective' score?|
A54|RQ1|Impact and Applicability|Promote collaboration and communication|Using many readers in place of a few referees can be viewed as a form of crowdsourcing.|
A54|RQ1|Impact and Applicability|Adapt and evolve|It is also easy to imagine Readersourcing as coexisting with peer review.|
A54|RQ1|Call to Action|Creating a better future|Readersourcing| an independent| third-party| nonprofit| and academic/scientific endeavor aimed at quality rating of scholarly literature and scholars| has been presented and defended against some possible criticisms.|
A54|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|A last problem is social acceptance: Will scholars spend time to express judgments? Will they accept an 'objective' score?|
A54|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|So| summarizing| the proposed solution to the problem presented in the previous section is to crowdsource peer review to the readers.|
A54|RQ3|Relationship with SWeBok|Software Quality|So| to make a long story short| and to summarize this section: Scholarly publishing and peer review are reasonably effective ways to achieve effective scholarly knowledge communication| with an a priori| prepublication quality filter; however| they are not perfect| and their limitations are also often perceived in the field.|
A54|RQ3|Relationship with SWeBok|Software Engineering Professional Practice|A last problem is social acceptance: Will scholars spend time to express judgments? Will they accept an 'objective' score?|
A55|RQ1|Principles and Values|Collaboration|The modern organisation paradigm is a change from experts solving problems and trying to force change on organisations to the organisation’s people solving problems and changing the organisation together.|
A55|RQ1|Principles and Values|Process improvement|SPI is a tool to improve the competitiveness of organisations.|
A55|RQ1|Principles and Values|Change|We believe that all improvement involves change; for the individual| the project| and the organisation.|
A55|RQ1|Principles and Values|Privacy and Security|Ensure all parties understand and agree on process.|
A55|RQ1|Objective and Motivation|Transforming current practices through innovations|If you are using a maturity model to inspire improvement| you should respect that at maturity level 3| the process belongs to the organisation.|
A55|RQ1|Objective and Motivation|Solve existing problems and challenges|We truly believe that SPI must involve people actively and affect their daily activities.|
A55|RQ1|Main Guidelines|Promote collaboration and communication|Use today’s implemented processes as an agreed baseline for process improvements.|
A55|RQ1|Impact and Applicability|Establish standards and guidelines|Process improvements constantly challenge the models and process descriptions. They are to be continuously optimised to reflect the state-of-the-practice in the organisation.|
A55|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|The biggest risk in a SPI project is the complete lack of risk management.|
A55|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|If they get petrified – process improvement may grind to a halt.|
A55|RQ3|Relationship with SWeBok|Software Engineering Process|Better processes equal more money and better business.|
A56|RQ1|Principles and Values|Collaboration|The SPI manifesto and the related PI manager training by delivering the necessary principles| values and tools will help the (S)PI professionals to deal with these challenges and successfully help organizations to improve their business by empowering their people. (p.409)|
A56|RQ1|Principles and Values|Change|One trend in this learning curve is that every member of an organisation now performs tasks formerly performed by experts. (p.403)|
A56|RQ1|Principles and Values|Process improvement|Simplifying process quality from their perspective means: Worker: I step in| complete my tasks and step out| no time-consuming disturbance| no over hours| no weekend work. Manager: I make money with a reliable business. Customer: I get what I want with an acceptable quality for an acceptable price. (p.408)|
A56|RQ1|Principles and Values|Artificial intelligence|Currently we face completely automated back offices| and we see skilled workers with lot more authority and responsibility than even a team lead in 1900| would have even dreamed about. (p.404)|
A56|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|However – compared to the agile manifesto – the SPI Manifesto is something for expert clubs and did not have real impact. (p.401)|
A56|RQ1|Objective and Motivation|Solve existing problems and challenges|It was the process bureaucracy caused by the CMMI driven SEPG. It was a 'no' to ivory towers where unsuccessful project managers and clueless beginners met in order to define the software development and testing processes of an organisation. (p.401)|
A56|RQ1|Main Guidelines|Promote collaboration and communication|The issue of team vs organisation focus is unsolved and subject to debate. (p.405)|
A56|RQ1|Impact and Applicability|Establish standards and guidelines|German OEM challenge their suppliers to fulfill Automotive SPICE® Requirements while RWS uses ISO/IEC 15504 Part 6:2013 – Systems engineering. (p.407)|
A56|RQ1|Call to Action|Challenge the status quo|At the end it could be summarized that agile in its core is not a tool to improve organisations and as soon as it is used to improve organisations it tends to become expert improvement with certification schemes| and strict procedures in the background. (p.405)|
A56|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Summarizing the provocation: The SPI Manifesto was the summary of expert knowledge in SPI but was outdated when written. Therefore| it had no practical impact and remained an academic footnote. (p.403)|
A56|RQ2|Gaps|Lack of integration between different areas of software engineering|When transforming a silo organization and helping the organization to make the next step in the learning curve| the SPI expert needs organizational background knowledge. (p.408)|
A56|RQ3|Relationship with SWeBok|Software Engineering Management|Checking which of these strategies might more fit to an expert driven improvement or an 'everyone' driven improvement| it becomes obvious| that commanding is really a tool from the 20th century but all other need a high level of collaboration. (p.406)|
A57|RQ1|Principles and Values|Process improvement|We have also gone on to introspect about these solutions to ask ourselves why they are good solutions and what is the underlying test automation principle that they uphold? |
A57|RQ1|Principles and Values|Architecture|These frameworks usually end up causing more problems than they solve. What we are advocating is thoughtful application of test automation patterns.|
A57|RQ1|Principles and Values|Innovation|We propose these principles and patterns as a 'Test Automation Manifesto'.                                                                 |
A57|RQ1|Principles and Values|Change|The cost of writing and maintaining test suites has been a particular challenge... we had to find ways to reduce the cost while producing the valuable return we wanted. |
A57|RQ1|Objective and Motivation|Solve existing problems and challenges| We encountered a number of problems... we had to find ways to reduce the cost while producing the valuable return we wanted.               |
A57|RQ1|Objective and Motivation|Transforming current practices through innovations|We believe that adherence to the principles of the Manifesto will result in automated tests that are easier to write| read| and maintain. |
A57|RQ1|Objective and Motivation|Improve or propose new technologies| approaches and methods| We| and others| have developed a number of solutions to address these challenges.                          |
A57|RQ1|Main Guidelines|Adopt new technologies and approaches|We propose these principles and patterns as a 'Test Automation Manifesto'.                               |
A57|RQ1|Main Guidelines|Develop tools and techniques| Generative test automation patterns can be used to guide test automaters in avoiding the problems in the first place.     |
A57|RQ1|Main Guidelines|Share knowledge| We propose these principles and patterns as a 'Test Automation Manifesto'.                                  |
A57|RQ1|Main Guidelines|Adapt and evolve| We have found that applying the generative test automation patterns leads us to produce clear| maintainable| robust automated tests...  |
A57|RQ1|Impact and Applicability|Conduct research and experiments|This can be accomplished manually either by writing the tests before the code they test (and they should fail) or by introducing defects into the SUT after the tests are written.|
A57|RQ1|Impact and Applicability|Promote collaboration and communication| We| and others| have developed a number of solutions to address these challenges.              |
A57|RQ1|Impact and Applicability|Adapt and evolve|Rather than asking what refactoring you should apply to remove a smell| we prefer to ask what principle is being violated... |
A57|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|But when we refactor our tests| what will alert us to broken tests?... Unfortunately not!   |
A57|RQ2|Gaps|Lack of practical guidelines for implementing principles| Rather than asking what refactoring you should apply to remove a smell| we prefer to ask what principle is being violated...     |
A57|RQ3|Relationship with SWeBok|Software architecture|SUT API Encapsulation reduces maintenance cost by isolating tests from unimportant changes to SUT API.                  |
A57|RQ3|Relationship with SWeBok|Software Construction|Anonymous Creation Methods ensure tests are repeatable and robust.                 |
A57|RQ3|Relationship with SWeBok|Software Quality|The Test Automation Manifesto defines the principles that underlie highly effective tests.           |
A57|RQ3|Relationship with SWeBok|Software Testing|Bad smells occur specifically in test code. They recommend a set of refactorings that can be applied to the tests to remove them.                 |
A58|RQ1|Principles and Values|User focus|To support validity by advancing reproducibility and comparability: reproducibility of research results is an important requirement for achieving validity in many scientific disciplines.|
A58|RQ1|Principles and Values|Collaboration|In the long run| different stakeholders should join forces to enable better practices for data sharing for social media researchers.|
A58|RQ1|Principles and Values|Openness|Making research data accessible for reuse is in line with initiatives calling for a more ‘open science’.|
A58|RQ1|Principles and Values|Privacy and Security|Ensuring users’ privacy in the face of often lacking or questionable informed consent| and allowing reproducibility and peer-review to ensure ‘good research’.|
A58|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Some of the researchers who study social media explicitly value the freedom and creativity in this area with relatively little constraints and standards.|
A58|RQ1|Objective and Motivation|Transforming current practices through innovations|Such efforts are often supported by funding agencies who increasingly insist on publications and research data to be shared publicly.|
A58|RQ1|Objective and Motivation|Create or improve tools and platforms|Dedicated digital data archives have started archiving social media data.|
A58|RQ1|Main Guidelines|Establish standards and guidelines|An environment that is conducive to the sharing of research data depends both on the availability of infrastructures to support archiving and data sharing.|
A58|RQ1|Impact and Applicability|Consider context and application|Researchers should prepare documentation of major sets of data they have collected for their own use.|
A58|RQ1|Impact and Applicability|Promote collaboration and communication|Publishers and conference organizers can support researchers in sharing datasets by publishing data in addition to written papers.|
A58|RQ1|Call to Action|Collaborate and share|We hope that this call to action will inspire fruitful discussions and novel approaches to data sharing in the future.|
A58|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Obstacles range from lack of incentives to the fear of opening one’s own research to attack.|
A58|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|More research is needed on users’ privacy expectations on social media platforms.|
A58|RQ3|Relationship with SWeBok|Software Quality|Control over data quality is crucial. Making research data accessible within the research community is a first necessary step to support reproducibility and comparability of social media research.|
A58|RQ3|Relationship with SWeBok|Software Security|Researchers would currently have to figure out which setting may be most appropriate for their dataset – also in light of platforms’ terms of services and user privacy.|
A58|RQ3|Relationship with SWeBok|Software Engineering Professional Practice|More research is needed on users’ privacy expectations on social media platforms. Ethical considerations should also be addressed in publications.|
A59|RQ1|Principles and Values|User focus|We believe that two key factors are the need to make new concepts accessible to those comfortable with existing practice and the need to show a quick pay-back for the effort involved in embracing them.|
A59|RQ1|Principles and Values|Collaboration|Research on patterns has begun to consider facets of concurrency and parallelism. While initially targeting issues of synchronization and non-determinism more relevant to distributed computing| recent work has moved closer to the concerns of High Performance Computing (HPC).|
A59|RQ1|Principles and Values|Innovation|The skeletal approach to parallel programming is well documented in the research literature. It observes that many parallel algorithms can be characterised and classified by their adherence to one or more of a number of generic patterns of computation and interaction.|
A59|RQ1|Principles and Values|Openness|Instead| we should build bridges to the de facto standards of the day| refining or constraining only where strictly necessary. We should respect the conceptual models of these standards| offering skeletons as enhancements rather than as competition.|
A59|RQ1|Principles and Values|Ethics and Responsibility|Skeletal programming has still to make a substantial impact on mainstream practice in parallel applications programming. In contrast| MPI was designed to address similar issues and has proved very popular.|
A59|RQ1|Principles and Values|Process improvement|The goal of the eSkel library is to add such higher-level collective operations to the MPI programmer’s toolbox.|
A59|RQ1|Principles and Values|Change|We argue for a more pragmatic approach than has previously been adopted in order to enhance accessibility.|
A59|RQ1|Principles and Values|Architecture|We must be careful to draw a balance between our desire for abstract simplicity and the pragmatic need for flexibility. This is not a quantifiable trade-off.|
A59|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Thus| Section 3 is a manifesto for a research programme which aims to take skeletal programming into the parallel mainstream.|
A59|RQ1|Objective and Motivation|Transforming current practices through innovations|Skeletal programming proposes that such patterns be abstracted and provided as a programmer’s toolkit| with specifications which transcend architectural variations but implementations which recognize these to enhance performance.|
A59|RQ1|Objective and Motivation|Create or improve tools and platforms|We sketch the eSkel library| which represents a concrete attempt to apply these principles.|
A59|RQ1|Main Guidelines|Develop tools and techniques|The eSkel library is a library of C function and type definitions which extend the standard C binding to MPI with skeletal operations.|
A59|RQ1|Main Guidelines|Establish standards and guidelines|We must construct our systems to allow the integration of skeletal and ad-hoc parallelism in a well-defined way.|
A59|RQ1|Impact and Applicability|Ensure security and privacy|Skeletal programs can be ported to new architectures| with little or no amendment to the source| and with sustained performance.|
A59|RQ1|Impact and Applicability|Share knowledge|Ultimately these must result from direct experience of high-quality implementations| but in the first instance| we must build a convincing catalogue of case studies.|
A59|RQ1|Call to Action|Adopt new technologies and approaches|We must also be able to show that there are benefits which outweigh the initial overheads and that it is possible to experience these early on the learning curve.|
A59|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Yet skeletal programming has still to make a substantial impact on mainstream practice in parallel applications programming.|
A59|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|Many have chosen to embed the skeletal concept entirely within a functional programming language... However| the typical user is challenged with a massive conceptual shift| and a sense of dislocation.|
A59|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|Our first decision was to present the skeletons in the form of a library| in order to avoid the introduction of any new syntax.|
A59|RQ3|Relationship with SWeBok|Software architecture|We present four principles which we believe should guide the future design and development of skeletal programming systems.|
A59|RQ3|Relationship with SWeBok|Software Design|This was straightforward| with no amendments required to the core of the code.|
A59|RQ3|Relationship with SWeBok|Software Quality|We must be careful to draw a balance between our desire for abstract simplicity and the pragmatic need for flexibility.|
A60|RQ1|Principles and Values|User focus|The perspective of this workshop is that of the research team developing and/or using academic software. A key role is that of the research software engineer (RSE)| the person with expertise both in academic research| and in the software engineering tools and technology needed to build the software used in the research| and to make it sustainable.|
A60|RQ1|Principles and Values|Collaboration|The Dagstuhl Perspectives Workshop on 'Engineering Academic Software' has examined the strengths| weaknesses| risks| and opportunities of academic software engineering. A key outcome of the workshop is this Dagstuhl Manifesto| serving as a roadmap towards future professional software engineering for software-based research instruments and other software produced and used in an academic context.|
A60|RQ1|Principles and Values|Innovation|There is an explosion of available open-data online which is accessed and analysed through the creation of new software – generating more data to analyse.|
A60|RQ1|Principles and Values|Openness|I will develop software as open source from the start| whenever possible.|
A60|RQ1|Principles and Values|Ethics and Responsibility|I will contribute to sustaining software I use and rely on.|
A60|RQ1|Principles and Values|Process improvement|I will match proposed software engineering practices to the actual needs and resources of the project.|
A60|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|The goals of the workshop were to plan how to widen and deepen the impact of software engineering knowledge in research labs across the globe and to prioritize pressing open questions for the software engineering community with respect to research software.|
A60|RQ1|Objective and Motivation|Create or improve tools and platforms|I will document (including usage instructions| and input and output examples)| package| release| and archive versions of my software.|
A60|RQ1|Main Guidelines|Adopt new technologies and approaches|I will make explicit how to cite my software. I will cite the software I used to produce my research results.|
A60|RQ1|Main Guidelines|Establish standards and guidelines|I will develop software as open source from the start| whenever possible.|
A60|RQ1|Impact and Applicability|Ensure security and privacy|How can we secure academic software quality? How can we monitor| steer| report on| and review academic software quality?|
A60|RQ1|Impact and Applicability|Promote collaboration and communication|The pledges are organized into three groups| dealing respectively with: (i) ensuring that research software is properly cited; (ii) promoting the careers of research software engineers who develop academic software; and (iii) ensuring the quality and sustainability of software during and following its development.|
A60|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|How can we verify (test or prove) our claims? Is the software that drives our research methods correct? Are the inputs and outputs sufficiently specified to be able to interpret the difference between incorrect and correct?|
A60|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|Are we certain we can reproduce previous research methods in the future given arbitrary changes to the technological contexts (machines| operating systems| programming languages| frameworks)?|
A60|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|How can we monitor| steer| report on| and review academic software quality? How can we manage and secure trust between academic research teams considering software developed for output and/or research methods?|
A60|RQ3|Relationship with SWeBok|Software Requirements|What is academic software? How does it differ from other software? What are its most pressing dimensions of quality? What are the major success factors?|
A60|RQ3|Relationship with SWeBok|Software Quality|Is the software process we use fit for the quality we expect? How can we optimize it in a unique academic context without losing quality?|
A61|RQ1|Principles and Values|User focus|Memory safety vulnerabilities| like buffer overflows and use after free| are endemic to the C and C++ programming languages. Despite decades of effort to help programmers find and fix these issues| they nonetheless are exploited with distressing regularity.|
A61|RQ1|Principles and Values|Collaboration|We live in interesting times when the National Security Agency| the Cybersecurity and Infrastructure Security Agency| and even Consumer Reports have issued reports that are in broad agreement and are offering similar advice: Memory safety is no longer optional.|
A61|RQ1|Principles and Values|Innovation|Thankfully| memory safe languages have already made deep inroads in a variety of industries. For example| virtually every Android app is written in Java or Kotlin.|
A61|RQ1|Principles and Values|Openness|We need to fix these vulnerabilities sooner rather than later.|
A61|RQ1|Principles and Values|Ethics and Responsibility|Memory safety has risen to the level of a public policy concern.|
A61|RQ1|Principles and Values|Process improvement|Google has been working| for several years| to rewrite the most sensitive of these components in Rust (another safe programming language).|
A61|RQ1|Principles and Values|Change|The best answer today is incremental rewriting| as Google has been doing with Android.|
A61|RQ1|Principles and Values|Privacy and Security|From 2019 to 2022 [the number of memory safety vulnerabilities] has dropped from 76% down to 35% of Android’s total vulnerabilities.|
A61|RQ1|Principles and Values|Architecture|Rust programs can offer a guarantee of memory safety without giving up the performance and low-level features that C programmers demand.|
A61|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Despite decades of effort to help programmers find and fix these issues| they nonetheless are exploited with distressing regularity.|
A61|RQ1|Objective and Motivation|Transforming current practices through innovations|Google has been working| for several years| to rewrite the most sensitive of these components in Rust.|
A61|RQ1|Objective and Motivation|Emphasis on collaboration and interdisciplinarity|We live in interesting times when the National Security Agency| the Cybersecurity and Infrastructure Security Agency| and even Consumer Reports have issued reports that are in broad agreement.|
A61|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|Memory safety has risen to the level of a public policy concern.|
A61|RQ1|Objective and Motivation|Solve existing problems and challenges|To make matters more complicated| many common devices (e.g.| automobiles) have hundreds or thousands of little computers from different suppliers doing different jobs.|
A61|RQ1|Main Guidelines|Adopt new technologies and approaches|Virtually every Android app is written in Java or Kotlin. Both are memory safe programming languages.|
A61|RQ1|Main Guidelines|Develop tools and techniques|Rust is novel for not requiring garbage collection and for allowing objects to live on the stack or the heap.|
A61|RQ1|Main Guidelines|Establish standards and guidelines|Memory safety is no longer optional. Computer software must be developed with memory safety as a baseline requirement.|
A61|RQ1|Impact and Applicability|Ensure security and privacy|Memory safety vulnerabilities no longer represent a majority of Android’s vulnerabilities.|
A61|RQ1|Impact and Applicability|Promote collaboration and communication|The best answer today is incremental rewriting| as Google has been doing with Android.|
A61|RQ1|Call to Action|Adopt new technologies and approaches|It’s time for a new approach. This manifesto argues that we must commit to rewriting the world’s software in 'safe' languages that eliminate these issues up front.|
A61|RQ1|Call to Action|Creating a better future|We need to do better. We need to fix these vulnerabilities sooner rather than later.|
A61|RQ2|Gaps|Lack of practical guidelines for implementing principles|While this advice is sound| the reality is that we have billions of lines of legacy C and C++ code in daily use in every industry.|
A61|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Future static analyzers may be able to provide these guarantees for code written exclusively with modern C++ features.|
A61|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|Future code translators will improve on this| but we can’t just wait for that future to arrive.|
A61|RQ3|Relationship with SWeBok|Software architecture|Rust programs can offer a guarantee of memory safety without giving up the performance and low-level features that C programmers demand.|
A61|RQ3|Relationship with SWeBok|Software Security|Memory safety vulnerabilities no longer represent a majority of Android’s vulnerabilities.|
A61|RQ3|Relationship with SWeBok|Software Quality|Google reports that '[f]rom 2019 to 2022 [the number of memory safety vulnerabilities] has dropped from 76% down to 35% of Android’s total vulnerabilities.'|
A62|RQ1|Principles and Values|User focus|We are interested in enabling the same transformation for consumers and B2C transactions; that is| we are looking at the architecture and protocols that will underpin a new wave of personal digital services and applications enabled for individuals.|
A62|RQ1|Principles and Values|Innovation|Achieving these aims poses a number of human| innovation and technology challenges; in this paper we focus on the technology| where we face two important challenges: (i) how to federate these disparate data sources| and (ii) how to build infrastructure that enables me to control use of my data.|
A62|RQ1|Principles and Values|Privacy and Security|Importantly| making available the data to software running on the individual’s behalf avoids many legitimate privacy issues and concerns; by focusing on bringing the data together from disparate sources under the control of the user| we provide the opportunity for genuine informed consent.|
A62|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Today| individuals have unprecedented access to information over the Internet| whether public information from governments and businesses| or private information such as bank accounts| utility bills| and email.|
A62|RQ1|Objective and Motivation|Create or improve tools and platforms|We introduce the concept of Dataware as the logical federation of data sources containing 'my data' and discuss an SOA to deliver new and compelling services and applications able to reap the benefits of this value chain.|
A62|RQ1|Main Guidelines|Establish standards and guidelines|Of great benefit to the implementation of the dataware architecture would be the use of standards formats (e.g.| RDF)| and the definition of a set of common data models appropriate for different types of information.|
A62|RQ1|Impact and Applicability|Ensure security and privacy|For example| I may have different sign-up details with several retailers| on- and off-line| with my bank and credit card companies| with my health provider| and so on. I not only need to manage all these accounts for myself| I also need to be able to delegate permission to process my retailer accounts (but not financial or health accounts) to the 'OptimizeMyShopping' app.|
A62|RQ2|Gaps|Lack of practical guidelines for implementing principles|The decision whether to permit this delegation must be informed (I must understand what each app is doing with my data) and| preferably| permit automation (having specified a policy| I need not be interrupted every time access is granted or takes place).|
A62|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Finally| I must be told periodically| say once a month| what access to and computation across my data has taken place| by whom and what happened.|
A62|RQ3|Relationship with SWeBok|Software Security|Making available the data to software running on the individual’s behalf avoids many legitimate privacy issues and concerns.|
A63|RQ1|Principles and Values|Artificial intelligence|The goal here is to identify key directions for the future advanced research initiatives in Artificial Intelligence (AI) and beyond.|
A63|RQ1|Principles and Values|Ethics and Responsibility|The following areas are identified as having particular importance: (1) socially emotional| ethical| and moral AI.|
A63|RQ1|Principles and Values|Change|The key idea of the proposed concept is that future AI must open a new angle of view and new perspectives to humans| thereby enriching and transforming the society.|
A63|RQ1|Objective and Motivation|Solve existing problems and challenges|The expected impact on the society will be immense and crucial for its survival.|
A63|RQ1|Objective and Motivation|Raise awareness|While being created by humans| for humans| and fully compatible with humans at the social level| it will not be 'a human in silicon'| but rather an 'alien': intelligent| friendly| and welcome.|
A63|RQ1|Main Guidelines|Develop tools and techniques|Forms of implementation will range from virtual entities to wearable electronics and autonomous robots.|
A63|RQ1|Impact and Applicability|Promote collaboration and communication|Its principles will combine preprogrammed basic functions and its own natural ontogeny in a virtual social environment.|
A63|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|We formulate the problem: it can be described mathematically| technically| or otherwise| but a clear description of the problem is very important. Therefore| one should always try to find existing gaps| for example| in neural network models or in AI methods such as planning| etc.|
A63|RQ3|Relationship with SWeBok|Software architecture|The key idea of the proposed concept is that future AI must open a new angle of view and new perspectives to humans| thereby enriching and transforming the society.|
A64|RQ1|Principles and Values|User focus|Improving collaborative tools| then| boils down to this: We must be people-centric when designing and building applications| and we must work with other developers to make our tools more interoperable.|
A64|RQ1|Principles and Values|Collaboration|It will require constructive| passionate dialog| open minds| and much experimentation. It will require respect for other people's work and ideas.|
A64|RQ1|Principles and Values|Innovation|Our software tools—particularly in the collaboration space—are nowhere close to fulfilling their potential.|
A64|RQ1|Principles and Values|Openness|Open source software offers an excellent and underutilized avenue for disseminating innovations in user interface.|
A64|RQ1|Principles and Values|Ethics and Responsibility|Computers should help us become smarter and work together better. Remembering this will keep us on the right track.|
A64|RQ1|Principles and Values|Process improvement|Improvement is an ongoing process. Introducing new efficiencies will change the way we collaborate| which in turn will create new opportunities to improve our tools.|
A64|RQ1|Principles and Values|Change|The reality is that our needs are broad and varied. We use a number of different tools to do our work| and we always will.|
A64|RQ1|Objective and Motivation|Transforming current practices through innovations|We must be people-centric when designing and building applications| and we must work with other developers to make our tools more interoperable.|
A64|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|Instead of progressing| tool builders these days are moving in circles| treading water rather than swimming forward.|
A64|RQ1|Objective and Motivation|Solve existing problems and challenges|Consider a basic collaborative task: document-sharing. A number of applications claim to solve the document-sharing problem| and yet| the predominant method for sharing files is to email them back and forth.|
A64|RQ1|Main Guidelines|Adopt new technologies and approaches|Our software tools—particularly in the collaboration space—are nowhere close to fulfilling their potential.|
A64|RQ1|Main Guidelines|Develop tools and techniques|Creating a shared conceptual framework is a truly collaborative problem.|
A64|RQ1|Main Guidelines|Promote collaboration and communication|Working together will both strengthen this community and improve our tools.|
A64|RQ1|Impact and Applicability|Promote collaboration and communication|It will require constructive| passionate dialog| open minds| and much experimentation.|
A64|RQ1|Impact and Applicability|Adapt and evolve|Keep improving. Improvement is an ongoing process.|
A64|RQ1|Call to Action|Collaborate and share|We all belong to a community of like-minded tool developers| whether or not we are aware of it. Working together will both strengthen this community and improve our tools.|
A64|RQ2|Gaps|Lack of practical guidelines for implementing principles|The problem with usability is not a lack of good ideas; it's that most of these ideas never make it into real applications.|
A64|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|The overarching vision of the Semantic Web is detracting from these smaller successes| things that are working right now.|
A64|RQ2|Gaps|Lack of integration between different areas of software engineering|Developing a shared conceptual framework will help reveal those commonalities| which in turn will create opportunities for making our tools more interoperable| and hence more useful.|
A64|RQ3|Relationship with SWeBok|Software architecture|A shared conceptual framework for collaborative software would provide a common vocabulary for thinking about and discussing these tools| and would also reveal opportunities for standardization.|
A64|RQ3|Relationship with SWeBok|Software Design|If there were a standard language for expressing graph-like data models and standard APIs for manipulating these data models| the actual syntax of the data would be rendered mostly irrelevant.|
A64|RQ3|Relationship with SWeBok|Software Quality|Improving the interoperability of any of these components—even if only in small| imperfect ways at first—will improve our tools significantly.|
A65|RQ1|Principles and Values|User focus|Requirements need to capture and coordinate such increasingly diverging and dynamic needs of users and other stakeholders during the life-cycle of a product| a service or a platform.|
A65|RQ1|Principles and Values|Collaboration|The evolving designs need to reduce the distance between a problem and a solution through novel and dynamic thinking| acting| and innovating.|
A65|RQ1|Principles and Values|Innovation|This has also increased outsourcing and off-shoring| which requires disciplined evolution and management of explicit specifications as a basis for delegation.|
A65|RQ1|Principles and Values|Openness|Transparency| accountability| and maintenance of a core vision in such systems become even more important than in traditional applications.|
A65|RQ1|Principles and Values|Ethics and Responsibility|Legal aspects are also an increasingly important aspect of requirements engineering| not only in terms of protecting intellectual property (IP) but also in terms of protecting against being sued by customers due to imprecise contractual agreements.|
A65|RQ1|Principles and Values|Process improvement|The traditional idea of an enterprise that creates wealth by getting better at improving its existing products and services through for example business process re-engineering| improved supply chain| better cost control is now constantly challenged by approaches which combine research| creativity| and human-centered management practices.|
A65|RQ1|Principles and Values|Change|The field’s focus and scope has| as a result| shifted from engineering of individual systems and components towards the generation and adaptation of IT-supported ecosystems.|
A65|RQ1|Principles and Values|Artificial intelligence|The increased variety of requirements that emanate from diverse communities need to be negotiated| evaluated| and selected.|
A65|RQ1|Principles and Values|Sustainability|‘Green IT’ being just one of the latest buzzword that characterize this trend.|
A65|RQ1|Principles and Values|Architecture|Architectural requirements take a central role and drive business| product| and application requirements.|
A65|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|What are the critical issues that emerge during RE in this brave new world?|
A65|RQ1|Objective and Motivation|Transforming current practices through innovations|The research scope of RE has to become more interdisciplinary and it needs to also carefully evaluate some of its critical assumptions that underlie current research and practice.|
A65|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|We posit that answers cannot come just from doing more of the same—i.e.| traditional RE research focusing on notations and tools alone.|
A65|RQ1|Main Guidelines|Adopt new technologies and approaches|Intertwining between business| organizational| community context and requirements is as important as it is between requirements and software.|
A65|RQ1|Main Guidelines|Develop tools and techniques|New design tools need to be extended to monitor and analyze the dynamic design evolution| highlighting its trajectory and helping negotiate at the team and community level.|
A65|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|How do architectures influence the evolution of requirements and their identification?|
A65|RQ3|Relationship with SWeBok|Software architecture|Architectural dependences arise in the approaches of IKIWISI (I’ll Know It When I See It) and COTS (Commercial off-the-shelf) software deployment.|
A65|RQ3|Relationship with SWeBok|Software Engineering Process|The traditional idea of an enterprise that creates wealth by getting better at improving its existing products and services is now constantly challenged by approaches which combine research| creativity| and human-centered management practices.|
A65|RQ3|Relationship with SWeBok|Software Quality|What types of interdependencies influence and affect system change and create higher levels of design complexity?|
A65|RQ3|Relationship with SWeBok|Software Security|The implementation of requirements impacts not only on the technical systems| but also on their organizational and social settings and increases their interactive complexity.|
A66|RQ1|Principles and Values|User focus|Our manifesto places emphasis on the scholarly value of academic software.|
A66|RQ1|Principles and Values|Collaboration|The group was carefully picked to be broad in its range of disciplines (including Astronomy| Social Sciences| Biology| Chemistry| Computer Science| Physics| and Humanities)| roles (including computer science researchers| general and specialist research software engineers and systems administrators) and career stages.|
A66|RQ1|Principles and Values|Innovation|With the advent of artifact evaluation committees of conferences| journals that include source code and running systems as part of the published artifacts| as well as the increasing push to reproducibility| we foresee that software will only increase in importance as part of the academic process.|
A66|RQ1|Principles and Values|Openness|I will develop software as open source right from the start whenever possible.|
A66|RQ1|Principles and Values|Ethics and Responsibility|It is more in the style of a personal responsibility pledge like those on open access and open peer review.|
A66|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Why do we need another Manifesto? First| our manifesto is to be less about what others should do| and more about what we| as individuals| should do.|
A66|RQ1|Objective and Motivation|Transforming current practices through innovations|Twenty pledges cover the recognition of academic software| the academic software process and the intellectual content of academic software.|
A66|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|It is easy for us to declare 'the community should do X'| 'funding panels should do Y' and 'promotion committees should do Z'| while conveniently forgetting that we are the community| we are the panelists| we are the committee members.|
A66|RQ1|Main Guidelines|Adopt new technologies and approaches|I will match software engineering practices I recommend to the needs and resources of projects.|
A66|RQ1|Impact and Applicability|Develop tools and techniques|I will document my academic software for users with instructions and examples.|
A66|RQ1|Impact and Applicability|Ensure security and privacy|I will examine the source code of academic software contributions and encourage others to do so as well.|
A66|RQ1|Call to Action|Share knowledge|I will publish the intellectual contributions of my research software.|
A66|RQ2|Gaps|Lack of practical guidelines for implementing principles|We recognize that 20 pledges is roughly twice as many as desirable| and that the pledges need to be succinct and easy to understand and adopt.|
A66|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|We aim to develop the full manifesto by December 2016 and publish it as a Dagstuhl Manifesto. We intend that community groups promote its contents among researchers and research software engineers| and we use it to influence decision makers to enable our respective communities to execute these pledges with moral and financial support.|
A66|RQ3|Relationship with SWeBok|Software Engineering Professional Practice|I will properly cite software used to produce my research results.|
A67|RQ1|Principles and Values|User focus|Prominent tech giants (Facebook| Microsoft| Google| Apple| and Amazon) are using massive Cloud Datacenters (CDCs) to provide the effective user services to process this data in a proficient and trustworthy manner.|
A67|RQ1|Principles and Values|Collaboration|Fog devices aid cloud to process the small user requests without sending it to cloud| while edge devices provide an innovative service to execute user request at edge device.|
A67|RQ1|Principles and Values|Innovation|The research in both fog and edge computing is growing day by day since they emerged as groundbreaking computing paradigms.|
A67|RQ1|Principles and Values|Openness|There is a need to assess the existing research related to emerging paradigms to find out the possible future directions and research opportunities existing in this field.|
A67|RQ1|Principles and Values|Ethics and Responsibility|Security and privacy are two important challenges in computing system while delivering services to end users.|
A67|RQ1|Principles and Values|Process improvement|Further| effective use of AI techniques can enhance the energy efficiency and reliability of the CDC.|
A67|RQ1|Principles and Values|Change|Therefore| there is a need to assess the existing research related to emerging paradigms to find out the possible future directions and research opportunities existing in this field.|
A67|RQ1|Principles and Values|Artificial intelligence|Effective use of AI techniques can enhance the energy efficiency and reliability of the CDC.|
A67|RQ1|Principles and Values|Privacy and Security|Privacy-aware fog and edge computing system allow authentic users to access their data using various IoT applications.|
A67|RQ1|Principles and Values|Sustainability|Further| the utilization of large amount of CDC and utilization of massive chunks of energy/power is making an impact on the environment| which leads to climate change by producing carbon footprints.|
A67|RQ1|Principles and Values|Architecture|Both fog and edge computing optimizes energy| execution cost| and time while maintaining the quality of service at required level.|
A67|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|To solve this problem| the two advanced paradigms| fog and edge computing| are introduced to process and manage data quickly.|
A67|RQ1|Objective and Motivation|Transforming current practices through innovations|Further| a mobile application is developed to manage the enormous volume of data and provide the required information to the farmers at their edge device to enable smart farming.|
A67|RQ1|Objective and Motivation|Emphasis on collaboration and interdisciplinarity|Fog and edge computing helps critical IoT applications to maintain the SLA during the processing of user requests in an efficient manner before their deadline.|
A67|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|There is a need of proactive privacy and security-aware systems to protect user data and handle security attacks such as Denial of Service (DoS)| Distributed-DoS (DDoS)| Remote to Local (R2L)| User to Root (U2R) and probing.|
A67|RQ1|Main Guidelines|Adopt new technologies and approaches|The research in both fog and edge computing is growing day by day since they emerged as groundbreaking computing paradigms.|
A67|RQ1|Main Guidelines|Develop tools and techniques|Fog and edge computing paradigms can be used for proficient big data analytics to improve data processing.|
A67|RQ1|Main Guidelines|Establish standards and guidelines|QoS is a significant measurement parameter| which is used to measure the level of cloud| fog| and edge service.|
A67|RQ1|Impact and Applicability|Develop tools and techniques|Resource provisioning is defined as the filtering of best matched resources based on the QoS requirements of the requests.|
A67|RQ1|Impact and Applicability|Ensure security and privacy|There is a need of proactive privacy and security-aware systems to protect user data and handle security attacks.|
A67|RQ2|Gaps|Lack of practical guidelines for implementing principles|How to provision fog and edge resources effectively for different IoT applications before actual scheduling of resources?|
A67|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|There are a few review and survey articles in the literature| but the research has purposefully grown in modern fog and edge computing.|
A67|RQ2|Gaps|Little discussion of the social and political implications of technology|There is a need to assess the existing research related to emerging paradigms to find out the possible future directions and research opportunities existing in this field.|
A67|RQ2|Gaps|Lack of integration between different areas of software engineering|Fog and edge computing helps critical IoT applications to maintain the SLA during the processing of user requests in an efficient manner before their deadline.|
A67|RQ3|Relationship with SWeBok|Software architecture|Both fog and edge computing optimizes energy| execution cost| and time while maintaining the quality of service at required level.|
A67|RQ3|Relationship with SWeBok|Software Security|Security and privacy are two important challenges in computing system while delivering services to end users.|
A67|RQ3|Relationship with SWeBok|Software Engineering Models and Methods|Resource scheduler manages the provisioned resources using different scheduling policies based on optimization algorithms| machine learning| or AI techniques to optimize the system performance.|
A68|RQ1|Principles and Values|User focus|Thus| managing their changes is an important challenge for system maintainability.|
A68|RQ1|Principles and Values|Collaboration|We present our vision to develop semantic diff operators for model comparisons.|
A68|RQ1|Principles and Values|Innovation|We demonstrate our vision using two concrete diff operators| for class diagrams and for activity diagrams.|
A68|RQ1|Principles and Values|Openness|Finally| our vision of semantic diffing does not come to replace existing syntactic diffing approaches. Rather| it is aimed at augmenting and complementing existing approaches.|
A68|RQ1|Principles and Values|Ethics and Responsibility|Such diff witnesses serve as concrete proofs for the real change between one version and another and its effect on the meaning of the models involved.|
A68|RQ1|Principles and Values|Process improvement|Effective change management| a major challenge in software engineering in general and in model-driven engineering in particular| has attracted much research efforts in recent years.|
A68|RQ1|Principles and Values|Change|Models continuously evolve during the design| development| and maintenance phases of a system’s lifecycle.|
A68|RQ1|Principles and Values|Architecture|We have used addiff and cddiff to implement a COMPARE command| used to compare two selected models and output one of four answers: ?| <| >| <>.|
A68|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|This paper is a manifesto for research on semantic model differencing.|
A68|RQ1|Objective and Motivation|Transforming current practices through innovations|We present our vision to develop semantic diff operators for model comparisons.|
A68|RQ1|Objective and Motivation|Create or improve tools and platforms|We have already implemented prototype versions of cddiff and addiff.|
A68|RQ1|Main Guidelines|Develop tools and techniques|We have integrated our implementations into Eclipse plug-ins.|
A68|RQ1|Main Guidelines|Address ethical and social issues|Diff witnesses are not conflicts that need to be reconciled. Rather| they are proofs of features that were added or bugs that have been fixed from one version to another along the history of the development process.|
A68|RQ1|Impact and Applicability|Adapt and evolve|Our implementation of cddiff can be used to compute diff witnesses| if any| or to show that no diff witnesses exist.|
A68|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Thus| for each modeling language| a language specific diff operator needs to be defined and a new algorithm needs to be developed for its computation.|
A68|RQ3|Relationship with SWeBok|Software Design|We present our vision to develop semantic diff operators for model comparisons.|
A69|RQ1|Principles and Values|User focus|The goal of this task force is to promote the research| development| education| implementation| evolution| and understanding of process mining.|
A69|RQ1|Principles and Values|Collaboration|This manifesto is written by members and supporters of the IEEE Task Force on Process Mining.|
A69|RQ1|Principles and Values|Innovation|Process mining techniques provide new means to discover| monitor| and improve processes in a variety of application domains.|
A69|RQ1|Principles and Values|Openness|This manifesto is created by the IEEE Task Force on Process Mining and aims to promote the topic of process mining.|
A69|RQ1|Principles and Values|Ethics and Responsibility|Process mining techniques offer a means to more rigorously check compliance and ascertain the validity and reliability of information about an organization’s core processes.|
A69|RQ1|Principles and Values|Process improvement|Process mining provides an important bridge between data mining and business process modeling and analysis.|
A69|RQ1|Principles and Values|Change|Process mining is a relatively young research discipline that sits between computational intelligence and data mining on the one hand| and process modeling and analysis on the other hand.|
A69|RQ1|Principles and Values|Artificial intelligence|Process mining includes (automated) process discovery| conformance checking| social network/organizational mining| automated construction of simulation models| model extension| model repair| case prediction| and history-based recommendations.|
A69|RQ1|Principles and Values|Privacy and Security|The event data should be safe in the sense that privacy and security concerns are addressed when recording the events.|
A69|RQ1|Principles and Values|Sustainability|Process mining should be viewed as a continuous process providing actionable information according to various time scales (minutes| hours| days| weeks| and months).|
A69|RQ1|Principles and Values|Architecture|Process mining provides an important bridge between data mining and business process modeling and analysis.|
A69|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Over the last decade| event data have become readily available and process mining techniques have matured.|
A69|RQ1|Objective and Motivation|Transforming current practices through innovations|Process mining can be seen as the 'missing link' between data mining and traditional model-driven BPM.|
A69|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|There are some common misconceptions related to process mining. Some vendors| analysts| and researchers limit the scope of process mining to a special data mining technique for process discovery that can only be used for offline analysis.|
A69|RQ1|Objective and Motivation|Improve or propose new technologies| approaches and methods|Process mining includes automated process discovery (i.e.| extracting process models from an event log)| conformance checking| social network/organizational mining| automated construction of simulation models| model extension| model repair| case prediction| and history-based recommendations.|
A69|RQ1|Main Guidelines|Establish standards and guidelines|In 2010| the task force also standardized XES (www.xes-standard.org)| a standard logging format that is extensible and supported by the OpenXES library.|
A69|RQ1|Impact and Applicability|Develop tools and techniques|More and more software vendors are adding process mining functionality to their tools.|
A69|RQ1|Call to Action|Creating a better future|Process mining is an emerging discipline. This manifesto catalogs some guiding principles and challenges for users of process mining techniques as well as researchers and developers that are interested in advancing the state-of-the-art.|
A69|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Few processes are in steady state and understanding concept drift is of prime importance for the management of processes. Therefore| additional research and tool support are needed to adequately analyze concept drift.|
A69|RQ2|Gaps|Little discussion of the social and political implications of technology|Process mining techniques offer a means to more rigorously check compliance and ascertain the validity and reliability of information about an organization’s core processes.|
A69|RQ2|Gaps|Lack of integration between different areas of software engineering|One can extract data with the goal to describe the life-cycle of individual orders. However| it is also possible to extract data with the goal to discover the life-cycle of individual order lines or the life-cycle of individual deliveries.|
A69|RQ3|Relationship with SWeBok|Software architecture|Process mining provides an important bridge between data mining and business process modeling and analysis.|
A69|RQ3|Relationship with SWeBok|Software Engineering Management|Process mining can help to provide meaningful 'maps' that are directly connected to event data.|
A69|RQ3|Relationship with SWeBok|Software Quality|Balancing fitness| simplicity| precision| and generalization is challenging. This is the reason that most of the more powerful process discovery techniques provide various parameters.|
A69|RQ3|Relationship with SWeBok|Software Security|Event logs should be treated as first-class citizens in the information systems supporting the processes to be analyzed.|
A70|RQ1|Principles and Values|User focus|It is expected that this draft manifest will give expression to state-of-the-art knowledge on software process education| training and professionalism.|
A70|RQ1|Principles and Values|Collaboration|Based on the presentations| 32 workshop participants brainstormed core values and principles specifically addressing the needs of software process education| training and professionalism.|
A70|RQ1|Principles and Values|Innovation|Innovative: Focused on constant improvement and being at the forefront of change and innovation in education and training.|
A70|RQ1|Principles and Values|Openness|Manifestos are quite common in the technological arena. Maybe the most popular of them is the Manifesto for Agile Software Development.|
A70|RQ1|Principles and Values|Process improvement|Software process improvement is considered one of the most important fields in the software engineering discipline.|
A70|RQ1|Principles and Values|Change|By influencing the syllabus for these courses| and other degree courses| to include quality and process improvement| the future professionals could act as ambassadors for process improvement for the future.|
A70|RQ1|Principles and Values|Architecture|Software Process is one of the 10 knowledge areas of the curriculum| covering various process models that support individual and team experiences with one or more software development processes.|
A70|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|At the workshop 14 'experts' from education and industry presented and discussed their 'wisdom and experience' of the challenges faced for software process education| training and professionalism.|
A70|RQ1|Objective and Motivation|Create or improve tools and platforms|Develop a SPI Book of Knowledge.|
A70|RQ1|Main Guidelines|Establish standards and guidelines|The overall structure of the manifesto is based on previous initiatives on the topic| and more precisely| the SPI Manifesto.|
A70|RQ1|Main Guidelines|Share knowledge|Sharing knowledge and experience across educational and industrial settings is fundamental for improving software process education and training.|
A70|RQ1|Impact and Applicability|Focus on education and training|Opportunities could be provided for lecturers and teachers to gain real-life experience by shadowing process improvement professionals.|
A70|RQ1|Call to Action|Creating a better future|Ultimately| it is the hope of the champions behind the development of the Manifesto for Software Process Education| Training and Professionalism that it can address some of these needs.|
A70|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|There is a lack of relevant knowledge and experience of teachers and lecturers coupled with the problems of pressures by other topics on academic courses.|
A70|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|An associated aspect of software process education and professionalism is related to the teaching and usages of international standards in educational settings.|
A70|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|It has been well established that there are business benefits to the adoption of SPI practices in an industrial setting| although some practice issues remain in some areas such as SME sector.|
A70|RQ3|Relationship with SWeBok|Software architecture|Software Process is one of the 10 knowledge areas of the curriculum| covering various process models that support individual and team experiences with one or more software development processes.|
A70|RQ3|Relationship with SWeBok|Software Quality|Dedicated units on quality and process improvement are not usual| which can limit the understanding and adoption of best practices.|
A70|RQ3|Relationship with SWeBok|Software Engineering Management|The development of a Manifesto for Software Process Education| Training and Professionalism has the ability to assist with addressing many of the identified issues and gaps facing both educators and the software profession today.|
A71|RQ1|Principles and Values|Collaboration|We propose that the modeling community adopt three simple guidelines that would ensure that computational models would be accessible to the broad range of researchers in cognitive science.|
A71|RQ1|Principles and Values|Openness|Everyone still programs in his or her own favorite programming language| source code is rarely made available| accessibility of models to non-programming researchers is essentially non-existent.|
A71|RQ1|Principles and Values|Ethics and Responsibility|Journal editors must also play their part in connecting modelers to the wider audience of cognitive scientists| in particular| non-programming cognitive scientists.|
A71|RQ1|Principles and Values|Process improvement|We believe that the simple suggestions of this short manifesto will| ultimately| not only lead to better models of cognition but will also go a long way to improving the visibility of computational models within cognitive science.|
A71|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|Unfortunately| the computer models of cognition being developed today have not kept up with the enormous changes that have taken place in computer technology and| especially| in human-computer interfaces.|
A71|RQ1|Objective and Motivation|Solve existing problems and challenges|Computational modeling is badly in need of a makeover to bring it up to date with respect to the tremendous changes in computing techniques and| especially| human-computer interfaces that have taken place in the last quarter of a century.|
A71|RQ1|Main Guidelines|Adopt new technologies and approaches|Computational modeling has long been one of the traditional pillars of cognitive science. Unfortunately| the computer models of cognition being developed today have not kept up with the enormous changes that have taken place in computer technology.|
A71|RQ1|Main Guidelines|Develop tools and techniques|Provide good documentation| but most of all| make the user interface self-explanatory.|
A71|RQ1|Impact and Applicability|Promote collaboration and communication|Only a two-pronged effort will actually lead to the goal of real accessibility to computational models.|
A71|RQ1|Call to Action|Creating a better future|We believe that the simple suggestions of this short manifesto will| ultimately| not only lead to better models of cognition but will also go a long way to improving the visibility of computational models within cognitive science.|
A71|RQ2|Gaps|Lack of practical guidelines for implementing principles|Even if modelers are willing to make their code publicly available| one has to be very familiar with the programming language in which it was written to make heads or tails of it.|
A71|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|The present manifesto calls on computational modelers to make better use of current computer technology to allow members of the cognitive science community to have real access to their models.|
A71|RQ2|Gaps|Lack of integration between different areas of software engineering|Ultimately| computational modeling of cognition will follow this path| too| which will mean developing reusable computational models that are capable of real integration.|
A71|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|The ready availability and usability of models ensures| at the very least| the reproducibility by third parties of published results| a cornerstone of all scientific investigation.|
A71|RQ3|Relationship with SWeBok|Software architecture|Ultimately| computational modeling of cognition will follow this path| too| which will mean developing reusable computational models that are capable of real integration.|
A72|RQ1|Principles and Values|User focus|Even in HCI and design| current practices are overwhelmingly tied to designing technology in order to 'solve' anthropocentric 'problems' with user values being declared as productivity| efficiency| convenience and increased comfort.|
A72|RQ1|Principles and Values|Collaboration|We call for a means-oriented design practice that values engagement with social| cultural and ecological relations and imaginaries over just focusing on the end products of technologies in HCI and design.|
A72|RQ1|Principles and Values|Innovation|We propose they should be shaped by more diverse contexts| ideologies and relationality that can encompass not only aspirations for technological advancement but also interweave broader knowledges and interactions in more-than-human ecologies.|
A72|RQ1|Principles and Values|Openness|Understanding current socio-technical imaginaries as collectively held visions or narratives of desirable futures that emerge from the interplay between societal values| cultural beliefs and technological possibilities.|
A72|RQ1|Principles and Values|Ethics and Responsibility|We need to fully dissect the notions that integrate the currently hegemonic| capitalist visualisation of the 'future' and SPIN NEW THREADS that can ethically and collaboratively include underrepresented epistemologies| knowledges| and worldviews.|
A72|RQ1|Principles and Values|Artificial intelligence|AI is a materialized system that has become a manifestation of how particular datasets-in-power influence and create deep profit-oriented social and political infrastructures by using a specific kind of data and algorithms.|
A72|RQ1|Principles and Values|Sustainability|By focusing on data that pertains to other-than-human entities and nature| we believe that design can play a crucial role.|
A72|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Current data practices and AI narratives tend to construct and imagine 'the' world as a singular entity with linear history created from a dominant Western industrial narrative.|
A72|RQ1|Objective and Motivation|Transforming current practices through innovations|We call for a commitment to UNWEAVING the utopian promises of AI imaginaries from their claims of neutrality| objectivity and unity.|
A72|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|We propose they should be shaped by more diverse contexts| ideologies and relationality that can encompass not only aspirations for technological advancement but also interweave broader knowledges and interactions in more-than-human ecologies.|
A72|RQ1|Main Guidelines|Address ethical and social issues|These must not be disconnected from their context| but become embedded in their communities| understanding that plural approaches to repurposement and re-appropriation are needed to better understand complex challenges.|
A72|RQ1|Impact and Applicability|Consider context and application|By understanding this and other notions of data and representing it as embodying and connecting with its wider surroundings| humans are placed as inhabitant actors in a greater| more intricate weaving of natural systems and other-than-human species.|
A72|RQ1|Call to Action|Adopt practices and principles|As designers| we need to continually design| redesign| and un-design our concepts| practices| and imaginaries from more ethical| cultural| and ecological perspectives.|
A72|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Focusing on data that pertains to other-than-human entities and nature| we believe that design can play a crucial role.|
A72|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|Unthreading the current dominant notions around data with its practices| frameworks| and dualistic nature and weaving them again using more diverse conceptions could help re-shape complex social and algorithmic structures.|
A72|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|We question the ontology of data| asking| 'What data should we seek to pay attention to the knowledge and participation of communities| other-than-humans| and nature?'|
A72|RQ3|Relationship with SWeBok|Software architecture|AI models often show distorted| stereotypical versions based on a single-lensed reality| flattening and erasing different experiences| representations| definitions| and imaginaries.|
A72|RQ3|Relationship with SWeBok|Software Quality|We should focus on fundamental questions about the ontology and epistemology of data that is entrenched in human-oriented and capitalist societal structures| power dynamics| and imaginaries excluding other-than-human knowledge.|
A72|RQ3|Relationship with SWeBok|Software Security|These must not be disconnected from their context| but become embedded in their communities| understanding that plural approaches to repurposement and re-appropriation are needed to better understand complex challenges.|
A73|RQ1|Principles and Values|User focus|The manifesto’s call – to rethink and reimagine digital social touch through a deeper engagement with the social and sensory aspects of social touch| is motivated by concerns that social touch is in crisis.|
A73|RQ1|Principles and Values|Collaboration|The manifesto was initiated in autumn 2020 during the flux of the Covid-19 pandemic| a point of emergence from (and shortly a return to) global lockdown. It is an outcome of a series of interdisciplinary collaborative workshops| initiated at Eurohaptics 2020| on the social and sensory aspects and challenges of designing digitally mediated social touch.|
A73|RQ1|Principles and Values|Innovation|The manifesto offers routes to navigate the technological realities and promises for social touch amidst conflicting social concerns and uncertain futures.|
A73|RQ1|Principles and Values|Openness|The manifesto speaks back to the technological landscape and asks| is digitally mediated social touch itself in a moment of crisis?|
A73|RQ1|Principles and Values|Ethics and Responsibility|The need to develop acceptable haptic encodings that are comprehensible and acceptable to users across different genders and cultures| and which foster a sense of user agency in giving and receiving digital social touch.|
A73|RQ1|Principles and Values|Process improvement|Challenges were raised related to the need for digital social touch interfaces to support end-user customization; the development of software frameworks for prototyping and implementing interfaces to support creatively ‘playing with’ digital social touch concepts and foster design.|
A73|RQ1|Principles and Values|Change|Social distancing practices resulting from responses to the Covid-19 pandemic newly underscored the need for digital social touch and prompted discussion of the political character of touch and physical proximity.|
A73|RQ1|Principles and Values|Artificial intelligence|Research closely related to work on mediated social touch looks at how touch could also serve as a modality for virtual agents and social robots to communicate with humans.|
A73|RQ1|Principles and Values|Privacy and Security|Touch data| perhaps even more than other types of data given the connotations with intimacy| needed to be protected.|
A73|RQ1|Objective and Motivation|Transforming current practices through innovations|Emergent technologies are being developed to enrich digital social touch interactions and embed other input modalities such as force| shear| twist| and squeeze.|
A73|RQ1|Objective and Motivation|Create or improve tools and platforms|There is a need for more interaction design tools for digital social touch| including a need for a common language of touch and developing metaphors for design.|
A73|RQ1|Main Guidelines|Address ethical and social issues|The design of touch privacy spoke to issues of consent| control| and ultimately human agency.|
A73|RQ1|Impact and Applicability|Establish standards and guidelines|Efforts are underway within the industry to address these challenges| such as Apple’s haptic design guidelines and Google’s Android haptic design guidelines.|
A73|RQ1|Call to Action|Collaborate and share|The manifesto is thus developed through and rooted in the interdisciplinary expertise of social touch designers/developers/researchers.|
A73|RQ2|Gaps|Lack of practical guidelines for implementing principles|Challenges were raised related to a need for digital social touch interfaces to support end-user customization.|
A73|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|There is no current research into the exact effects of digital touch technologies on the reduction of Covid-19 induced touch hunger.|
A73|RQ2|Gaps|Little discussion of the social and political implications of technology|Social distancing practices resulting from responses to the Covid-19 pandemic newly underscored the need for digital social touch and prompted discussion of the political character of touch and physical proximity.|
A73|RQ3|Relationship with SWeBok|Software architecture|The manifesto offers routes to navigate the technological realities and promises for social touch amidst conflicting social concerns and uncertain futures.|
A73|RQ3|Relationship with SWeBok|Software Security|Touch data| perhaps even more than other types of data given the connotations with intimacy| needed to be protected.|
A73|RQ3|Relationship with SWeBok|Software Quality|Efforts are underway within the industry to address these challenges| such as Apple’s haptic design guidelines and Google’s Android haptic design guidelines.|
A74|RQ1|Principles and Values|User focus|The needs of students are flexible and need to be guaranteed to be met and functional without the need to enforce strict rules or syllabus.|
A74|RQ1|Principles and Values|Collaboration|Customer Collaboration much needed in communication to be more transparent between all parties| including listening effectively and providing positive feedback.|
A74|RQ1|Principles and Values|Change|Responding to Change It is also important because every existing learning system does not have to always follow the current plan| in the era of the Industrial Revolution 4.0| all fields including education must be more flexible and be able to follow the flow of its development to lead to a better and more creative direction.|
A74|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Blockchain transactions| apart from their complex ecosystems| show similarity in info logical ideas and essence that is important to the world of education as it uses today.|
A74|RQ1|Main Guidelines|Adopt new technologies and approaches|The necessary foundation of understanding blockchain technology was launched as The Blockchain Manifesto| which has been further explored by the study of literature and can be trusted to help in the problems of people who are still laying and do not understand blockchain technology.|
A74|RQ1|Impact and Applicability|Develop tools and techniques|The blockchain for education system and the manifesto blockchain methodology contribute to closing the data science skills gap by linking education data science to industry.|
A75|RQ1|Principles and Values|User focus|Researchers and professionals working in engineering and related sectors need access to data to help drive innovation required to address a variety of social| economic| and environmental challenges.|
A75|RQ1|Principles and Values|Collaboration|Driving behavior change requires organizations that are collecting and stewarding data need to have the capability| motivation| and opportunity to share and open up data.|
A75|RQ1|Principles and Values|Innovation|Data is helping to increase productivity| support the application of new technologies| enabling innovative research| and the development of new products and services.|
A75|RQ1|Principles and Values|Openness|The open data| open government| and open research communities are examples of movements whose goals are to increase access to data by changes to norms| practices| and approaches.|
A75|RQ1|Principles and Values|Ethics and Responsibility|Stewardship involves the responsible management of a resource. When applied to data within an organization| stewardship involves a focus on managing data as an asset| to maximize its value while mitigating potential harms.|
A75|RQ1|Principles and Values|Process improvement|Changing these rules and developing a culture of trusted sharing of data requires a range of stakeholders to take co-ordinated action.|
A75|RQ1|Principles and Values|Change|Recognizing the need for co-ordinated action| we presented a manifesto for sharing engineering data.|
A75|RQ1|Principles and Values|Artificial intelligence|McKinsey (2018) projected that data-enabled applications of artificial intelligence (AI) will generate $13 trillion in new global economic activity by 2030.|
A75|RQ1|Principles and Values|Privacy and Security|Making data as open as possible| while protecting people’s privacy| commercial confidentiality| and national security.|
A75|RQ1|Principles and Values|Sustainability|To increase the social| economic| and environmental value from data| will require the activities of a range of stakeholders across government| businesses| and academia.|
A75|RQ1|Principles and Values|Architecture|Data infrastructure consists of data assets| technologies| standards| and guidance that inform their collection and use| and the organizations and communities that manage| use| and benefit from it.|
A75|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Recognizing the need for co-ordinated action| we presented a manifesto for sharing engineering data.|
A75|RQ1|Objective and Motivation|Transforming current practices through innovations|The open data movement has progressed from a standpoint of 'open by default' to one of 'publish with purpose'.|
A75|RQ1|Objective and Motivation|Emphasis on collaboration and interdisciplinarity|The sharing and use of data are governed by a variety of nested rules| including legislation| sector programs| and professional norms.|
A75|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|The report argues that the specific economic characteristics of data| and the data economy| mean that market forces alone will not be able to realize its full potential.|
A75|RQ1|Objective and Motivation|Solve existing problems and challenges|Data sharing has been driven by the needs of addressing a specific social| environmental| or economic challenge.|
A75|RQ1|Main Guidelines|Establish standards and guidelines|Assessment of the state of national spatial data infrastructure is now routinely used to review the marketplace for geospatial data and services.|
A75|RQ1|Impact and Applicability|Develop tools and techniques|The Royal Academy of Engineering data-sharing project illustrated a variety of benefits of increasing access to data| explored some practical challenges and provided guidance on approaching trustworthy sharing of data.|
A75|RQ1|Call to Action|Collaborate and share|Sharing of data| code| models| guidance| and insights is all necessary to maximizing value of data for society.|
A75|RQ2|Gaps|Lack of practical guidelines for implementing principles|While there have been efforts to document and understand what good stewardship and management of engineering data looks like| these approaches are not widely adopted| especially outside of academia.|
A75|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Lack of clear rights and responsibilities around the stewardship of data and digital resources leads to poor stewardship.|
A75|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|A stronger focus on shared data infrastructure across the engineering and related sectors will help to ensure access to data| drive standards adoption| maintain quality| and ensure security.|
A75|RQ3|Relationship with SWeBok|Software architecture|Data infrastructure consists of data assets| technologies| standards| and guidance that inform their collection and use| and the organizations and communities that manage| use| and benefit from it.|
A75|RQ3|Relationship with SWeBok|Software Quality|Ensuring that data is Findable| Accessible| Interoperable| and Reusable (FAIR) are important activities.|
A75|RQ3|Relationship with SWeBok|Software Security|Ensuring legal compliance| maintaining quality| managing access to data| and ensuring security are fundamental aspects of data stewardship.|
A76|RQ1|Principles and Values|User focus|Not only customer collaboration| but also productive partnerships|
A76|RQ1|Principles and Values|Collaboration|Not only individuals and interactions| but also a community of professionals|
A76|RQ1|Principles and Values|Change|Not only responding to change| but also steadily adding value|
A76|RQ1|Principles and Values|Architecture|Not only well-crafted software| but also well-crafted infrastructure|
A76|RQ1|Objective and Motivation|Transforming current practices through innovations|We are raising the bar of professional system and infrastructure development even further| by extending Software Craftsmanship movement|
A76|RQ1|Objective and Motivation|Changing culture and practices|Through this work we have come to value...|
A76|RQ1|Objective and Motivation|Create or improve tools and platforms|by extending Software Craftsmanship movement| to create more value in the DevOps ecosystem|
A76|RQ1|Main Guidelines|Establish standards and guidelines|We are raising the bar of professional system and infrastructure development even further|
A76|RQ1|Main Guidelines|Promote collaboration and communication|Not only individuals and interactions| but also a community of professionals|
A76|RQ1|Impact and Applicability|Develop tools and techniques|to create more value in the DevOps ecosystem|
A76|RQ1|Impact and Applicability|Promote collaboration and communication|Not only customer collaboration| but also productive partnerships|
A76|RQ1|Impact and Applicability|Adapt and evolve|Not only responding to change| but also steadily adding value|
A76|RQ1|Call to Action|Adopt practices and principles|Through this work we have come to value...|
A76|RQ1|Call to Action|Creating a better future|We are raising the bar of professional system and infrastructure development even further|
A76|RQ2|Gaps|Lack of integration between different areas of software engineering|by extending Software Craftsmanship movement| to create more value in the DevOps ecosystem|
A76|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|we have found the extension of the first item indispensible|
A76|RQ3|Relationship with SWeBok|Software architecture|Not only well-crafted software| but also well-crafted infrastructure|
A76|RQ3|Relationship with SWeBok|Software Engineering Process|We are raising the bar of professional system and infrastructure development even further|
A76|RQ3|Relationship with SWeBok|Software Quality|by extending Software Craftsmanship movement| to create more value in the DevOps ecosystem|
A77|RQ1|Principles and Values|User focus|GNU| which stands for Gnu’s Not Unix| is the name for the complete Unix-compatible software system which I am writing so that I can give it away free to everyone who can use it.|
A77|RQ1|Principles and Values|Collaboration|Several other volunteers are helping me. Contributions of time| money| programs and equipment are greatly needed.|
A77|RQ1|Principles and Values|Innovation|We will make all improvements that are convenient| based on our experience with other operating systems.|
A77|RQ1|Principles and Values|Openness|GNU is not in the public domain. Everyone will be permitted to modify and redistribute GNU| but no distributor will be allowed to restrict its further redistribution.|
A77|RQ1|Principles and Values|Ethics and Responsibility|I consider that the golden rule requires that if I like a program I must share it with other people who like it.|
A77|RQ1|Principles and Values|Change|By working on and using GNU rather than proprietary programs| we can be hospitable to everyone and obey the law.|
A77|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|The essential features of Unix seem to be good ones| and I think I can fill in what Unix lacks without spoiling them.|
A77|RQ1|Objective and Motivation|Transforming current practices through innovations|The essential features of Unix seem to be good ones| and I think I can fill in what Unix lacks without spoiling them.|
A77|RQ1|Main Guidelines|Address ethical and social issues|The fundamental act of friendship among programmers is the sharing of programs; marketing arrangements now typically used essentially forbid programmers to treat others as friends.|
A77|RQ1|Main Guidelines|Promote collaboration and communication|GNU serves as an example to inspire and a banner to rally others to join us in sharing.|
A77|RQ1|Impact and Applicability|Ensure security and privacy|Complete system sources will be available to everyone. As a result| a user who needs changes in the system will always be free to make them himself.|
A77|RQ1|Impact and Applicability|Share knowledge|Harvard’s computer lab used to have the policy that no program could be installed on the system if its sources were not on public display| and upheld it by actually refusing to install certain programs.|
A77|RQ1|Call to Action|Creating a better future|Copying all or parts of a program is as natural to a programmer as breathing| and as productive. It ought to be as free.|
A77|RQ2|Gaps|Lack of practical guidelines for implementing principles|We must distinguish between support in the form of real programming work and mere handholding.|
A77|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|If a small fraction of all the users order copies from the FSF| that is sufficient to keep the FSF afloat.|
A77|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|A complete Unix system contains hundreds of utility programs| each of which is documented separately.|
A77|RQ3|Relationship with SWeBok|Software architecture|We will try to support UUCP| MIT Chaosnet| and Internet protocols for communication.|
A77|RQ3|Relationship with SWeBok|Software Quality|This means that much wasteful duplication of system programming effort will be avoided. This effort can go instead into advancing the state of the art.|
A77|RQ3|Relationship with SWeBok|Software Engineering Economics|Restricting copying is not the only basis for business in software. It is the most common basis because it brings in the most money.|
A78|RQ1|Principles and Values|User focus|We have engaged learners in developing computational models to improve life in their community.|
A78|RQ1|Principles and Values|Collaboration|A collaborative editing process seems to help them develop a critical stance towards traditional media.|
A78|RQ1|Principles and Values|Innovation|We would like to see the trend in these attitude graphs reversed. We accept as an ultimate challenge for ‘Affective Learning’ the realising of ideas such as this.|
A78|RQ1|Principles and Values|Openness|We have also found that these activities help root knowledge in these domains| make connections to tacit knowledge in the learner| and facilitate branching into new areas within these domains.|
A78|RQ1|Principles and Values|Ethics and Responsibility|The study of affect and learning should include looking at how such cultural affect comes about and how it changes.|
A78|RQ1|Principles and Values|Process improvement|Digital technologies offer new opportunities for discovering roots| adapting to preferences| and enabling creative and idiosyncratic connections to learning and knowing.|
A78|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|It is time to redress the imbalance by developing theories and technologies in which affect and cognition are appropriately integrated with one another.|
A78|RQ1|Objective and Motivation|Transforming current practices through innovations|We have engaged learners in developing computational models to improve life in their community.|
A78|RQ1|Objective and Motivation|Create or improve tools and platforms|We need to brand math| and all learning| so that each morning| when youth stand in front of the mirror deciding who they will be that day| they always decide to wear learning.|
A78|RQ2|Gaps|Lack of integration between different areas of software engineering|There is a need for a new range of expressive technologies and a more integrated methodology to facilitate rooted knowledge construction and support development of shoots to new areas through electronic collaboration and support.|
A78|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|Recent findings suggest that so too is too little emotion — when basic mechanisms of emotion are missing in the brain| then intelligent functioning is hindered.|
A78|RQ3|Relationship with SWeBok|Software Quality|We would like to see the trend in these attitude graphs reversed. We accept as an ultimate challenge for ‘Affective Learning’ the realising of ideas such as this.|
A79|RQ1|Principles and Values|Collaboration|The SERENITY approach will materialised our claims in an integrated framework to enable end-users| system engineers and security engineers collaborate seamlessly to build and operate dependable software-based systems for AmI environments with inherent and adaptable security capabilities.|
A79|RQ1|Principles and Values|Privacy and Security|We start from the assumption that there will be different definitions for the basic security properties. There are many reasons for this: for instance| legislation| cultural etc.|
A79|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|The complexity of AmI scenarios needs an approach that can talk to both of them rather than either of them. We need a dual-interface approach.|
A79|RQ1|Objective and Motivation|Create or improve tools and platforms|A Security Manager supporting the dynamic selection| adaptation| integration and monitoring of S&D mechanisms that are available in AmI ecosystems in order to address the security requirements which arise in specific operational settings.|
A79|RQ1|Main Guidelines|Address ethical and social issues|The security and dependability challenges will arise from complexity| ubiquity and autonomy of computing and communications as well as from the need for mobility| dynamic content and volatile environments.|
A79|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Despite analysis which might have been taken to ensure that the specification of a system includes a precise model of the security requirements that need to be realised| and that the design of a system includes components that can realise these requirements| it is in principle difficult to guarantee that such an analysis will provide the full proof that is required.|
A79|RQ2|Gaps|Lack of integration between different areas of software engineering|SERENITY's S&D patterns provide the basic building blocks of security and dependability solutions along with a formal characterisation of their behaviour and semantics that will enable the use of these solutions over a wide range of heterogeneous computing and communication infrastructures and devices.|
A79|RQ3|Relationship with SWeBok|Software Security|Automating the processing of semantic information represents a big challenge and a promising line of work for the resolution of many relevant problems.|
A79|RQ3|Relationship with SWeBok|Software architecture|An important issue is the ability to include abstractions of the different collaboration schemes and software and hardware architectures that can occur at runtime in very dynamic and heterogeneous scenarios.|
A80|RQ1|Principles and Values|User focus|Exploratory Computing (EC) aims at dealing with datasets of semantically complex items| whose inspection may reach beyond the user’s previous knowledge or expectations: an exploratory experience basically consists in creating| refining| modifying| comparing various datasets in order to 'make sense' of these meanings.|
A80|RQ1|Principles and Values|Collaboration|The approach proposed in this paper aims instead at taking a comprehensive view: first of all| it takes into account that human exploration is an iterative and multi-step process and therefore allows building upon a previous query on to the next| in a sort of 'dialogue' between the user and the system.|
A80|RQ1|Principles and Values|Innovation|The advent of the Big Data challenge has stimulated research on methods and techniques to deal with the problem of managing data abundance. Many approaches have been developed| but for the most part| they attack one specific side of the problem.|
A80|RQ1|Principles and Values|Openness|Exploratory Computing provides a new paradigm for accessing datasets which are both big and rich. The interactive flavour of the paradigm| together with visual support to summarisation| are basic constituents.|
A80|RQ1|Principles and Values|Ethics and Responsibility|The feedback from the system is as important as the requests by the users: the exploration is not about 'which objects belong to' a given dataset| but about 'which are the relevant properties' of these objects.|
A80|RQ1|Principles and Values|Process improvement|Our aim with this paper is to pave the ground for the Manifesto of Exploratory Computing| a novel| badly needed approach to the exploration of large and rich datasets.|
A80|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|The closest similitude is with human-to-human dialogue: when two people talk| they continuously make reference to their knowledge equipment| organizing and re-organizing them in order to provide the best comprehension| together with the best possible contribution to the ongoing dialogue.|
A80|RQ1|Objective and Motivation|Transforming current practices through innovations|Exploratory Computing [17] should support different aims| with a single EC session encompassing one or| most frequently| a number of them.|
A80|RQ1|Main Guidelines|Adopt new technologies and approaches|Many techniques coming from these realms| which have been kept distinct for so long| can come to the rescue for composing the wholesale experience of EC| with the additional technical challenge of making it possible to use them within a single| online personalised experience.|
A80|RQ1|Impact and Applicability|Develop tools and techniques|Each session displays an iterative process: an initial dataset gets refined into smaller datasets| for example by selecting among the teaching experiences those related to junior high school and later selecting only those where tablets are used.|
A80|RQ1|Call to Action|Creating a better future|The richness of the discovery is likely to go beyond the user’s expectations leading to serendipitous answers.|
A80|RQ2|Gaps|Lack of practical guidelines for implementing principles|However| a comprehensive approach| exploiting many of the affordances of the current ones and possibly adding fresh ones| is still missing.|
A80|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Note that portals like Learning4All already implement a good number of the desired features of EC| but not all of them: the work is still in progress.|
A80|RQ2|Gaps|Little discussion of the social and political implications of technology|Exploratory Computing provides a new paradigm for accessing datasets which are both big and rich. The interactive flavour of the paradigm| together with visual support to summarisation| are basic constituents.|
A80|RQ3|Relationship with SWeBok|Software Quality|As far as future work is concerned| we plan to investigate the following aspects: (i) deeper understanding of the internal modelling| studying the notion of relevance in its various interpretations; (ii) studying which statistical measures best represent the synthetical answers to be delivered during the exploratory session.|
A81|RQ1|Principles and Values|Collaboration|If academics| industry| and government can create a shared agenda of research focused upon the services sector| this need not continue. Through developing common terminology and methods that increase our insight into the services domain| we can reconnect universities to the dominant economic activities of the larger society that supports them.|
A81|RQ1|Principles and Values|Innovation|A hopeful sign is in how we treat patients in hospitals. Up until 1910| a patient had about a 50/50 chance of improving his or her medical condition by visiting a hospital to treat a disease. Today| even with the concerns about health insurance and medical errors| patients’ chances are enormously improved by seeking health care instead of avoiding it.|
A81|RQ1|Principles and Values|Openness|The leading role of services in the economy comes as no surprise to many companies. GE and IBM| leaders in the manufacturing sector| find that services are the fastest growing parts of their business. Indeed| IBM today receives the majority of its revenues from its IBM Global Services Business| a unit that did not exist prior to the 1990s.|
A81|RQ1|Principles and Values|Artificial intelligence|The rise of information and communication technologies (ICT) that improve automation and connect us to global labor markets has resulted in a shift of people out of manufacturing into knowledge-intensive service industries that support manufacturing and innovation.|
A81|RQ1|Objective and Motivation|Solve existing problems and challenges|Can we continue rapid productivity advances in a largely services-based economy? There are signs of hope| but also reasons to be worried.|
A81|RQ1|Main Guidelines|Develop tools and techniques|One example of a service innovation is the FedEx online package tracking system. By utilizing an online tracking system| FedEx can respond to customers’ needs very rapidly| without any human intervention on its part.|
A81|RQ1|Impact and Applicability|Promote collaboration and communication|At IBM we’ve been working closely with academic institutions to stimulate a cross-disciplinary focus on ‘services science.’ We need to overcome the silos of departments and disciplines if we are going to generate the innovation needed in a services economy.|
A81|RQ2|Gaps|Lack of practical guidelines for implementing principles|Today services mean jobs and growth| but the companies who have been leading the charge lack a strong conceptual foundation for their work and are now reaching out to academics.|
A81|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|Before the transformation can occur| standards must evolve up the stack beyond the transport (communications links in network)| and payload (format of content) levels to the business process level (the required and optional activities that make up a business process| rich in tacit knowledge).|
A81|RQ3|Relationship with SWeBok|Software architecture|The formalization of business process within the framework of Service Oriented Architecture (SOA) is a hot topic in computer science departments these days. SOAs support the codifications of identifiable business processes| such as an application for credit.|
A81|RQ3|Relationship with SWeBok|Software Quality|The questions of how to efficiently partition| integrate| and coordinate the recombination and reuse of information from one instance of a custom service into a new instance are fundamental to the economics of service activities.|
A81|RQ3|Relationship with SWeBok|Software Engineering Process|New disciplines arise in many ways and for many reasons. Nevertheless| two points are clear: most attempts to start new academic disciplines never succeed| and the new academic disciplines that do succeed| succeed for many factors that unite multiple groups in a common cause.|
A82|RQ1|Principles and Values|Artificial intelligence|The long-term goal of AI is human-level AI. This is still not directly definable| although we still know of human abilities that even the best present programs on the fastest computers have not been able to emulate| such as playing master-level go and learning science from the Internet.|
A82|RQ1|Principles and Values|Innovation|The best hope for human-level AI is logical AI| based on the formalizing of commonsense knowledge and reasoning in mathematical logic.|
A82|RQ1|Principles and Values|Process improvement|Formalizing common sense requires extensions to mathematical logic including nonmonotonic reasoning and extensive reification| e.g.| of concepts and also contexts.|
A82|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Basic researchers in AI should measure their work as to the extent to which it advances this goal.|
A82|RQ1|Objective and Motivation|Transforming current practices through innovations|Big changes in approach are almost certainly needed| e.g.| systems that distinguish appearance from reality| such as learning about three-dimensional objects from two-dimensional images or from a sense of touch.|
A82|RQ1|Objective and Motivation|Solve existing problems and challenges|Approaches based on simulating aspects of the human nervous system| such as neural nets| may also work.|
A82|RQ1|Main Guidelines|Adopt new technologies and approaches|AI research should not be dominated by near-term applications. DARPA should recall the extent to which its applied goals were benefitted by basic research.|
A82|RQ1|Main Guidelines|Establish standards and guidelines|Formalizing common sense requires extensions to mathematical logic including nonmonotonic reasoning and extensive reification.|
A82|RQ1|Impact and Applicability|Conduct research and experiments|Basic researchers in AI should measure their work as to the extent to which it advances this goal.|
A82|RQ1|Impact and Applicability|Adapt and evolve|Big changes in approach are almost certainly needed| e.g.| systems that distinguish appearance from reality.|
A82|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|The so-called AI winter was dominated by people who lost money in companies. That’s a common phenomenon.|
A82|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|AI research should not be dominated by near-term applications. DARPA should recall the extent to which its applied goals were benefitted by basic research.|
A82|RQ3|Relationship with SWeBok|Software Engineering Models and Methods|Formalizing common sense requires extensions to mathematical logic including nonmonotonic reasoning and extensive reification| e.g.| of concepts and also contexts.|
A82|RQ3|Relationship with SWeBok|Software Quality|Approaches based on simulating aspects of the human nervous system| such as neural nets| may also work.|
A83|RQ1|Principles and Values|Change|You would need to understand that you were managing a revolution. This is not a gentle evolution but a revolution in technology.|
A83|RQ1|Principles and Values|Innovation|A wonderful innovation is occurring in new computer languages| which are changing very quickly and which will go on changing for the rest of the decade.|
A83|RQ1|Principles and Values|Process improvement|We must change; this isn’t fair; we want to do this and that” [...] we need a change in software and application development methodologies| along with a change in the developmental life cycle.|
A83|RQ1|Principles and Values|Artificial intelligence|Three years from now it will include knowledge-based tools.|
A83|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Eventually| everybody is going to have to change their methodologies; they’ll have no option.|
A83|RQ1|Objective and Motivation|Transforming current practices through innovations|If you could build machines with a very high level of parallelism| then you’d get much more value for your money.|
A83|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|We are going to have a revolution in DP| not an evolution| and we’re going to have it quickly.|
A83|RQ1|Main Guidelines|Adopt new technologies and approaches|Fourth-generation languages| new methods of systems analysis| and analysts’ workbench tools.|
A83|RQ1|Main Guidelines|Focus on education and training|We are talking about retraining the older managers| very definitely| and picking out the most innovative among them.|
A83|RQ1|Impact and Applicability|Develop tools and techniques|There is also a wonderful innovation in tools like Higher Order Software’s (HOS) bug-free logic| which generates code guaranteed to be bug-free.|
A83|RQ1|Impact and Applicability|Share knowledge|It requires a very large number of people talking about it| attending seminars| documenting their successes| and spreading the message throughout the industry.|
A83|RQ2|Gaps|Lack of practical guidelines for implementing principles|The question| and I’ve heard your accurate comments on it in the past| is how to spread the message of the new technology. How do you get these people to start tuning in and listening?|
A83|RQ3|Relationship with SWeBok|Software Quality|There is also a wonderful innovation in tools like Higher Order Software’s (HOS) bug-free logic| which generates code guaranteed to be bug-free.|
A84|RQ1|Principles and Values|User focus|Engineers are now taught how to engage with society through empathy training| coping with multiple points of view| actively managing teamwork| and realizing the full potential of product and service prototyping (experimenting).|
A84|RQ1|Principles and Values|Collaboration|The cumulative work of a global design thinking research community demonstrates our ability to instrument and quantify design behavior.|
A84|RQ1|Principles and Values|Innovation|D.school graduates have an open mind| are full of ideas and enthusiasm for innovation with an appetite for new solutions that yield better services| products| and even fundamentally better societies.|
A84|RQ1|Principles and Values|Openness|This study is based on survey results. The researchers not only explored the different forms of design thinking adoption| but also share their valuable insights derived from years of profound research on design thinking in organizations.|
A84|RQ1|Principles and Values|Ethics and Responsibility|Now that we have the roots of the scientific comprehension of design thinking we can expect to continuously improve our understanding of ourselves.|
A84|RQ1|Principles and Values|Change|We have started to understand the underlying principles. Though valuable insights have been gained and methods and tools further developed| we are just at the beginning.|
A84|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|With the integration of design thinking into engineering education| a missing link has been created between the science-focused| context-independent part of engineering and the human society focused| context-dependent aspect.|
A84|RQ1|Objective and Motivation|Transforming current practices through innovations|Design is now positioned to follow biology as a foundational science.|
A84|RQ1|Objective and Motivation|Create or improve tools and platforms|The benefits of their work can be seen at thisisdesignthinking.net. This website launched by the research team showcases interesting stories from companies working with design thinking and publishes interviews with experts and practitioners.|
A84|RQ1|Main Guidelines|Adopt new technologies and approaches|Universities are now the knowledge creation engines of society| largely replacing industry R&D for radical breakthroughs.|
A84|RQ1|Main Guidelines|Focus on education and training|Many universities worldwide approach the two institutes in order to implement a similar school following the 'd.school' model.|
A84|RQ1|Impact and Applicability|Develop tools and techniques|Many more projects pave the way for making design a foundational science.|
A84|RQ1|Call to Action|Educate and train|More and more governments and universities plan to establish their own schools of design thinking and integrate design thinking into their curriculum.|
A84|RQ2|Gaps|Lack of integration between different areas of software engineering|As engineering faculty and technical managers| most of us did not teach engineering design nor did we attempt to manage design thinking because we either did not understand it and/or because it includes unpredictable human behavior within the system boundary.|
A84|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|That’s why researchers are striving to gauge and assess its impact.|
A84|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|We have started to understand the underlying principles. Though valuable insights have been gained and methods and tools further developed| we are just at the beginning.|
A84|RQ3|Relationship with SWeBok|Software Requirements|How Might We Address and Measure the Needs of Society? While engineering has been described as the application of science and mathematics to the needs of society| up until now we have known and taught our students very little about finding and understanding the needs of society.|
A84|RQ3|Relationship with SWeBok|Software architecture|A critical link has been made between engineering analysis| the science-focused part of the discipline| which is context independent| and engineering design| the human society-focused aspect of the discipline| which is context dependent.|
A84|RQ3|Relationship with SWeBok|Software Design|The cumulative work of a global design thinking research community demonstrates our ability to instrument and quantify design behavior.|
A84|RQ3|Relationship with SWeBok|Software Engineering Professional Practice|More and more governments and universities plan to establish their own schools of design thinking and integrate design thinking into their curriculum.|
A85|RQ1|Principles and Values|Collaboration|Borland has opened up Gauntlet's internal APIs to allow plug-in extensions to further enhance the product.|
A85|RQ1|Principles and Values|Innovation|Borland has reinvented itself as an enterprise application lifecycle management company and with its products and services aligned| its solutions coming to fruition in the form of an OpenALM-enabled product portfolio| its vision is innovating positive change in the market.|
A85|RQ1|Principles and Values|Openness|Borland has opened up Gauntlet's internal APIs to allow plug-in extensions to further enhance the product.|
A85|RQ1|Principles and Values|Process improvement|Gauntlet itself is a Java-based application running within its own Tomcat web server. Accessing its functions is done entirely through a standard web browser such as Microsoft Internet Explorer or Mozilla Firefox.|
A85|RQ1|Objective and Motivation|Transforming current practices through innovations|Borland’s latest direction has zeroed in on a problem that has plagued the expensive and highly proprietary ALM market since its inception.|
A85|RQ1|Objective and Motivation|Solve existing problems and challenges|Seeing this as a major pain point| Borland has reengineered its software tools market approach to alleviate that pain.|
A85|RQ1|Main Guidelines|Adopt new technologies and approaches|Borland has reinvented itself as an enterprise application lifecycle management company.|
A85|RQ1|Impact and Applicability|Develop tools and techniques|Gauntlet itself is a Java-based application running within its own Tomcat web server.|
A85|RQ1|Call to Action|Creating a better future|Borland has reinvented itself as an enterprise application lifecycle management company and with its products and services aligned| its solutions coming to fruition in the form of an OpenALM-enabled product portfolio.|
A85|RQ3|Relationship with SWeBok|Software Engineering Process|Enough of the workflow has been codified into a predictable| repeatable process that the initial proprietary argument is looked upon with disdain.|
A86|RQ1|Principles and Values|Collaboration|The collective knowledge resulting from the dynamics of interactivity would be in charge of perfecting the proposed model.|
A86|RQ1|Principles and Values|Innovation|The aim is to achieve innovation through the development of new ideas| stimulation of intelligence and individual and collective expression| using collaboration as ‘creative advantage’ (John Kao).|
A86|RQ1|Principles and Values|Openness|The process is open (free).|
A86|RQ1|Principles and Values|Ethics and Responsibility|Investors who consider profit as a central purpose will be excluded from the outset.|
A86|RQ1|Principles and Values|Process improvement|It was intended to find/define a context for the design process (actors and environment) and the motivations and capacities for an interaction strategy (culture| information and knowledge).|
A86|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|The Manifesto was not| nor was it meant to be| a final document| because such a position was inconsistent with the ideology that supported it.|
A86|RQ1|Objective and Motivation|Transforming current practices through innovations|We advocated a central ideology| a vision of the future and its alignment with implementation| following the recommendations of James Collins.|
A86|RQ1|Main Guidelines|Adopt new technologies and approaches|There is nothing to prevent technology being invented| as nothing prevents industry from reinventing itself.|
A86|RQ1|Main Guidelines|Develop tools and techniques|The definition of the technologies necessary for the commercial viability of the ‘functionalities’ depends on the process.|
A86|RQ1|Impact and Applicability|Promote collaboration and communication|The interaction resulting from the application of the concept of ‘think and act globally’ allows the overlap of several stages| in time and space| with the consequent reduction of costs and optimization of results.|
A86|RQ1|Impact and Applicability|Share knowledge|There is a need to create a database to save ideas to use later.|
A86|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|The Manifesto was not| nor was it meant to be| a final document| because such a position was inconsistent with the ideology that supported it.|
A86|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|The collective knowledge resulting from the dynamics of interactivity would be in charge of perfecting the proposed model.|
A86|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|There is a need to create a database to save ideas to use later.|
A86|RQ3|Relationship with SWeBok|Software architecture|The business idea that we proposed resulted from the observation| interpretation| reinvention and application of a vast field of theories and practices that we tried to expose in the possible detail.|
A86|RQ3|Relationship with SWeBok|Software Quality|The connection system also serves to continuously check the excellence of the functionalities.|
A86|RQ3|Relationship with SWeBok|Software Security|The technologies associated with production and distribution will be a consequence of the factors underlying the distinctive competencies to be defined.|
A87|RQ1|Principles and Values|User focus|Recommender systems can play a multitude of roles for different stakeholders in cities. From the perspective of citizens| personalization and information filtering – the core properties of recommender systems – are also of value in recommender systems for citizens.|
A87|RQ1|Principles and Values|Collaboration|To optimize the social effectiveness of recommendation systems in cities| a deep understanding of the interactions between citizens| between citizens and the environment| and between citizens and other urban stakeholders| such as public administrations and local businesses| is needed.|
A87|RQ1|Principles and Values|Innovation|Given these distinct goals| recommender systems for citizens are faced with more social and computational challenges beyond the mentioned above.|
A87|RQ1|Principles and Values|Openness|In addition to social data| Open Data provided by government agencies could also be exploited for recommendation purposes. Following machine readable formats| public linked and open data repositories contain valuable information at large scale about a wide array of topics in a city| such as health| education| energy| finance| and public safety.|
A87|RQ1|Principles and Values|Ethics and Responsibility|Fairness will be a bigger problem when applying recommender systems for citizens because there is no definition of what the greater social good is.|
A87|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|We advocate the importance of a social perspective that considers how to design recommender systems that best serve our society.|
A87|RQ1|Objective and Motivation|Transforming current practices through innovations|To provide personalized recommendations of proposals| the systems should look beyond a target user’s profile (i.e.| interests| needs| demographic characteristics| and geographical constraints) and consider aspects such as the satisfaction of public budget allocation programs| and inclusion of certain population segments and city assets.|
A87|RQ1|Main Guidelines|Establish standards and guidelines|As an additional requirement| the recommender system infrastructure should be part of the infrastructure that the city provides and| in many cases| it should disappear into the background.|
A87|RQ1|Impact and Applicability|Promote collaboration and communication|Recommender systems for citizens are expected to play the role of lubricant that can improve the efficiency of communication among them.|
A87|RQ1|Impact and Applicability|Consider context and application|Consider the example of a driving route recommender system. To optimally recommend driving routes to a community of citizens| the system should be able to understand how the effectiveness of recommendations is influenced by the environment (e.g.| road conditions) and how the recommendations to different citizens affect each other (e.g.| to avoid traffic congestion).|
A87|RQ2|Gaps|Lack of practical guidelines for implementing principles|The objective functions are thus more complex than in traditional recommendation scenarios. The benefit from a recommender system cannot be reduced to the profit of a single user| organization or holding| and does not necessarily have money value.|
A87|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Given these distinct goals| recommender systems for citizens are faced with more social and computational challenges beyond the mentioned above.|
A87|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|To further drive the discussion| we are interested in building a community where scientists from various expert domains and disciplines| practitioners| and enthusiasts can discuss with each other on relevant topics.|
A87|RQ3|Relationship with SWeBok|Software architecture|We identified the topic of Recommender systems for citizens (CitRec) to sit at the intersection between Citizen Science and recommender systems and Information technologies| while showing elements of novelty due to its original perspective.|
A87|RQ3|Relationship with SWeBok|Software Quality|At the same time| the emergence of social data| i.e.| data generated by people during their societal activities| available through new sources (e.g.| social media| mobile phones| sensor networks) bring great opportunities to the development of recommender systems for citizens.|
A88|RQ1|Principles and Values|Collaboration|The manifesto elucidates the basic premises that are adopted by the members of the network| and that unite them.|
A88|RQ1|Principles and Values|Change|Addressing the challenges mentioned above requires a paradigm shift.|
A88|RQ1|Principles and Values|Artificial intelligence|Human beings may be supported by technical artifacts of all kinds| notably by ICT systems.|
A88|RQ1|Principles and Values|Privacy and Security|It is an ethical necessity for bestowing authorities on the people in an enterprise| and having them bear the corresponding responsibility.|
A88|RQ1|Objective and Motivation|Solve existing problems and challenges|The vast majority of strategic initiatives fail| meaning that enterprises are unable to gain success from their strategy.|
A88|RQ1|Objective and Motivation|Transforming current practices through innovations|Addressing the challenges mentioned above requires a paradigm shift.|
A88|RQ1|Main Guidelines|Establish standards and guidelines|A coherent| consistent| and hierarchically ordered set of such principles for a particular class of systems is called an architecture.|
A88|RQ1|Impact and Applicability|Develop tools and techniques|It is a duty of enterprise engineers to provide the means to the people in an enterprise to internalize its ontological model.|
A88|RQ1|Call to Action|Creating a better future|For achieving and maintaining unity and integration in the (re-) development and operation of an enterprise| organizational measures are needed| collectively called governance.|
A88|RQ2|Gaps|Lack of integration between different areas of software engineering|The ambition is to address (all) traditional topics in said disciplines from the Enterprise Engineering Paradigm.|
A88|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|To ensure that an enterprise operates in compliance with its strategic concerns| these concerns must be transformed into generic functional and constructional normative principles.|
A88|RQ3|Relationship with SWeBok|Software architecture|A coherent| consistent| and hierarchically ordered set of such principles for a particular class of systems is called an architecture.|
A88|RQ3|Relationship with SWeBok|Software Engineering Process|Entropy can be reduced and managed effectively through modular design based on atomic elements.|
A88|RQ3|Relationship with SWeBok|Software Security|It is an ethical necessity for bestowing authorities on the people in an enterprise| and having them bear the corresponding responsibility.|
A89|RQ1|Principles and Values|Collaboration|Students were asked to work in groups of three to share expertise and foster a collaborative sense for the project.|
A89|RQ1|Principles and Values|Innovation|The ability to translate between communication modes drives to the heart of transmedia navigation and suggests the act of navigating between media might alter how some students think.|
A89|RQ1|Principles and Values|Openness|We chose software that was freely available in the cloud (on the web) and used hardware students might already own or could borrow from the institution.|
A89|RQ1|Principles and Values|Process improvement|We found video annotation tools like VideoANT to be extremely useful to students to 'close the loop' in the peer review process.|
A89|RQ1|Objective and Motivation|Transforming current practices through innovations|We used low threshold (easy-to-learn) technologies to help students extend their capabilities to express ideas and to engage in 'transmedia navigation.'|
A89|RQ1|Main Guidelines|Develop tools and techniques|To store and share their video| several groups of students chose to upload their video on YouTube| though we suggested MediaMill| the institution’s protected media-sharing service.|
A89|RQ1|Impact and Applicability|Focus on education and training|Increasing students’ confidence in their ability to author video texts was another aim of the assignment| and students reported increased confidence in the areas of editing a video| telling a story with video| choosing media types effectively| and analyzing still and moving images.|
A89|RQ2|Gaps|Lack of practical guidelines for implementing principles|Despite the addition of questions to the second course’s surveys| the process of developing a scaffolded assignment with a particular emphasis on how the two media of writing and video might advance in parallel and related steps was the same. We were interested in finding out whether students would successfully carry out such an assignment given the modest resources normally available to instructors in writing courses.|
A89|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|A more formal quantitative study can be undertaken to compare effects of using video annotation software for peer review among students in experimental and control groups.|
A89|RQ3|Relationship with SWeBok|Software Requirements|After creating and testing out their ideas and how they might work in writing and video| students developed a plan for the subsequent written document and video.|
A89|RQ3|Relationship with SWeBok|Software Quality|We found increases in student confidence regarding their technical ability to author video texts and to navigate between different media types (transmedia navigation).|
A90|RQ1|Principles and Values|User focus|The most important social evolution within the computing professions would be to create a role for the software designer as a champion of the user experience.|
A90|RQ1|Principles and Values|Collaboration|He worked closely with a skilled programmer| Jonathan Sachs| interactively developing the design at all levels of detail—from the broad architecture to the structured organization of the command menus and the naming of the menu items.|
A90|RQ1|Principles and Values|Innovation|Perhaps the most important conceptual move to be taken is to recognize the critical role of design| as a counterpart to programming| in the creation of computer artifacts.|
A90|RQ1|Principles and Values|Openness|We need to take a fresh look at the entire process of creating software—what I call the software design viewpoint.|
A90|RQ1|Principles and Values|Ethics and Responsibility|Computing professionals themselves should take responsibility for creating a positive user experience.|
A90|RQ1|Principles and Values|Process improvement|One of the main reasons most computer software is so abysmal is that it’s not designed at all| but merely engineered.|
A90|RQ1|Principles and Values|Change|We need to rethink the fundamentals of how software is made.|
A90|RQ1|Principles and Values|Architecture|Architects| not construction engineers| are the professionals who have overall responsibility for creating buildings. Architecture and engineering are| as disciplines| peers to each other.|
A90|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Despite the enormous outward success of personal computers| the daily experience of using computers far too often is still fraught with difficulty| pain| and barriers for most people.|
A90|RQ1|Objective and Motivation|Transforming current practices through innovations|By training and inclination| people who develop programs haven’t been oriented to design issues.|
A90|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|The lack of usability of software and the poor design of programs are the secret shame of the industry.|
A90|RQ1|Objective and Motivation|Solve existing problems and challenges|Users are largely silent about this. There is no uproar| no outrage.|
A90|RQ1|Main Guidelines|Adopt new technologies and approaches|The most important social evolution within the computing professions would be to create a role for the software designer as a champion of the user experience.|
A90|RQ1|Main Guidelines|Develop tools and techniques|Hypercard| for instance| allows the ready simulation of the appearance of a program| but is not effective at modeling the behavior of real-world programs.|
A90|RQ1|Main Guidelines|Conduct research and experiments|A major component of the professional training| therefore| would consist of design studios in which students carry out directed projects to design parts of actual programs| whole programs| and groups of programs using the tools and techniques of their trade.|
A90|RQ1|Impact and Applicability|Ensure security and privacy|The fact that design and implementation are closely related does not mean that they are identical—even if the two tasks are sometimes performed by one and the same person.|
A90|RQ1|Call to Action|Building and strengthening communities|And in Silicon Valley and elsewhere there is talk of forming a professional organization dedicated to advancing the interests of software design.|
A90|RQ2|Gaps|Lack of practical guidelines for implementing principles|Today| the software designer leads a guerrilla existence| formally unrecognized and often unappreciated.|
A90|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|If design and implementation are in watertight compartments| it can be recipe for disaster because the natural process of refinement and change is prevented.|
A90|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|The technical demands of writing the code are often so strenuous that the programmer can lose perspective on the larger issues affecting the design of the product.|
A90|RQ3|Relationship with SWeBok|Software architecture|Similarly| in computer programs| the selection of the various components and elements of the application must be driven by an appreciation of the overall conditions of use and user needs through a process of intelligent and conscious design.|
A90|RQ3|Relationship with SWeBok|Software Design|Software design is not the same as user interface design.|
A90|RQ3|Relationship with SWeBok|Software Quality|The Roman architecture critic Vitruvius advanced the notion that well-designed buildings were those which exhibited firmness| commodity| and delight.|
A90|RQ3|Relationship with SWeBok|Software Engineering Professional Practice|We need to create a professional discipline of software design. We need our own community.|
A91|RQ1|Principles and Values|User focus|Given the speed with which such technologies are emerging and becoming adopted| the need to engage target audiences to weigh in on possible AI futures is critical.|
A91|RQ1|Principles and Values|Collaboration|We| a random group of artists| sit| write| unite| speak| believe.|
A91|RQ1|Principles and Values|Innovation|AI can be used to gather| categorize| generate| and evaluate images and other data in ways that differ from| and in some ways exceed| human capabilities.|
A91|RQ1|Principles and Values|Openness|Manifestos can 'help us to resist dominant futures... and imagine new alternatives'.|
A91|RQ1|Principles and Values|Ethics and Responsibility|AI is rapidly becoming enmeshed in our professional and private lives. The ubiquity of such technologies raises a host of ethical questions| value clashes| and unforeseen consequences that must be confronted.|
A91|RQ1|Principles and Values|Change|The fast adoption and widespread availability of a new generation of AI tools... is unmistakably changing artistic practice.|
A91|RQ1|Principles and Values|Artificial intelligence|Open questions range from what role AI should assume in the artistic process| to how artists can responsibly use purpose-built AI tools.|
A91|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|The futures such technologies unlock are also unpredictable.|
A91|RQ1|Objective and Motivation|Transforming current practices through innovations|AI should become more uncertain| embracing the toxicity| the auto correct| the autopilot| the reboot.|
A91|RQ1|Objective and Motivation|Create or improve tools and platforms|Digital tools are developed to enable artists to take action themselves| such as by altering digital images of their artworks to disrupt AI training algorithms.|
A91|RQ1|Main Guidelines|Establish standards and guidelines|Speculative design has a critical role to play here: by offering 'tools for questioning' and a means of making 'thought experiments' tangible| it seeks to provoke dialogue around the possible impacts of emerging technologies.|
A91|RQ1|Impact and Applicability|Share knowledge|Co-creating artifacts from imagined futures facilitates a constructive form of deliberation.|
A91|RQ1|Call to Action|Challenge the status quo|Manifestos can 'help us to resist dominant futures... and imagine new alternatives'.|
A91|RQ2|Gaps|Lack of practical guidelines for implementing principles|Participants expressed surprise at how well the collaborative manifesto reflected their attitudes toward AI with respect to the artistic process.|
A91|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Participants questioned whether government regulation could play an effective role in guardrailing such sweeping changes ('has legislation ever solved anything?').|
A91|RQ2|Gaps|Little discussion of the social and political implications of technology|Terms such as 'scary'| 'sinister' and 'toxic' were used to describe the more potentially harmful edges of AI.|
A91|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|We would clarify what we mean by AI and lay the groundwork for a more nuanced discussion.|
A91|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|It was also unclear to participants how AI technology might evolve| which intersected with the theme of recklessness and danger ('we can’t predict or comprehend how AI will change the world').|
A91|RQ3|Relationship with SWeBok|Software architecture|AI should become more uncertain. Embracing the toxicity| the auto correct| the autopilot| the reboot.|
A91|RQ3|Relationship with SWeBok|Software Security|To safeguard and shape the AI future of the arts (and other sectors)| more deliberation is needed with those stakeholders whose working processes and livelihoods stand to be most affected.|
A91|RQ3|Relationship with SWeBok|Computing Foundations|AI is already in our system| that it is interweaved in daily life| and that it might therefore be best for us to embrace it.|
A92|RQ1|Principles and Values|Collaboration|We believe and hope to convince the reader that we must all come together as a community to develop a shared set of research practices for planning| conducting| and reporting research synthesis within HCI.|
A92|RQ1|Principles and Values|Innovation|Modern computing technologies like machine learning might be able to aid us in the task of keeping up with and synthesizing publications.|
A92|RQ1|Principles and Values|Ethics and Responsibility|By gathering the multitude of disciplinary voices and epistemological perspectives in our community| we hope to make a disciplinary impact in terms of knowledge creation and methodology.|
A92|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|We pose two critical questions at this juncture: 1) How can we package our work in such a way that meaningful research synthesis can be practiced?|
A92|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|There are already hints of this trend in HCI: the papers most cited are cited quite a bit more often than the average paper| while the number of citations papers receive per year is declining overall.|
A92|RQ1|Main Guidelines|Address ethical and social issues|Consider the most recent (2022) proceedings of the Conference on Human Factors in Computing Systems (CHI)| where searching for 'novel' yields 602 results—based on 697 papers. When 86% of papers are characterized as 'novel|' we need to ask what this means for knowledge gains and consensus-building.|
A92|RQ1|Impact and Applicability|Develop tools and techniques|Yet replication studies| follow-up work| corrections and expansions| and other forms of explicitly not novel forms of inquiry remain sidelined| despite calls to action that go back more than a decade.|
A92|RQ1|Call to Action|Creating a better future|As a research community| we need to come together and decide what actions need to be taken towards building a set of standards that is rigorous yet inclusive of the diversity of work that we do in HCI.|
A92|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|We find ourselves in a liminal space| where we all are carrying out research and producing a variety of outcomes| but an outsider looking in may find the overall picture difficult to make out.|
A92|RQ2|Gaps|Lack of integration between different areas of software engineering|To quote Reeves| we need 'more reviews of and reflections upon the landscape of different forms of reasoning in HCI and through this better ways of managing how potentially competing disciplinary perspectives meet together'.|
A92|RQ3|Relationship with SWeBok|Software architecture|Yet how can we point to what works and what does not if we cannot synthesize results with a high degree of rigour or systematicity?|
A92|RQ3|Relationship with SWeBok|Software Quality|Research synthesis can clarify the work conducted in a field of study| not only for others but ourselves| as well.|
A92|RQ3|Relationship with SWeBok|Software Engineering Process|We suggest that systematic reviews| with all of their own methodological diversity| have the potential to be part of both the development of stable ground and disruptive practice within knowledge production in HCI.|
A93|RQ1|Principles and Values|Collaboration|Any successful third generation system must support most of the tools described above. Second| a third generation DBMS must be open| i.e. it must allow access from additional tools running in a variety of environments.|
A93|RQ1|Principles and Values|Innovation|There is a surprising degree of consensus on the desired capabilities of these next-generation systems| which we term third generation database systems.|
A93|RQ1|Principles and Values|Openness|Third generation DBMSs must be open to other subsystems.|
A93|RQ1|Principles and Values|Architecture|Third generation DBMSs must subsume second generation DBMSs.|
A93|RQ1|Objective and Motivation|Transforming current practices through innovations|Thus| almost everybody requires a better DBMS| and there have been several efforts to construct prototypes with advanced function.|
A93|RQ1|Objective and Motivation|Create or improve tools and platforms|Third generation database systems must support most of the tools described above.|
A93|RQ1|Main Guidelines|Address ethical and social issues|These characteristics have dramatically lowered the amount of program maintenance that must be done by applications and should not be abandoned.|
A93|RQ1|Impact and Applicability|Develop tools and techniques|The successful DBMSs of the 90s will have services in all three areas: data| object| and rule management.|
A93|RQ1|Call to Action|Adopt practices and principles|In our opinion there is only one reasonable solution; rules must be enforced by the DBMS but not bound to any function or collection.|
A93|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|There is no way to guarantee that a programmer does either; consequently| there is no way to guarantee rule enforcement.|
A93|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|Optimization of the execution of rules poses a significant challenge. In addition| tools to allow users to visualize and debug rule-oriented applications are crucial to the success of this technology.|
A93|RQ3|Relationship with SWeBok|Software architecture|The successful DBMSs of the 90s will have services in all three areas: data| object| and rule management.|
A93|RQ3|Relationship with SWeBok|Software Quality|These characteristics have dramatically lowered the amount of program maintenance that must be done by applications and should not be abandoned.|
A93|RQ3|Relationship with SWeBok|Software Security|Queries and their resulting answers should be the lowest level of communication between a client and a server.|
A94|RQ1|Principles and Values|Innovation|Since we consider this a general phenomenon of information systems| DBMS technology has no choice but to focus its efforts on the event-response paradigm. In other words| all future DBMS – be they relational| object-oriented| or otherwise – must exhibit some active functionality.|
A94|RQ1|Principles and Values|Architecture|This manifesto concerns itself with bundling into DBMS one particular functionality. Case-by-case cooperation among autonomous and semi-autonomous| loosely-coupled system components must be based on some mechanism that allows these components to become aware of what is happening around them.|
A94|RQ1|Objective and Motivation|Transforming current practices through innovations|If successful| DBMS with a prescribed range of services could then be constructed by '(re)bundling' components with the appropriate functional specializations.|
A94|RQ1|Objective and Motivation|Solve existing problems and challenges|However| it is still unclear what the term 'active database management system' really means. Under which condition can you legitimately claim that your system is 'active'?|
A94|RQ1|Main Guidelines|Establish standards and guidelines|In this paper| we describe what| in our opinion| the characteristics are that a database management system must exhibit in order to be legitimately called 'active'.|
A94|RQ1|Impact and Applicability|Develop tools and techniques|It goes without saying that an ADBMS must be usable. The bottom line for usability is the availability of a rule definition language.|
A94|RQ2|Gaps|Lack of integration between different areas of software engineering|In order to assist the user in beneficially using the ADBMS| a number of tools should be provided: a rule browser| a rule designer| a rulebase analyzer| a debugger| a maintenance tool| a trace facility| and performance tuning tools.|
A94|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|The rulebase must be changeable over time: it is neither sufficient to support only a fixed set of ECA-rules| nor is it appropriate to support reactive behavior only as ECA-rules that are hard-wired into the DBMS code.|
A94|RQ3|Relationship with SWeBok|Software Engineering Process|We classify ADBMSs according to the role they are able to play in an information system| i.e.| we discuss which functionality an ADBMS should exhibit in order to meet given requirements of certain types of applications.|
A95|RQ1|Principles and Values|Collaboration|The Evaluate Collaboratory group campaign for better experimental methods in systems research. Their open letter to conference program chairs states that...|
A95|RQ1|Principles and Values|Innovation|We are proposing a radical methodological shift in the manner in which systems research is published.|
A95|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Our concept of a literate experiment is to have a single| rich| human-generated| text-based description of a particular experiment| from which can be automatically derived...|
A95|RQ1|Main Guidelines|Share knowledge|We anticipate that a major uptake would require meaningful engagement with program committees and journal editorial boards.|
A95|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Currently it lacks many useful features. The implementation depends on Linux for experiment execution and LaTeX for paper authoring. The scripting mechanism does not give support for any level of sophisticated error handling or recovery.|
A95|RQ3|Relationship with SWeBok|Software Quality|We feel that any improvement in experimental Computer Science has to be a useful contribution to the field.|
A96|RQ1|Principles and Values|User focus|Designed with a user-centric approach| the app embodies an interface that simplifies the intricacies of data querying and analytical processes| tailored to suit the multifaceted needs of its users.|
A96|RQ1|Principles and Values|Collaboration|The Data Spaces Business Alliance unites a diverse range of businesses| IT providers| research institutions| and other stakeholders from different sectors| all dedicated to the development and utilization of data spaces.|
A96|RQ1|Principles and Values|Innovation|MobiSpaces develops innovative solutions that go a step further from existing data spaces initiatives| by incorporating methods| algorithms and techniques for mobility data management| mobility pattern discovery and machine learning.|
A96|RQ1|Principles and Values|Openness|This IDS-RAM is characterized by an open architecture| which is reliable and federated for cross-sector data exchange| facilitating sovereignty and interoperability.|
A96|RQ1|Principles and Values|Process improvement|MobiSpaces offers error detection and cleaning data services that result in more accurate and reliable data| thus increasing the value of shared data sets.|
A96|RQ1|Principles and Values|Change|MobiSpaces paves the way towards future mobility data spaces| in line with European’s Union directives| aiming at more efficient| trustworthy and reliable data sharing across organizations and businesses.|
A96|RQ1|Principles and Values|Artificial intelligence|MobiSpaces supports advanced analytical features| enabling the derivation of meaningful insights through sophisticated data processing methodologies| inclusive of AI-driven analytics.|
A96|RQ1|Principles and Values|Sustainability|MobiSpaces aims to deliver an innovative| effective| robust| and green ecosystem for the entire lifecycle of mobility data.|
A96|RQ1|Principles and Values|Architecture|MobiSpaces contributes to the design of future mobility data spaces by offering data governance services for mobility data for data providers| supporting data consumers via advanced data analysis services| providing these services in a data spaces compliant way.|
A96|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|As the mobility domain is one of the fundamental pillars of the modern digital economy worldwide| the need for data spaces tailored to the mobility domain is imperative.|
A96|RQ1|Objective and Motivation|Transforming current practices through innovations|MobiSpaces develops innovative solutions that go a step further from existing data spaces initiatives| by incorporating methods| algorithms and techniques for mobility data management| mobility pattern discovery and machine learning.|
A96|RQ1|Impact and Applicability|Promote collaboration and communication|The Data Spaces Business Alliance unites a diverse range of businesses| IT providers| research institutions| and other stakeholders from different sectors| all dedicated to the development and utilization of data spaces.|
A96|RQ1|Impact and Applicability|Consider context and application|To this end| MobiSpaces offers tools to data owners for edge data management leading to optimized deployment of data acquisition services and optimized resource allocation.|
A96|RQ2|Gaps|Lack of practical guidelines for implementing principles|Despite the recent interest in data spaces| their wide adoption and success in the future is subject to several factors| including the need for assistive technologies that guide implementation.|
A96|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|Domain-specific data spaces| such as mobility data spaces| need to offer assistive technologies that are compliant with data spaces architectures but also act in a complementary way and offer domain-specific data services.|
A96|RQ3|Relationship with SWeBok|Software architecture|MobiSpaces contributes to the design of future mobility data spaces by offering data governance services for mobility data for data providers| supporting data consumers via advanced data analysis services| providing these services in a data spaces compliant way.|
A96|RQ3|Relationship with SWeBok|Software Quality|MobiSpaces includes an error detection and cleaning mechanism that is tailored for mobility data| aiming at error-free data sets that have higher value for training upstream machine learning models.|
A97|RQ1|Principles and Values|User focus|HCI needs the manifesto| 'the mode of agonism| the voice of those who are contra' to articulate ideas for change in a public| accessible form.|
A97|RQ1|Principles and Values|Collaboration|CHI in particular is a tool that serves to reinforce the political and ideological status quo| favoring sell-out researchers wielding arcane verbiage and p-values.|
A97|RQ1|Principles and Values|Innovation|Manifestos introduce new ways of thinking – sometimes in strange and extreme packages like the SCUM Manifesto or even The Communist Manifesto.|
A97|RQ1|Principles and Values|Openness|F*** paywalls. Open research.|
A97|RQ1|Principles and Values|Ethics and Responsibility|Self-reflexivity is important. We are not being self-indulgent or methodologically flawed in writing ourselves into the account of our change-making: we are being consistent with what action research requires of us.|
A97|RQ1|Principles and Values|Process improvement|Manifesto writing can prompt new ideas by liberating us from the confines of careful speech and rational argument.|
A97|RQ1|Principles and Values|Change|Manifestos make visible| they bring urgent causes to light – which is why they seem so timely in our age of social upheaval.|
A97|RQ1|Principles and Values|Artificial intelligence|How can technology aid human expression without diminishing it?|
A97|RQ1|Principles and Values|Privacy and Security|A methodological blind spot has made it hard for HCI to pursue technical and sociopolitical agendas simultaneously.|
A97|RQ1|Principles and Values|Sustainability|We fret over smart toothbrushes while ignoring global environmental collapse.|
A97|RQ1|Principles and Values|Architecture|Design tools and interactions people need.|
A97|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Digital activism has given new life to the manifesto| and the manifesto may in turn give new life to CHI.|
A97|RQ1|Objective and Motivation|Transforming current practices through innovations|Today we are all fluent in the language of manifestos. Our writing is concise| confident| arrogant.|
A97|RQ1|Objective and Motivation|Emphasis on collaboration and interdisciplinarity|We on the periphery want our voices to be heard.|
A97|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|A manifesto might not be so useless at this point| making explicit (that is| manifest) a subtle but radical transformation in the definition of what it means to progress.|
A97|RQ1|Objective and Motivation|Solve existing problems and challenges|CHI remains a sideshow. The structure is largely undisturbed. HCI is on autopilot.|
A97|RQ1|Main Guidelines|Adopt new technologies and approaches|Manifestos are the first stop for visionaries.|
A97|RQ1|Main Guidelines|Develop tools and techniques|Throw out sadistic templates.|
A97|RQ1|Main Guidelines|Establish standards and guidelines|Establish new paradigms and break free from institutional hegemony.|
A97|RQ1|Call to Action|Creating a better future|We encourage research motivated by passion and dissent over patents.|
A97|RQ2|Gaps|Lack of practical guidelines for implementing principles|A methodological blind spot has made it hard for HCI to pursue technical and sociopolitical agendas simultaneously.|
A97|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|How can we ensure that this movement defends itself so it can successfully prosecute a transformation?|
A97|RQ2|Gaps|Little discussion of the social and political implications of technology|CHI in particular is a tool that serves to reinforce the political and ideological status quo| favoring sell-out researchers wielding arcane verbiage and p-values.|
A97|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|A manifesto might not be so useless at this point| making explicit (that is| manifest) a subtle but radical transformation.|
A97|RQ3|Relationship with SWeBok|Software architecture|Design tools and interactions people need.|
A97|RQ3|Relationship with SWeBok|Software Quality|Self-reflexivity is important. We are not being self-indulgent or methodologically flawed in writing ourselves into the account of our change-making.|
A97|RQ3|Relationship with SWeBok|Software Security|A methodological blind spot has made it hard for HCI to pursue technical and sociopolitical agendas simultaneously.|
A97|RQ3|Relationship with SWeBok|Software Engineering Economics|We fear for our livelihoods| work when we should be playing.|
A98|RQ1|Principles and Values|User focus|Big business| governments and international intelligence use the digital infrastructure to access private data from the citizens| which means loss of freedom and power for the citizens.|
A98|RQ1|Principles and Values|Collaboration|The BINC Manifesto calls scientists and interested stakeholders to action to identify and document observables| trends| mechanisms and key issues concerning the emerging mainly technology driven societal transition.|
A98|RQ1|Principles and Values|Innovation|The BINC Manifesto is named after the key converging technologies that shape the ongoing changes: the bio-| info-| nano- and cogno (BINC) technologies.|
A98|RQ1|Principles and Values|Openness|The Manifesto is organized around five cross-cutting issues| each formulated as a list of scientific conjectures that can be falsified or verified.|
A98|RQ1|Principles and Values|Ethics and Responsibility|Big business| governments and international intelligence use the digital infrastructure to access private data from the citizens| which means loss of freedom and power for the citizens.|
A98|RQ1|Principles and Values|Change|These new technologies are likely to lead to big changes in society| and these could be as drastic as the differences between the Stone Age and the Bronze Age| or between the agricultural society and the scientific age of industry.|
A98|RQ1|Principles and Values|Artificial intelligence|The converging bio-| info-| nano- and cogno- (BINC) technologies| which are developed everywhere| will transform the world faster than ever before into something we have difficulty imagining.|
A98|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|The transition is likely similar in scale to what we experienced moving from an agriculturally based society to the industrial society| although it will occur at a much faster pace.|
A98|RQ1|Objective and Motivation|Transforming current practices through innovations|The Manifesto calls scientists and interested stakeholders to action to identify and document observables| trends| mechanisms and key issues concerning the emerging mainly technology-driven societal transition.|
A98|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|Economic elites are taking over the political power and democracy is deteriorating. Economic and hence political power gets concentrated on still fewer hands.|
A98|RQ1|Main Guidelines|Address ethical and social issues|Big business| governments and international intelligence use the digital infrastructure to access private data from the citizens| which means loss of freedom and power for the citizens.|
A98|RQ1|Impact and Applicability|Establish standards and guidelines|The Manifesto is organized around five cross-cutting issues| each formulated as a list of scientific conjectures that can be falsified or verified.|
A98|RQ1|Call to Action|Collaborate and share|The BINC Manifesto calls scientists and interested stakeholders to action to identify and document observables| trends| mechanisms and key issues concerning the emerging mainly technology driven societal transition.|
A98|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|There are no global institutions in place that can handle this transformation| nor do we have the necessary legal frameworks and theories.|
A98|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|Established economic theories are inadequate to address the current reality.|
A98|RQ3|Relationship with SWeBok|Software architecture|With Personal Fabrication pretty much anything can be manufactured locally (open source software and hardware).|
A98|RQ3|Relationship with SWeBok|Software Security|Big business| governments and international intelligence use the digital infrastructure to access private data from the citizens| which means loss of freedom and power for the citizens.|
A98|RQ3|Relationship with SWeBok|Software Quality|The Manifesto is organized around five cross-cutting issues| each formulated as a list of scientific conjectures that can be falsified or verified.|
A99|RQ1|Principles and Values|User focus|In 1995| we set out to create an outreach project for novice programmers. (...) We therefore also wanted a pedagogical programming environment for our beginners| not just a re-appropriated power tool for professionals.|
A99|RQ1|Principles and Values|Collaboration|Evaluating the use of such principles must take place in a feedback loop that encompasses more than the compiler for the language. In Racket’s case| the feedback loop’s evaluation stage contains a range of software systems| especially DrRacket| the Racket IDE.|
A99|RQ1|Principles and Values|Innovation|First| programming is about stating and solving problems| and this activity normally takes place in a context with its own language of discourse; good programmers ought to formulate this language as a programming language. Hence| Racket is a programming language for creating new programming languages.|
A99|RQ1|Principles and Values|Openness|If programming is about solving problems in the correct language| systems will necessarily consist of interconnected components in several different languages.|
A99|RQ1|Principles and Values|Ethics and Responsibility|When programmers must resort to extra-linguistic mechanisms to solve a problem| the chosen language has failed them. Even if the fix for such failures is not always obvious| programming language researchers ought to accept the general idea and work to find the proper linguistic mechanisms.|
A99|RQ1|Principles and Values|Process improvement|By implication| Racket must come with mechanisms that enable programmers to protect individual components from their clients.|
A99|RQ1|Principles and Values|Change|By 2010| our dialect of Scheme had evolved so much that we renamed it to Racket to let the world know that we had something different.|
A99|RQ1|Principles and Values|Architecture|Racket is a programming-language programming language.|
A99|RQ1|Objective and Motivation|Transforming current practices through innovations|Racket is about creating new programming languages quickly.|
A99|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|When programmers must resort to extra-linguistic mechanisms to solve a problem| the chosen language has failed them.|
A99|RQ1|Main Guidelines|Develop tools and techniques|Racket is a programming language for creating new programming languages.|
A99|RQ1|Main Guidelines|Establish standards and guidelines|Racket insists on separating the various stages of language processing| particularly enforcing a strict separation of compile-time from run-time code.|
A99|RQ1|Impact and Applicability|Develop tools and techniques|Racket provides a syntax extension system that borrows elements from Scheme’s macro system but also improves on it in several different directions.|
A99|RQ1|Call to Action|Adopt practices and principles|Turning principles into reality almost always yields an incomplete| and possibly even flawed| product. Racket is no exception| but we consider these imperfections as opportunities for future research.|
A99|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Evaluating the use of such principles must take place in a feedback loop that encompasses more than the compiler for the language.|
A99|RQ2|Gaps|Lack of integration between different areas of software engineering|The currently available enforcement mechanisms give rise to a full spectrum of conventional programming languages.|
A99|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|Racket must also broaden its horizon and consider security concerns| both as an enforcement action but also as an application of the third principle.|
A99|RQ3|Relationship with SWeBok|Software architecture|Racket is a programming-language programming language.|
A99|RQ3|Relationship with SWeBok|Software Engineering Models and Methods|Evaluating the use of such principles must take place in a feedback loop that encompasses more than the compiler for the language.|
A99|RQ3|Relationship with SWeBok|Software Quality|The currently available enforcement mechanisms give rise to a full spectrum of conventional programming languages.|
A99|RQ3|Relationship with SWeBok|Software Security|Racket must also broaden its horizon and consider security concerns| both as an enforcement action but also as an application of the third principle.|
A100|RQ1|Principles and Values|User focus|Formal methods are employed during system-development process to improve the quality of the system| to increase the efficiency of the development process| or to derive guarantees about qualities of the system.|
A100|RQ1|Principles and Values|Collaboration|The workshop concentrated mostly on methods for system analysis and verification. These are employed in the design phase as well as in later phases of system development.|
A100|RQ1|Principles and Values|Innovation|Model checking| abstract interpretation| equivalence checking| and verification by deduction – all developed in academia – are the most impressive success stories.|
A100|RQ1|Principles and Values|Ethics and Responsibility|Industrial domains with certification requirements have introduced tools based on formal methods into their development processes.|
A100|RQ1|Principles and Values|Process improvement|The trend to use formal methods will become stronger when certification standards move from process-based assurance to product-based assurance.|
A100|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|There is a clear correlation between the criticality of systems and the costs of failure| on one hand| and the degree to which formal methods are employed in their development| on the other hand.|
A100|RQ1|Objective and Motivation|Solve existing problems and challenges|Different application areas often entail different approaches to the use of formal methods. Safety-critical systems call for the use of sound methods to dogmatically ensure correctness.|
A100|RQ1|Main Guidelines|Establish standards and guidelines|Several current standards for transportation systems highly recommend abstract interpretation and model checking for systems at the highest criticality level.|
A100|RQ1|Impact and Applicability|Ensure security and privacy|The trend to use formal methods will become stronger when certification standards move from process-based assurance to product-based assurance.|
A100|RQ1|Impact and Applicability|Share knowledge|One challenge for further advances is higher degree of automation: the different methods require different degrees of user interaction and of user qualification.|
A100|RQ1|Call to Action|Collaborate and share|Several participants of the workshop have expressed the important role of champions of a formal method.|
A100|RQ2|Gaps|Lack of practical guidelines for implementing principles|Often| a formal method is introduced into industrial practice after a major disaster that it could have prevented from occurring.|
A100|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Critics describe this as 'Clean pipes| dirty water.' The trend to use formal methods will become stronger when certification standards move from process-based assurance to product-based assurance.|
A100|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|Scalability of the methods and tools is still considered a problem. The exploitation of large-scale parallelism may increase the size of verifiable systems.|
A100|RQ3|Relationship with SWeBok|Software architecture|Systems should be designed for verifiability.|
A100|RQ3|Relationship with SWeBok|Software Testing|Testing is still very popular despite C.A.R. Hoare’s statement that it can only prove the existence and not the absence of bugs.|
A100|RQ3|Relationship with SWeBok|Software Quality|Formal methods are employed during system-development process to improve the quality of the system.|
A100|RQ3|Relationship with SWeBok|Software Security|Several current standards for transportation systems highly recommend abstract interpretation and model checking for systems at the highest criticality level.|
A101|RQ1|Principles and Values|Innovation|algorithmic art is its radical form.|
A101|RQ1|Principles and Values|Artificial intelligence|the computer is| indeed| performing acts of interpretation.|
A101|RQ1|Principles and Values|Architecture|the class in algorithmic art also exists as an operational entity of generative power.|
A101|RQ1|Objective and Motivation|Transforming current practices through innovations|the endless thought of our mind assumes definite form in finite descriptions of infinite sets| and such description generates an endless stream of individual works.|
A101|RQ1|Objective and Motivation|Create or improve tools and platforms|the algorithm constituting the class| for each specific setting of its parameters| determines an instance of the class: one work of infinitely many.|
A101|RQ1|Main Guidelines|Share knowledge|we can describe the whole| the class| the algorithm!|
A101|RQ1|Main Guidelines|Establish standards and guidelines|rigorously the class is described by its parameters.|
A101|RQ1|Impact and Applicability|Adapt and evolve|thinking the work forces you to think of sets and classes of works.|
A101|RQ1|Call to Action|Building and strengthening communities|thinking the work forces you to think of sets and classes of works.|
A101|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|the class remains invisible forever but it occasionally appears as one piece or another.|
A101|RQ3|Relationship with SWeBok|Software architecture|the class in algorithmic art also exists as an operational entity of generative power.|
A102|RQ1|Principles and Values|Artificial intelligence|In the AI-oriented view| agents are a way of realising the broader aims of artificial intelligence. Agents are intelligent autonomous systems which combine multiple capabilities| e.g.| sensing| problem-solving and action| in a single system.|
A102|RQ1|Principles and Values|Architecture|On the belief that there is commonality| at least at the architecture level| between agents in widely differing domains| such as autonomous vehicles| healthcare| training simulations| entertainment| etc.|
A102|RQ1|Objective and Motivation|Transforming current practices through innovations|To do so| agent programming languages must become capable of addressing a wider range of problems in a generic way. The good news is that the same developments which pose a threat to the future of agent programming can enable this transition.|
A102|RQ1|Main Guidelines|Adopt new technologies and approaches|At the same time| work on event-driven and reactive programming (e.g.| in robotics) offers similar (or better) functionality to belief triggered plans in agent programming.|
A102|RQ1|Impact and Applicability|Develop tools and techniques|There has also been a considerable amount of work on basic capabilities to support deliberation about which plan to adopt for a goal| and whether a set of intentions can be progressed without conflicts| etc.|
A102|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|The key problem with existing agent platforms is not that they run too slowly| but that the behaviours that can be easily programmed are too limited to make them worth adopting by developers outside the agent programming community.|
A102|RQ3|Relationship with SWeBok|Software architecture|To answer this question| we must first define what it means to ‘achieve flexible intelligent behaviour in dynamic and unpredictable environments’.|
A102|RQ3|Relationship with SWeBok|Software Engineering Models and Methods|An Agent Programming Manifesto represents an attempt to take stock of where we are| what has been achieved| and what key open problems remain.|
A103|RQ1|Principles and Values|Innovation|Actor programming models hold promise to fill this gap| as they possess: (1) well-defined concurrency and asynchronous message passing semantics| and (2) a function-shipping programming paradigm.|
A103|RQ1|Principles and Values|Architecture|The popularity of microservices points to the importance of a modular design as a solution to manage application complexity| scalability and failures.|
A103|RQ1|Principles and Values|Privacy and Security|Actor encapsulation and modularity provide security by ensuring that an actor’s state can only be accessed through its methods| thus localizing security breaches.|
A103|RQ1|Objective and Motivation|Transforming current practices through innovations|By contrast| actor-relational database systems offer a modular| concurrent and fault-tolerant programming model and can thus cater to these application needs in a manner that is both more natural and better integrated with data management functionality.|
A103|RQ1|Objective and Motivation|Solve existing problems and challenges|The increasing adoption of scalable actor runtimes such as Akka| Erlang and Orleans to deploy these services points towards the attractiveness of actor programming models for designing these applications.|
A103|RQ1|Main Guidelines|Develop tools and techniques|Actor-relational database systems hold promise to provide abstractions to manage cross-actor heterogeneity under a unified database programming model.|
A103|RQ1|Impact and Applicability|Adapt and evolve|However| actor runtimes shift the responsibility for correct state management under failures to the programmer| which complicates application development and lowers developer productivity.|
A103|RQ1|Call to Action|Adopt new technologies and approaches|With increasing pervasiveness of software services| security challenges faced by these services continue to grow dramatically. These challenges include issues pertaining to data integrity| access control| authorization| monitoring and auditing of these services.|
A103|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|The traditional security model based on users and roles can be augmented in actor-relational database systems with object-capability security| aiding in monitoring information flow on message passing.|
A103|RQ3|Relationship with SWeBok|Software architecture|Actor-relational database systems provide robust state management guarantees as well as high-level data model and queries| bringing physical data independence to the actor programming model.|
A103|RQ3|Relationship with SWeBok|Software Security|To address these problems| a call has been made to integrate classical database state management functionality in an actor runtime.|
A104|RQ1|Principles and Values|User focus|Astronomical software is now a fact of daily life for all hands-on members of the astronomy and astrophysics community.|
A104|RQ1|Principles and Values|Collaboration|We should encourage interdisciplinary cooperation with like-minded and algorithmically sophisticated members of the computer science community| for both research and education/outreach purposes.|
A104|RQ1|Principles and Values|Innovation|We advocate that: (1) the astronomical community consider software as an integral and fundable part of facility construction and science programs.|
A104|RQ1|Principles and Values|Openness|We argue that the astronomical community’s increasing dependence on software and analysis requires that it come to see software as an integral part of its scientific practice.|
A104|RQ1|Principles and Values|Ethics and Responsibility|We should develop institutional support for science programs that attract and support talented scientists who generate software for public release.|
A104|RQ1|Principles and Values|Process improvement|We argue that the astronomical community’s increasing dependence on software and analysis requires that it come to see software as an integral part of its scientific practice.|
A104|RQ1|Principles and Values|Change|At a fundamental level| the astronomical community needs to change its culture to reflect that we are software dependent and that creation| release and maintenance of astronomical software is an integral and valuable part of our enterprise.|
A104|RQ1|Principles and Values|Artificial intelligence|We should encourage interdisciplinary cooperation with like-minded and algorithmically sophisticated members of the computer science community.|
A104|RQ1|Principles and Values|Privacy and Security|The community should consider how best to link publications to released electronic products; printing web addresses in papers is prone to link rot.|
A104|RQ1|Principles and Values|Sustainability|Providing a stable career path for scientists with these skills would benefit a wide range of projects and future surveys.|
A104|RQ1|Principles and Values|Architecture|Software release should be an integral and funded part of astronomical projects.|
A104|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|We argue that the astronomical community’s increasing dependence on software and analysis requires that it come to see software as an integral part of its scientific practice.|
A104|RQ1|Objective and Motivation|Transforming current practices through innovations|We should create more opportunities to fund grass-roots software projects of use to the wider community| whether through existing grants programs or new calls.|
A104|RQ1|Objective and Motivation|Emphasis on collaboration and interdisciplinarity|We should encourage interdisciplinary cooperation with like-minded and algorithmically sophisticated members of the computer science community| for both research and education/outreach purposes.|
A104|RQ1|Objective and Motivation|Criticism of the current situation and the need for cultural change|At a fundamental level| the astronomical community needs to change its culture to reflect that we are software dependent and that creation| release and maintenance of astronomical software is an integral and valuable part of our enterprise.|
A104|RQ1|Objective and Motivation|Solve existing problems and challenges|Software release should be an integral and funded part of astronomical projects.|
A104|RQ1|Main Guidelines|Adopt new technologies and approaches|Borrowing from technology developed in the open source movement| we should create an open central repository location at which authors can release software and documentation.|
A104|RQ1|Main Guidelines|Develop tools and techniques|We should create more opportunities to fund grass-roots software projects of use to the wider community.|
A104|RQ1|Main Guidelines|Establish standards and guidelines|The community should consider how best to link publications to released electronic products.|
A104|RQ1|Impact and Applicability|Adopt new technologies and approaches|Borrowing from technology developed in the open source movement| we should create an open central repository location at which authors can release software and documentation.|
A104|RQ1|Impact and Applicability|Promote collaboration and communication|We should encourage interdisciplinary cooperation with like-minded and algorithmically sophisticated members of the computer science community.|
A104|RQ1|Call to Action|Collaborate and share|Borrowing from technology developed in the open source movement| we should create an open central repository location at which authors can release software and documentation.|
A104|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Publishing methods articles is generally not a good bet. A junior person who develops software such as a pipeline is well advised not to publish on it| but to write science-result papers instead| reflecting the current value system of the community.|
A104|RQ2|Gaps|Little discussion of the social and political implications of technology|Recognizing the disincentives to software work and its release as a problem and addressing it does not mean throwing money at it by increasing the size of programming teams.|
A104|RQ2|Gaps|Lack of integration between different areas of software engineering|We should encourage interdisciplinary cooperation with like-minded and algorithmically sophisticated members of the computer science community| for both research and education/outreach purposes.|
A104|RQ3|Relationship with SWeBok|Software architecture|Software release should be an integral and funded part of astronomical projects.|
A104|RQ3|Relationship with SWeBok|Software Quality|We argue that the astronomical community’s increasing dependence on software and analysis requires that it come to see software as an integral part of its scientific practice.|
A104|RQ3|Relationship with SWeBok|Software Security|The community should consider how best to link publications to released electronic products; printing web addresses in papers is prone to link rot.|
A105|RQ1|Principles and Values|Collaboration|Jabbari et al. [1] conducted an empirical study across the scientific literature and found a recurring set of concepts| principles| and philosophies which form the common ground of what DevOps actually is. Its core principles include| (a) an emphasis on communication and collaboration.|
A105|RQ1|Principles and Values|Process improvement|This paper goes several steps further. We distinguish between the raw data (analogous to the “source” of the corpus) which can be collaboratively maintained using SCM| and the corpus release| automatically packaged for distribution in a 'ready-to-use' form| so that the latest version is always available.|
A105|RQ1|Principles and Values|Openness|Those in the research community who have worked with a given corpus are bound to have uncovered such mistakes or idiosyncrasies| but there is rarely a public platform to discuss them and share solutions or patches.|
A105|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Unlike enterprise programmers| we researchers tend to work in small groups or alone| on several projects at a time| but nevertheless| many of us already use one or more of the tools and ideas that DevOps promotes.|
A105|RQ1|Main Guidelines|Establish standards and guidelines|By leveraging DevOps concepts and tools designed for efficient resolution and retrieval of dependencies from software repositories| we can obtain| cache| and process speech corpora automatically.|
A105|RQ1|Impact and Applicability|Develop tools and techniques|We provide a portable| lightweight implementation of this convention in the form of a Gradle plugin. Using this plugin| the data is retrieved from the hosting website| cached locally| and processed to package or convert the data and metadata.|
A105|RQ1|Call to Action|Collaborate and share|Researchers or developers working with speech corpora can be described as 'users' of these corpora. If they enhance the metadata by creating new and useful annotations| or correct any errors they find during their work| they can become contributors by providing their modifications back to the corpus developers.|
A105|RQ2|Gaps|Lack of practical guidelines for implementing principles|A conventional speech corpus tends to come in the form of one or more compressed archives (e.g.| zip files)| downloaded or copied by hand from some webpage or network share. The structure of these packages is often arbitrary| making it tedious to use efficiently.|
A105|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|There is rarely a public platform to discuss mistakes or share solutions| and often enough| the creators of a given corpus have long moved on to different institutions| with no central entity to maintain it| fix mistakes| and publish updated versions.|
A105|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|We distinguish between the raw data (analogous to the 'source' of the corpus) which can be collaboratively maintained using SCM| and the corpus release| automatically packaged for distribution in a 'ready-to-use' form| so that the latest version is always available.|
A105|RQ3|Relationship with SWeBok|Software architecture|A corpus in such a form can be used efficiently as a dependency of a given project or experiment. By leveraging DevOps concepts and tools designed for efficient resolution and retrieval of dependencies from software repositories| we can obtain| cache| and process speech corpora automatically.|
A105|RQ3|Relationship with SWeBok|Software Engineering Management|The development lifecycle can include steps to retrieve software dependencies| compile the source code| process resources| run tests and report the outcome| package the relevant contents| and publish the package to one or more repositories or websites.|
A105|RQ3|Relationship with SWeBok|Software Quality|Ideally| a ready-to-use speech corpus should be portable using standard container formats supported by open software programs on any operating system| efficient compressed to save space| and self-documenting including all relevant metadata.|
A106|RQ1|Principles and Values|Collaboration|The Scientific Reform Movement has highlighted the need for large research teams with diverse skills. This has necessitated the growth of professional team infrastructure roles (TIRs) who support research through specialised skills| but do not have primary responsibility for conceiving or leading research projects.|
A106|RQ1|Principles and Values|Ethics and Responsibility|If we seek to actualise the reform and ambitions of motions such as the San Francisco Declaration on Research Assessment (DORA| 2012)| we must acknowledge that there is significant scope to modernise the culture and tools we use to recognise and reward contributions.|
A106|RQ1|Objective and Motivation|Transforming current practices through innovations|An appropriate next stage will be the evaluation of costs and practicality of each intervention in supporting immediate or long-term change| with iterative piloting and refinement towards the idealised vision.|
A106|RQ1|Main Guidelines|Develop tools and techniques|For example| even with Digital Object Identifiers (DOI) emerging as a de facto standard| a DOI generated using Zenodo is only recorded as a citation if it is properly indexed| which is currently not always the case.|
A106|RQ1|Impact and Applicability|Adapt and evolve|These proposals are offered at a time of increasing focus on increasing support for the open dissemination of research outputs| calls to improve the broader culture of academia| and improving the bureaucratic efficiency of academia.|
A106|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Limited formalisation of career pathways: Many TIR careers lack development pathways. This is in contrast to academic research careers| where the criteria for promotion up to the highest levels are well documented| clearly advertised| and often supported by formal and informal systems of mentoring.|
A106|RQ3|Relationship with SWeBok|Software architecture|Standardised roles and pathways for career development: Professionalisation also improves the integration of TIRs within research organisational structures.|
A107|RQ1|Principles and Values|Collaboration|The workshop studied different visions and different approaches to the development and management of different kinds of complex systems.|
A107|RQ1|Principles and Values|Innovation|MDE may provide the right level of abstraction to move the study of complex systems from an informal goal to more concrete grounds.|
A107|RQ1|Principles and Values|Change|A CBCS is constantly in evolution with a past history| a present| and a future.|
A107|RQ1|Principles and Values|Architecture|A CBCS has a structure (or static architecture) and a dynamic behaviour.|
A107|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|There are currently few engineering methods and tools to deal with them in practice.|
A107|RQ1|Objective and Motivation|Transforming current practices through innovations|Managing the accidental complexity accumulated by many layers of technological legacy is an important challenge in the management of CBCSs.|
A107|RQ1|Main Guidelines|Address ethical and social issues|Managing a CBCS means observing| understanding| and controlling it.|
A107|RQ1|Impact and Applicability|Adapt and evolve|The evolution is permanent| i.e. the CBCS usually never stops| even when some parts are added| removed exchanged or under maintenance or repair.|
A107|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|Finally| the challenges of verification and validation of CBCS on an industrial scale were summarized and led to much debate that linked in to earlier discussions.|
A107|RQ2|Gaps|Lack of practical guidelines for implementing principles|There was also discussion on industrial needs for MDE and CBCS. Participants discussed the benefits from having process support for MDE of CBCS.|
A107|RQ3|Relationship with SWeBok|Software architecture|A CBCS has a structure (or static architecture) and a dynamic behaviour.|
A107|RQ3|Relationship with SWeBok|Software Quality|The feeling was that individual verification technology (such as model checking| static analysis| or theorem proving) was insufficient and that integrated tool chains and workbenches for MDE were needed.|
A108|RQ1|Principles and Values|User focus|Maintaining some of these systems’ functions will be crucial to many functions in society| such as various infrastructure like transport systems| communications systems| and healthcare.|
A108|RQ1|Principles and Values|Collaboration|Currently| there is limited knowledge on how existing management logic changes as systems become increasingly complex| intelligent and when management takes place in the context of ecosystems that consist of different types of actors.|
A108|RQ1|Principles and Values|Innovation|The emergence of ecosystems for dynamic and intelligent platform-based systems overthrows traditional principles of organizational design.|
A108|RQ1|Principles and Values|Openness|This can be considered as a paradigm shift in management| as existing management principles| methods| processes and decision making are based on bounded rationality.|
A108|RQ1|Principles and Values|Ethics and Responsibility|This creates an important management challenge| as generativity many times relies on more difficult-controlled and fuzzy innovation processes| while criticality requires control in the innovation process.|
A108|RQ1|Principles and Values|Process improvement|The fast pace of technology developments urges management research to address the future related management challenges more proactively.|
A108|RQ1|Principles and Values|Change|This development has potentially major consequences for organizations that develop| provide| and utilize future complex and intelligent systems.|
A108|RQ1|Principles and Values|Artificial intelligence|Wallenberg AI| Autonomous Systems and Software Program (WASP) is Sweden’s largest individual research program ever| a major national initiative for strategically motivated basic research| education and faculty recruitment.|
A108|RQ1|Objective and Motivation|Responding to emerging challenges and opportunities|Maintaining some of these systems’ functions will be crucial to many functions in society| such as various infrastructure like transport systems| communications systems| and healthcare.|
A108|RQ1|Objective and Motivation|Transforming current practices through innovations|New perspectives on the links between the system architecture and the organization need to be developed as a result of the emergence of ecosystems.|
A108|RQ1|Main Guidelines|Address ethical and social issues|Research in this area can contribute to the successful combination of these two contrasting logics.|
A108|RQ1|Impact and Applicability|Adapt and evolve|The ongoing extensive research on systems and technologies for complex intelligent systems creates a unique possibility to proactively address the management challenges.|
A108|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Currently| there is limited knowledge on how existing management logic changes as systems become increasingly complex| intelligent and when management takes place in the context of ecosystems that consist of different types of actors.|
A108|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|This creates an important management challenge| as generativity many times relies on more difficult-controlled and fuzzy innovation processes| while criticality requires control in the innovation process.|
A108|RQ3|Relationship with SWeBok|Software architecture|New perspectives on the links between the system architecture and the organization need to be developed as a result of the emergence of ecosystems| new types of layered system architectures| the intelligent evolution of systems.|
A109|RQ1|Principles and Values|User focus|Supporting the Inclusive Web: Datafication of businesses may make unfair practices of enterprises more visible. Society is less willing to accept these and expects companies to take advantage of available data and make their businesses more inclusive.|
A109|RQ1|Principles and Values|Collaboration|The interdisciplinary capacity of Web Science is critical to all the endeavours described in Sections 1–4. Without well-developed interdisciplinary collaboration that draws together all the necessary forms of expertise| we cannot expect this to succeed.|
A109|RQ1|Principles and Values|Innovation|Challenge – Tooling: Leverage AI tools for Web Science.|
A109|RQ1|Principles and Values|Ethics and Responsibility|How do we ensure that Web technologies are ethical? That they are designed and implemented in ways that take into account potential harms?|
A109|RQ1|Principles and Values|Privacy and Security|The GDPR regulates the processing of personal data| and its first top-level aim is to protect the fundamental rights and freedoms of natural persons.|
A109|RQ1|Objective and Motivation|Transforming current practices through innovations|In hybrid human-agent environments| often unexpected situations arise that may require affirmative or corrective actions.|
A109|RQ1|Objective and Motivation|Changing culture and practices|Supporting Interdisciplinarity: As yet| we do not have a 'joined up' approach to Web related policies across governments.|
A109|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|We explain issues that society faces in the Web by the ambivalences that are inherent in the Web. All the enormous benefits that the Web offers will always carry along negative consequences.|
A109|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|Web Science must engage with multiple and often competing stakeholders.|
A109|RQ3|Relationship with SWeBok|Software Requirements|Educators must not be left alone with solving the issue of teaching Web literacy. Programs must be developed that educate about consumption in and of the Web| about contribution to the Web| and about related aspects from technology to data analytics.|
A109|RQ3|Relationship with SWeBok|Software architecture|We outline the need to extend Web Science as the science that is devoted to the analysis and engineering of the Web| to strengthen our role in shaping the future of the Web.|
A109|RQ3|Relationship with SWeBok|Software Security|Privacy violations can result from the mathematical-technical aspects of the Web as a communication medium.|
A110|RQ1|Principles and Values|Innovation|The 12 factors is an approach that helps programmers write modern apps in a declarative way| using clear contracts deployed via cloud.|
A110|RQ1|Principles and Values|Process improvement|To help avoid software erosion costs|
A110|RQ1|Principles and Values|Architecture|The 12-factor app methodology has emerged to handle the dissonance between traditional app development and modern cloud solutions.|
A110|RQ1|Objective and Motivation|Transforming current practices through innovations|This group considers the methodology a triangulation of: Ideal practices to support app development| The dynamics that occur as an app grows organically| The relationship and collaboration between codebase developers.|
A110|RQ1|Objective and Motivation|Solve existing problems and challenges|To raise awareness of systemic problems they’ve observed in modern app development.|
A110|RQ1|Main Guidelines|Adopt new technologies and approaches|12-factor apps must always be independent from additional applications. Every function should be its own process—in full isolation.|
A110|RQ1|Main Guidelines|Develop tools and techniques|Make sure that app-specific libraries are available. Verify shelling out to the OS. Verify that needed system libraries| like curl or ImageMagick| are available.|
A110|RQ1|Main Guidelines|Share knowledge|Unlike monolithic and traditional apps that store log information in a file| this principle maintains that you should stream logs to a chosen location—not simply dump them into a log file.|
A110|RQ1|Impact and Applicability|Establish standards and guidelines|A 12-factor app is strict about separating the three stages of building| releasing| and running.|
A110|RQ1|Call to Action|Adopt new technologies and approaches|A true 12-factor app is designed for scaling. Build your applications so that scaling in the cloud is seamless.|
A110|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|There should be only the slightest difference between development and production environments. A vast difference may lead to unintended compatibility issues.|
A110|RQ3|Relationship with SWeBok|Software architecture|A 12-factor app must always be independent from additional applications. Every function should be its own process—in full isolation.|
A110|RQ3|Relationship with SWeBok|Software Construction|Your code base should have a logical version control system that’s easy to understand. Every deployment should have its own code repository.|
A110|RQ3|Relationship with SWeBok|Software Configuration  Management|An application and its configuration should be completely independent. Further| storing configs constantly in code should be avoided entirely.|
A110|RQ3|Relationship with SWeBok|Software Engineering Process|A 12-factor app is strict about separating the three stages of building| releasing| and running.|
A111|RQ1|Principles and Values|Innovation|Software development typically involves the automation of known tasks| which| almost by definition| involves an incremental innovation.|
A111|RQ1|Principles and Values|Ethics and Responsibility|The rule of free competition is needed for the applied know-how embodied in these products... should be tailored to ensure that it will not impede competition any more than is necessary to correct the market failure it addresses.|
A111|RQ1|Principles and Values|Architecture|An appropriate legal regime for protecting the know-how embodied in computer programs should be geared to protection of the true sources of value in software: behavior| the industrial designs that produce behavior| and conceptual metaphors.|
A111|RQ1|Objective and Motivation|Solve existing problems and challenges|Our goal was to concentrate on a workable solution to the most serious problems confronting the software industry| and to avoid getting distracted by the difficult questions presented by marginal cases.|
A111|RQ1|Objective and Motivation|Improve or propose new technologies| approaches and methods|The idea of constructing one legal regime that could protect all aspects of software might be attractive from a theoretical standpoint. [...] Any new legal regime should supplement protection available from existing legal regimes without overlapping with them.|
A111|RQ1|Main Guidelines|Establish standards and guidelines|The regime should make legal distinctions that are technically coherent. The regime should also encourage disclosure and dissemination of program know-how| facilitating improvements| and new applications.|
A111|RQ1|Main Guidelines|Address ethical and social issues|There is a strong societal interest in permitting the use of publicly accessible technical information that is unprotected by patent or copyright law.|
A111|RQ1|Main Guidelines|Consider context and application|Derivative uses of the innovation in remote markets might be blocked for a shorter period of time| or might be subject to an automatic license.|
A111|RQ1|Call to Action|Challenge the status quo|Existing legal regimes are structurally unsuited to providing an appropriate degree of protection to compiled know-how lying on or near the face of software products.|
A111|RQ1|Call to Action|Creating a better future|A market-oriented legal regime should find a way to spur valuable innovation| independent of whether its developer embodies it in a successful product.|
A111|RQ1|Call to Action|Adopt practices and principles|A market-oriented legal regime should create incentives for an innovator and someone who wants to use the innovation to reach agreement| rather than to litigate.|
A111|RQ2|Gaps|Lack of practical guidelines for implementing principles|No legal regime can solve all problems [â€¦] Our goal was to concentrate on a workable solution to the most serious problems.|
A111|RQ2|Gaps|Little discussion of the social and political implications of technology|The rule of free competition is needed [â€¦] to correct the market failure.|
A111|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|Existing legal regimes are structurally unsuited to providing an appropriate degree of protection to compiled know-how lying on or near the face of software products.|
A111|RQ3|Relationship with SWeBok|Software architecture|The know-how embodied in computer programs should be geared to protection of the true sources of value in software: behavior| the industrial designs that produce behavior.|
A111|RQ3|Relationship with SWeBok|Software Engineering Professional Practice|Developers routinely make agreements with royalty provisions when they want to package another firmâ€™s product along with theirs.|
A112|RQ1|Principles and Values|Innovation|Agent technologies [...] are now being realised by agent technologies| which are already providing dramatic and sustained benefits in several business and industry domains.|
A112|RQ1|Principles and Values|Change|Improvements on the traditional computing models and paradigms are required.|
A112|RQ1|Principles and Values|Artificial intelligence|Agents must therefore learn from| and adapt to| their environment. [...] Multi-agent learning becomes crucial in such domains.|
A112|RQ1|Principles and Values|Architecture|Agent architectures are the fundamental engines underlying the autonomous components that support effective behaviour in real-world| dynamic and open environments.|
A112|RQ2|Gaps|Lack of practical guidelines for implementing principles|At present| many existing agent applications are developed in an ad hoc fashion| following little or no rigorous design methodology.|
A112|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Most developments are still largely at the prototype stage. There are experiments and some case-studies but these have been ad hoc rather than methodical and systematic in testing.|
A112|RQ3|Relationship with SWeBok|Software architecture|Agent architectures [...] range from purely reactive [...] to more deliberative agents that reason about their actions| such as the class of belief-desire-intention (BDI) agents.|
A112|RQ3|Relationship with SWeBok|Software Design|Agent-oriented software engineering [...] has a strong emphasis on practical use in industry.|
A112|RQ3|Relationship with SWeBok|Software Maintenance|Software is updated at the component-level| at runtime| providing a level of dynamism and flexibility that goes far beyond current release policies.|
A113|RQ1|Principles and Values|Ethics and Responsibility|It is important to think through the ethics of code: how should the world be captured in code to minimize negative impacts| and how might code do work in the world that is beneficial to the largest number of people?|
A113|RQ1|Principles and Values|Openness|Software studies differs from these other fields in that it focuses analysis explicitly on the conceptual nature| and productive capacity of software| and its work in the world| from a critical social scientific and cultural perspective.|
A113|RQ1|Principles and Values|Architecture|Software is both a product and a process. As we detailed in chapter 2| software is the product of a sociotechnical assemblage of knowledge| governmentality| practices| subjectivities| materialities| and the marketplace| embedded within contextual| ideological| and philosophical frames.|
A113|RQ1|Principles and Values|Sustainability|Forgetting allows people to be fallible| to evolve their social identities| to live with their conscience [...] This is why we suggest that a society with software systems that never forget and forgive has the potential to become a totalitarian regime.|
A113|RQ2|Gaps|Little discussion of the social and political implications of technology|What would it mean to live in a society where there is a permanent and lifelong record of all manner of actions| deeds| and misdemeanors? To date| these kinds of questions have largely been avoided by many technologists.|
A113|RQ2|Gaps|Lack of practical guidelines for implementing principles|There is much research and appraisal to be done in terms of working through how to conceptualize code and its work. It seems to us that there is a critical need for more detailed ethnographic studies of how developers produce code.|
A113|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|There has not been enough detailed comparative exploration of the discursive regime of different software products and system configurations in separate locations.|
A113|RQ3|Relationship with SWeBok|Software architecture|We have noted that code alters everyday spatiality because it has technicity to alternatively modulate how space unfolds. In addition| we have explored how code reconfigures governance because it enables new modes of regulation and automated management.|
A113|RQ3|Relationship with SWeBok|Software Quality|Code makes a difference to the nature of objects because it imbues them with the capacity to do additional and new types of work.|
A113|RQ3|Relationship with SWeBok|Software Engineering Models and Methods|We believe it would be instructive to conduct a detailed archeology of how algorithms come to be constructed â€” to excavate the social lives of ideas into code â€” and how an algorithm then translates and mutates across projects to be reemployed in diverse ways.|
A114|RQ1|Principles and Values|Innovation|We assert that proofs using the computational method| also known as computer aided proofs| are here to stay.|
A114|RQ1|Principles and Values|Process improvement|Less time is wasted| and more problems can be solved in a shorter amount of time.|
A114|RQ1|Principles and Values|Change|We take the bold step of naming this general paradigm for proving theorems. We call it the computational method.|
A114|RQ1|Objective and Motivation|Solve existing problems and challenges|Use of the computational method allows the researcher to concentrate on understanding the structure of the problem.|
A114|RQ1|Objective and Motivation|Improve or propose new technologies| approaches and methods|We show a 1.44127-competitive randomized algorithm for two machine multiprocessor scheduling with rejection| improving on the previously known upper bound of 1.5.|
A114|RQ1|Main Guidelines|Establish standards and guidelines|Some guidelines should be established to ensure that proofs via the computational method are rigorous.|
A114|RQ1|Main Guidelines|Consider context and application|We illustrate the usefulness of the method by analyzing a randomized algorithm for multi-processor scheduling with rejection.|
A114|RQ1|Call to Action|Challenge the status quo|We shall take the outrageous position of defending computer assisted proofs.|
A114|RQ1|Call to Action|Creating a better future|Hopefully all goes well and the theorem is proven.|
A114|RQ3|Relationship with SWeBok|Software Engineering Models and Methods|This method seems to be especially useful in theoretical computer science. Our goal is to bound the cost incurred when a given algorithm encounters an input.|
A115|RQ1|Principles and Values|Openness|Explainability is considered as a component of transparency| together with traceability and communication.|
A115|RQ2|Gaps|Lack of integration between different areas of software engineering|XAI-based systems need to start from modeling the biomedical and clinical domain in order to obtain a true understanding of the context in which these systems will be used.|
A115|RQ3|Relationship with SWeBok|Software Requirements|Functional specifications obtained from deep analysis of the problem domain and users should determine when explainability and interpretability are required.|
A116|RQ1|Principles and Values|Collaboration|Collaboration over individual accomplishment. Experience with collaborative work also prepares students to work effectively in teams.|
A116|RQ1|Principles and Values|Process improvement|Continuous improvement over the maintenance of current practices.|
A116|RQ3|Relationship with SWeBok|Software Engineering Process|Scrum| story card writing| social contracts| product backlogs| burn-down charts| daily stand-ups and retrospectives â€“ in our own classrooms.|
A116|RQ3|Relationship with SWeBok|Software Quality|Agile techniques enhanced the quality of their class project deliverables.|
A117|RQ1|Principles and Values|Collaboration|We understand the importance of collaboration between development team and the client. This focus on the client is often missing in education.|
A117|RQ1|Principles and Values|Process improvement|The most important principle in agile is to take continuous feedback| learn from the previous iterations and try and improve in the next iteration.|
A117|RQ1|Principles and Values|Ethics and Responsibility|Teachers could then spend more time solving difficulties of the students than lecturing.|
A117|RQ3|Relationship with SWeBok|Software Engineering Process|Evaluation could be done continuously in small increments to avoid few big-bang evaluations scheduled at periodic intervals.|
A118|RQ1|Principles and Values|Collaboration|Developers| and the clients| must work closely together| collaboratively| and must recognise each othersâ€™ abilities and knowledge.|
A118|RQ3|Relationship with SWeBok|Software Engineering Management|Project management must be people-management| first and foremost.|
A119|RQ1|Principles and Values|Change|Scenario 3 assumes that the universities respond constructively to a wide variety of environmental threats and opportunities| rather than denying their existence until a crisis develops.|
A119|RQ1|Principles and Values|Innovation|Faculty career tracks typically divide along the following lines: Research track| Technology track| each with distinct goals and evaluation metrics.|
A119|RQ3|Relationship with SWeBok|Software Engineering Professional Practice|Practitioners are happier because IS programs are producing graduates with up-to-date technology skills as well as organizational skills.|
A120|RQ3|Relationship with SWeBok|Software Requirements|By using frameworks that explicitly model assumptions about the application domain and the implementation environment| automated tools can analyze models for flaws and transform them into implementations.|
A121|RQ1|Principles and Values|User focus|ACI aims to develop a user-centered approach| informed by the best available knowledge of animalsâ€™ needs and preferences| to the design of technology meant for animal use.|
A121|RQ1|Principles and Values|Collaboration|We could form collaborations with researchers from disciplines such as ethology| behavioral medicine| animal psychology| and veterinary| agricultural| and environmental engineering to help us with this mapping effort.|
A121|RQ1|Principles and Values|Innovation|ACI could expand the horizon of user-computer interaction research by pushing our imagination beyond the boundaries of human-computer interaction.|
A121|RQ1|Principles and Values|Ethics and Responsibility|ACI takes a non-speciesist approach to research| and researchers have a responsibility to acknowledge and respect the characteristics of all species participating in the research without discriminating against any of them.|
A121|RQ1|Principles and Values|Process improvement|We could start adapting| developing| and integrating ACI design protocols and methodsâ€”for example| for requirements elicitation| participatory design| and contextual evaluation| in a loop between empirical work and theoretical reflection.|
A121|RQ1|Principles and Values|Change|The time has come to acknowledge the elephant| to start talking about ACI as a discipline in its own right| and to start working toward its systematic development.|
A121|RQ1|Principles and Values|Sustainability|ACI could improve the economic and ethical sustainability of food productionâ€”for example| by informing the design of technology that affords farm animals more freedom and autonomy.|
A121|RQ2|Gaps|Lack of practical guidelines for implementing principles|How do we elicit requirements from a nonhuman participant? How do we involve them in the design process? How do we evaluate the technology we develop for them?|
A121|RQ2|Gaps|Little discussion of the social and political implications of technology|The study of how they are adopted by or affect their users remains fundamentally outside the remit of user-computer interaction research.|
A121|RQ2|Gaps|Lack of integration between different areas of software engineering|ACI has so far been driven by academic disciplines other than computer science or by other industrial sectors.|
A121|RQ3|Relationship with SWeBok|Software Requirements|We could look at human-centered interaction design protocols and methods to assess which ones may or may not be relevant to an animal-centered design process.|
A121|RQ3|Relationship with SWeBok|Software Design|We could start developing theoretical models of ACI| which would then drive further research.|
A121|RQ3|Relationship with SWeBok|Software Quality|ACI could support conservation effortsâ€”for example| by informing the design of monitoring devices that minimize the impact on the animals while maximizing the quality and reliability of the data gathered through them.|
A122|RQ1|Principles and Values|Collaboration|Group collaboration requires a high degree of flexibility and malleability in the systems that support the work.|
A122|RQ1|Principles and Values|Architecture|A cooperative information system is not a collection of databases| applications| and interfaces. Rather| it is an architectural framework which maintains consistency among a variety of computer-based systems| user groups| and organizational objectives as they all evolve over time.|
A122|RQ1|Principles and Values|Process improvement|To deal effectively with change| one has to establish the change vision in a given technical| social| and organizational context.|
A122|RQ1|Principles and Values|Change|Supporting cooperation requires the system to be capable of reflecting both the changes that are decided for its performances and the continuously ongoing changes of the practices of its members.|
A122|RQ2|Gaps|Lack of integration between different areas of software engineering|Information systems technology| computer-supported cooperative work practice| and organizational modeling and planning theories have evolved with only accidental contact to each other.|
A122|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|It is continuous organizational and technological change that makes cooperative information systems a challenge.|
A122|RQ3|Relationship with SWeBok|Software architecture|We propose a generic architecture for cooperative information systems intended to support the rapid construction and evolution on top of existing organizational and technical legacy.|
A122|RQ3|Relationship with SWeBok|Software Design|Technologies for building repositories of network-linked objects| and mechanisms for partitioning applications and architectures are emerging to provide network interfaces.|
A122|RQ3|Relationship with SWeBok|Software Quality|System cooperation now imposes a series of new requirements concerning the modeling and representation of higher level functions... and the allocation of system resources to their execution.|
A123|RQ1|Principles and Values|Process improvement|Systems integration typically starts as ad-hoc guesswork that progresses haphazardly via probes to characterize system behavior and expand the area of correct behavior.|
A123|RQ1|Principles and Values|Change|Supporting cooperation requires the system to be capable of reflecting both the changes that are decided for its performances and the continuously ongoing changes of the practices of its members.|
A123|RQ1|Principles and Values|Architecture|Architectural investigations include the critique of firewalls as imperfect yet necessary abstractions for system modularity and fault isolation.|
A123|RQ2|Gaps|Lack of practical guidelines for implementing principles|Few misguided souls attempt to create that complete set of 'shall not' requirements because the effort is futile. One may as well specify that 'the application shall never crash'.|
A123|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Where baselining can go wrong may be presented in the following scenario: Subsystem A at integration site X does not match its twin at developer site Y.|
A123|RQ2|Gaps|Little discussion of the social and political implications of technology|Where the fact of testing can be used against a corporation in a court of law as evidence of knowledge of potential harm... rules of liability imply test results should be limited or hidden.|
A123|RQ3|Relationship with SWeBok|Software architecture|The efficiency of systems integration is affected by architectural design flaws| including mismatches in subsystem expectations and undefined interface behaviors.|
A123|RQ3|Relationship with SWeBok|Software Quality|Debugging efforts can be undermined by intermittent faults| corrupted state| and the lack of repeatability â€” all of which affect software quality metrics.|
A123|RQ3|Relationship with SWeBok|Software Engineering Process|Systems integration is described as an iterative process involving system baselining| fault characterization| correction cycles| and verification.|
A124|RQ1|Principles and Values|User focus|These studies and reflections highlight the maturity reached in XAI research| signifying that it is open to debates about its development and usefulness.|
A124|RQ1|Principles and Values|Collaboration|By fostering collaborative discussion and interdisciplinary cooperation| we aim to propel XAI forward| contributing to its continued success.|
A124|RQ1|Principles and Values|Innovation|Generative AI models| such as those employed for diffusion denoising or the family of GPT models for large-scale language generation| are disrupting many sectors.|
A124|RQ1|Principles and Values|Openness|A broader| multidisciplinary approach that draws on the expertise of researchers across different fields can bring about advances towards a new paradigm in XAI research.|
A124|RQ1|Principles and Values|Ethics and Responsibility|Explainability is considered one of the four ethical principles for trustworthy AI| together with respect for human autonomy| the prevention of harm| and fairness.|
A124|RQ1|Principles and Values|Process improvement|This research manuscript addresses this need by bringing together a wide range of experts to collaboratively identify and tackle open problems in XAI research.|
A124|RQ1|Principles and Values|Change|This work supports the compliance of AI-based systems with regulation in high-risk scenarios as considered in the EU AI Act.|
A124|RQ1|Principles and Values|Artificial intelligence|The field of Explainable AI (XAI) has grown significantly over the past few years... it is now a research topic in a broad range of disciplines.|
A124|RQ1|Principles and Values|Privacy and Security|Differential privacy mechanisms could be used to generate explanations to minimize the risk of revealing sensitive information.|
A124|RQ1|Principles and Values|Sustainability|XAI methods have been applied in environmental science and agriculture to estimate forest carbon storage and inform forest management decisions.|
A124|RQ1|Principles and Values|Architecture|Attention mechanisms could be exploited with a variety of established techniques| including attention flow and rollout| LRP adaptation| or attention memory.|
A124|RQ2|Gaps|Lack of practical guidelines for implementing principles|There are too few empirical studies on the effectiveness of explanations.|
A124|RQ2|Gaps|Little discussion of the social and political implications of technology|The explainability of these systems is not only a technological issue but boils down to medical| legal| ethical| and societal questions that need careful consideration.|
A124|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|It is still unclear how XAI methods should be evaluated| how different terms should be used in the debate.|
A124|RQ2|Gaps|Lack of integration between different areas of software engineering|Research on explainability often fails to incorporate insights from research disciplines outside of computer science.|
A124|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|These studies and reflections highlight the maturity reached in XAI research... but also making recognizable that open problems are often viewed through isolated perspectives.|
A124|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|Whether scaling laws can be used to infer the quality of the artefacts or concepts learned by LLMs is an open issue.|
A125|RQ1|Principles and Values|User focus|The key is not how many individual pieces of government information a depository possesses| but whether those pieces are relevant to the information needs of the user population being served.|
A125|RQ1|Principles and Values|Change|It is long past time to recognize that the vacuum cleaner is clogged| and take the steps necessary to fix the system.|
A125|RQ1|Principles and Values|Sustainability|If control can be exercised over the paper and microfiche situation| the user community will be better served on the one hand and the depository community will be better equipped to deal with the electronic end of the situation.|
A125|RQ1|Principles and Values|Architecture|A cooperative approach treating the depositories of each state as a system| rather than requiring individual regional libraries to keep everything forever| is proposed as a more sustainable structure.|
A125|RQ2|Gaps|Lack of practical guidelines for implementing principles|The requirement that regional depositories receive everything and keep it forever should be abandoned.|
A125|RQ2|Gaps|Little discussion of the social and political implications of technology|The depository program is numerically dominated by academic and specialized libraries| which are severely limited in their ability to serve the general public.|
A125|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|Events will probably result in some cuts being made anyway| and it is better that librarians make cuts based on user needs| rather than having LPS make cuts based on expediency.|
A125|RQ3|Relationship with SWeBok|Software architecture|The paper proposes to treat the collective depositories of each state as a system| instead of burdening individual regional libraries with full retention.|
A125|RQ3|Relationship with SWeBok|Software Engineering Process|Each depository should be going through the same kind of collection development exercise as the rest of the library. If it is not essential| do not buy it.|
A126|RQ1|Principles and Values|Innovation|The Third Manifesto is a detailed and rigorous proposal for the future of data and database management systems.|
A126|RQ1|Principles and Values|Openness|The idea of bringing the Manifesto to the attention of a wider audience than hitherto seems timely.|
A126|RQ1|Principles and Values|Process improvement|We want to explain what we believe is the right way to integrate objects and relations.|
A126|RQ1|Principles and Values|Change|We believe that a relational system that supported domains properly would be able to deal with all of those 'problem' kinds of data that it's often claimed object-oriented systems can handle.|
A126|RQ1|Principles and Values|Architecture|A true 'object/relational' system is nothing more than a true relational systemâ€”which is to say| a system that supports the Relational Model| with all that that entails.|
A126|RQ2|Gaps|Lack of practical guidelines for implementing principles|There is still some confusion over the question of the right way to perform that integration.|
A126|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Despite this obvious difference| some people have proposed that domains and relations (meaning relation variables) are really the same kind of thing.|
A126|RQ2|Gaps|Lack of integration between different areas of software engineering|Information systems technology| computer-supported cooperative work practice| and organizational modeling have evolved with only accidental contact to each other.|
A126|RQ3|Relationship with SWeBok|Software architecture|The Manifesto is meant as a foundation for the future of data and database management systems.|
A126|RQ3|Relationship with SWeBok|Software Engineering Models and Methods|We must get away from SQL and back to our relational roots.|
A126|RQ3|Relationship with SWeBok|Computing Foundations|The Manifesto includes a comprehensive model of type inheritance| with numerous examples.|
A127|RQ1|Principles and Values|Process improvement|The paper lays out the leverage points available to a model manager| based on a review of model management practices in several fields| highlights lessons learned| and opportunities for further improvement.|
A127|RQ1|Principles and Values|Architecture|A cooperative approach treating the depositories of each state as a system| rather than requiring individual regional libraries to keep everything forever| is proposed as a more sustainable structure.|
A127|RQ1|Principles and Values|Sustainability|Model managers must carefully choose leverage points that optimize the utility of modelling within an agencyâ€™s budget and regulatory constraints| taking into account funding cycles| staff turnover| and technological decrepitude of aging IT systems.|
A127|RQ1|Principles and Values|Innovation|This paper provides a first conceptualisation of model management and lays out its scope.|
A127|RQ1|Principles and Values|Collaboration|We briefly review model management in a few fields of practice. In particular| we highlight how organizations implement cyber infrastructure and knowledge management in different organizational contexts and hierarchies.|
A127|RQ2|Gaps|Lack of integration between different areas of software engineering|In general| our understanding on how to manage modelling knowledge in real-world organizations is only emerging| in particular how to integrate modelling knowledge into the day-to-day operation beyond the narrow project focus.|
A127|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|No standardized guidance was available on the contracting process at the time of research| so CA staff relied on modifying historic consulting contracts.|
A127|RQ3|Relationship with SWeBok|Software Engineering Process|In most cases a structured approach to MNM is missing and environmental managers therefore fall back on short-term| ad-hoc solutions.|
A127|RQ3|Relationship with SWeBok|Software Engineering Models and Methods|Several guides inform the successful execution of modelling processes. Some organize them along a sequence of technical modelling steps| which may require revisiting earlier steps and lead to circular| iterative or even recursive model formulation.|
A127|RQ3|Relationship with SWeBok|Software Quality|Evaluation is a multi-faceted problem. Even in the case of establishing model credibility| there are a wide variety of approaches for the model manager to select.|
A128|RQ1|Principles and Values|User focus|People without digital skills or| worse| access to digital services could become effectively excluded from society.|
A128|RQ1|Principles and Values|Collaboration|Motivated by societal needs and encouraged by the strengths of CompSys research in the Netherlands| we call for a large-scale collective effort and investment in this field.|
A128|RQ1|Principles and Values|Innovation|Because we are at the end of Mooreâ€™s Law| and because our society has just started deep digitalization| the time is ripe for groundbreaking advances in all layers of computer systems and networking.|
A128|RQ1|Principles and Values|Openness|A broader| multidisciplinary approach that draws on the expertise of researchers across different fields can bring about advances.|
A128|RQ1|Principles and Values|Ethics and Responsibility|How to realize responsible computer infrastructure â€“ analogous to the concept of responsible AI â€“ whose operation we can rely on (from privacy| ethical| security| performance| availability| and durability perspectives)?|
A128|RQ1|Principles and Values|Process improvement|A concerted action to reintroduce systems thinking as a clear curricular goal| helping our society understand and shape the increasingly interconnected and complex digitalized world.|
A128|RQ1|Principles and Values|Change|Turning the tide requires a concerted effort that| inspired by our rich legacy| pushes the envelope in digital infrastructure.|
A128|RQ1|Principles and Values|Artificial intelligence|AI already requires massive computer systems which can cost millions per training task| but the current technology leaves an unsustainable energy footprint.|
A128|RQ1|Principles and Values|Privacy and Security|How to ensure privacy and security| along with performance| availability| and durability?|
A128|RQ1|Principles and Values|Sustainability|How to reduce and make the most from the energy footprint of (increasing levels of) computing?|
A128|RQ1|Principles and Values|Architecture|Each of the Top Sectors of the Dutch Economy| each route in the National Research Agenda| and each of the UN Sustainable Development Goals pose challenges that cannot be addressed without groundbreaking CompSys advances.|
A128|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|Although the CompSys field has sustained remarkable developments since 1990| to achieve and improve digitalization it is imperative that our digital infrastructure keeps innovating.|
A128|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|These pioneering efforts have been a catalyst for the digital economy of the Netherlands [...] However| that same report also indicates that Dutch digital infrastructure is at risk of losing its top position.|
A128|RQ3|Relationship with SWeBok|Software architecture|To address the societal challenges| we identify seven foundational research themes in CompSys [...] which only when addressed together can ensure the four societal pillars are enabled.|
A128|RQ3|Relationship with SWeBok|Software Engineering Process|Runtime engines are the glue layer between modern applications and the computing| storage| and networking infrastructure.|
A128|RQ3|Relationship with SWeBok|Software Engineering Models and Methods|We include here rethinking experimentation| simulation| and other essential methods; re-designing core processes for performance engineering| software engineering| and design.|
A128|RQ3|Relationship with SWeBok|Software Quality|We must support performance| availability| reliability| security| energy-proportionality| stability| portability| and correctness; enabling trustworthy operation.|
A129|RQ1|Principles and Values|Innovation|We argue here for a more radical approach: full SGML awareness in WWW.|
A129|RQ1|Principles and Values|Openness|SGML provides a public| non-proprietary method for interchange of data of all kinds.|
A129|RQ1|Principles and Values|Process improvement|We believe the difficulties are small| the cost affordable| and the advantages overwhelming.|
A129|RQ1|Principles and Values|Change|The Web must evolve to support full SGML intelligence| enabling richer document structures and interactions.|
A129|RQ1|Principles and Values|Architecture|We propose that any HTTP server which distributes an SGML document should be responsible for providing the DTD for that document| on demand.|
A129|RQ2|Gaps|Lack of practical guidelines for implementing principles|Most existing SGML editors and browsers do have style sheet mechanisms; unfortunately| they are currently product-specific| not standardized.|
A129|RQ2|Gaps|Little discussion of the social and political implications of technology|The upside of our proposal is that authors will have complete control over their tag sets [...] but the downside is that this control must be expressed in terms of a new style-sheet language.|
A129|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Ultimately| we will emerge into a Web with a small number of standard DTDs| each with many individual variations.|
A129|RQ3|Relationship with SWeBok|Software architecture|A true 'object/relational' system is nothing more than a true relational systemâ€”which is to say| a system that supports the Relational Model| with all that that entails.|
A129|RQ3|Relationship with SWeBok|Software Quality|Sending a non-valid SGML document can result in unpredictable behavior on the part of the browser.|
A129|RQ3|Relationship with SWeBok|Computing Foundations|SGML is rich enough to provide good solutions to virtually all of the Webâ€™s markup requirements for many years to come.|
A130|RQ1|Principles and Values|User focus|There is great value in enabling non-experts to solve small-scale problems relevant to their needs.|
A130|RQ1|Principles and Values|Collaboration|We will demonstrate our initial progress in order to spark a discussion in the live-programming community about the tradeoffs of researching professional vs. end-user programming.|
A130|RQ1|Principles and Values|Innovation|Our goal is that the programming experience should be so simple and immediate that| like a spreadsheet| it isnâ€™t considered 'real' programming.|
A130|RQ1|Principles and Values|Process improvement|Chorus instead provides a single unified model built upon our prior work on Subtext.|
A130|RQ1|Principles and Values|Change|Any attempt to fundamentally improve programming will of necessity involve reducing performance| breaking compatibility| depreciating investments| and obsoleting expertise.|
A130|RQ1|Principles and Values|Architecture|Chorus documents are statically typed tree structures that contain specialized components implementing common conversational patterns.|
A130|RQ2|Gaps|Lack of practical guidelines for implementing principles|What they lack is a roadmap leading to a complete live programming environment| and often they do not even mention the formidable obstacles in the way.|
A130|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Eventually we have to actually make it work. How will we get there?|
A130|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|Live programming is best known for a number of aspirational demos of radically improved programming experiences.|
A130|RQ3|Relationship with SWeBok|Software architecture|Typical applications are built from at least three distinct technology stacks: a database| a programming language| and a UI framework.|
A130|RQ3|Relationship with SWeBok|Software Engineering Models and Methods|Chorus could be thought of as HyperCard reimagined for the era of smart-phones and social apps.|
A130|RQ3|Relationship with SWeBok|Software Quality|Transactional concurrent live programming... Edits to code and schema are done in long-running transactions concurrent with ongoing activities by other users.|
A131|RQ1|Principles and Values|Innovation|Normalized stored relations with inherited attributes added to can be more faithful to the reality.|
A131|RQ1|Principles and Values|Process improvement|We argue that normalization anomalies could be avoided by recognizing inherited attributes in relational models.|
A131|RQ1|Principles and Values|Change|Present foundations of the relational model should get updated accordingly.|
A131|RQ1|Principles and Values|Architecture|We propose a new relational model structure using Stored and Inherited Relations (SIRs) to improve conceptual clarity and eliminate redundancy.|
A131|RQ2|Gaps|Lack of practical guidelines for implementing principles|There is no SQL dialect supporting SIRs; thus| we proposed new clauses to implement them efficiently.|
A131|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|It should become common knowledge that logical navigation free queries are possible| yet there are no current metrics to evaluate their impact.|
A131|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|Although SP with SIR is more expressive and practical| textbooks and teaching still rely on outdated models.|
A131|RQ3|Relationship with SWeBok|Software architecture|The proposed foundations suggest an architectural improvement to relational models through integration of inherited attributes.|
A131|RQ3|Relationship with SWeBok|Software Design|The Create Table syntax is redesigned to include inheritance expressions| reducing procedurality in model definition.|
A131|RQ3|Relationship with SWeBok|Computing Foundations|Relational model evolution is proposed with formal structure modifications| aligning data representation with conceptual modeling.|
A132|RQ1|Principles and Values|Innovation|Game theory provides fresh insights into computational multi-agent systems by introducing strategic dimensions into systems that otherwise may rest on unstable methodology.|
A132|RQ1|Principles and Values|Ethics and Responsibility|The explainability of these systems is not only a technological issue but boils down to medical| legal| ethical| and societal questions that need careful consideration.|
A132|RQ1|Principles and Values|Process improvement|Game theory enables us to clarify certain phenomena in quantum theory and quantum computing.|
A132|RQ1|Principles and Values|Change|Replacing players with Turing machines| finite automata or neural-network algorithms produces agents whose strategic resources are limited by constraints.|
A132|RQ1|Principles and Values|Architecture|Strategic concepts make sense in the inanimate realm of computing| too.|
A132|RQ2|Gaps|Lack of practical guidelines for implementing principles|Typical logics devised for multi-agent purposes define some inactive constituent parts| not the active contributors such as goal-oriented game-theoretic players.|
A132|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Although the CompSys field has sustained remarkable developments since 1990| to achieve and improve digitalization it is imperative that our digital infrastructure keeps innovating.|
A132|RQ2|Gaps|Lack of integration between different areas of software engineering|Multi-agent systems and game theory have evolved with only accidental contact to each other.|
A132|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|Strategic decisions would also have to be made concerning the input| delineating appropriate contexts or states of affairs within which best plays are to proceed.|
A132|RQ3|Relationship with SWeBok|Software architecture|Agent systems need to be open. Open systems receive constant input from their environment.|
A132|RQ3|Relationship with SWeBok|Software Engineering Models and Methods|Strategies are developed across the board| as calculated responses to adversariesâ€™ actions.|
A132|RQ3|Relationship with SWeBok|Software Quality|Transactional concurrent live programming... Edits to code and schema are done in long-running transactions concurrent with ongoing activities by other users.|
A133|RQ1|Principles and Values|Innovation|The manifesto discusses the research challenges| a roadmap built on 6 research directions| and a concrete implementation timeline for the roadmap.|
A133|RQ1|Principles and Values|Privacy and Security|Collected evidence and| in turn| certificates| are challenged by privacy requirements| where evidence collection may require access to systemâ€™s internals and private data.|
A133|RQ1|Principles and Values|Architecture|Modern systems moved from monolithic and static code bases to elastic and multi-layer distributed services.|
A133|RQ1|Principles and Values|Process improvement|A tighter integration between the development and certification processes is in its infancy| though it has the potential to significantly increase the trust in certified systems.|
A133|RQ1|Principles and Values|Change|Ultimately| there is a mismatch between the static and predictable nature of certification and the elastic and unpredictable nature of modern (ML-based) distributed systems.|
A133|RQ1|Principles and Values|Ethics and Responsibility|Openness does not mean unregulated access. Evidence should be shared according to the target systemâ€™s owner rules to avoid any leakages of information.|
A133|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Certification models and corresponding certificates can quickly become outdated and useless| requiring to re-execute the process from scratch with a waste of resources and time.|
A133|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|There is an urgent need of continuous and autonomic life cycle| which is impaired by reliance on ineffective change detection.|
A133|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|Traditional certification approaches are not applicable to ML-based systems because the latter are opaque and present an unknown behavior that can vary over time.|
A133|RQ3|Relationship with SWeBok|Software architecture|Modern distributed systems consist of miniaturized services running ML models| orchestrated at run time with cloud-native technologies.|
A133|RQ3|Relationship with SWeBok|Software Engineering Process|Certification should be integrated into development and operations. DevCertOps should aim to shift certification to the left by integrating it into the whole lifecycle.|
A133|RQ3|Relationship with SWeBok|Software Engineering Models and Methods|Properties should be enriched with their strength| modeling the property magnitude| to support advanced certificate management within the system life cycle.|
A133|RQ3|Relationship with SWeBok|Software Quality|The ultimate goal is to lead to a trustworthy and adaptive ecosystem based on a cost-effective| non-functional certification.|
A133|RQ3|Relationship with SWeBok|Software Security|Non-functional properties traditionally specify attributes describing system artifacts such as confidentiality| integrity| and availability.|
A134|RQ1|Principles and Values|User focus|Gurstein (2007| p34) goes on to identify a new requirement for ICTs to respond to the needs and requirements that are meaningful and significant in the daily lives of individual users within their communities.|
A134|RQ1|Principles and Values|Collaboration|To enhance social| and even international| stability systems are needed which facilitate community participation and interaction (locally| group| societal| culturally) more actively and effectively.|
A134|RQ1|Principles and Values|Innovation|The paper sets out design failures of Web 2.0 social networking sites and proffers guideline design principles of how Web 2.0 Community systems might be implemented.|
A134|RQ1|Principles and Values|Openness|We can apply Web 2.0 principles of technology to Gillâ€™s vision of cross-cultural interface design set out in Gill (1996).|
A134|RQ1|Principles and Values|Ethics and Responsibility|This paper is a kind of manifesto for what the IFAC engineering community should consider as part of their ethical and scientific responsibility to global physical community processes.|
A134|RQ1|Principles and Values|Process improvement|Community Informatics (CI) aims to solve real live problems of physical| local communities by integrating information and communication technologies into different community processes.|
A134|RQ1|Principles and Values|Change|To date few papers have addressed this issue within the IFAC and automation and control literature.|
A134|RQ1|Principles and Values|Privacy and Security|Collected evidence and| in turn| certificates| are challenged by privacy requirements| where evidence collection may require access to systemâ€™s internals and private data.|
A134|RQ1|Principles and Values|Sustainability|Community informatics can help strengthen local communities and thus contribute to increase social stability.|
A134|RQ1|Principles and Values|Architecture|It is now necessary to focus upon designing ICT systems which utilise automation and control systems to address the physical community digital divide.|
A134|RQ2|Gaps|Lack of practical guidelines for implementing principles|This paper sets out design failures of Web 2.0 social networking sites in terms of physical community.|
A134|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Few papers have addressed this issue within the IFAC and automation and control literature.|
A134|RQ2|Gaps|Little discussion of the social and political implications of technology|The study indicates that social networking systems are designed with an 'individualist' mindset to the detriment of physical community.|
A134|RQ3|Relationship with SWeBok|Software Requirements|The aim was to give citizens the local infrastructure to generate and maintain online local content.|
A134|RQ3|Relationship with SWeBok|Software architecture|The framework is a kind of manifesto| setting out guiding principles for a new range of social networking systems which reach into community.|
A134|RQ3|Relationship with SWeBok|Software Design|Facebook and iGoogle successfully comply with Web 2.0 principles but generally fail as community informatics systems.|
A134|RQ3|Relationship with SWeBok|Software Engineering Process|To date few papers have addressed this issue within the IFAC and automation and control literature.|
A134|RQ3|Relationship with SWeBok|Software Quality|It is not clear at present that the current trajectory of ICT and related systems is in this direction.|
A135|RQ1|Principles and Values|User focus|A systems development process that focuses specifically on the needs of the client and valorizes the role that tacit knowledge plays both in the development of the system and on a continuous basis post system delivery.|
A135|RQ1|Principles and Values|Collaboration|The work involves an inter-disciplinary team of librarians| technologists and students.|
A135|RQ1|Principles and Values|Innovation|A human-machine symbiosis is| thereby; embraced where the tacit knowledge of the curators/librarians is valued and the technology is a valuable aid to them in their work.|
A135|RQ1|Principles and Values|Ethics and Responsibility|This paper emphasises the difference between commercial systems design and non commercial systems design for the benefit of society.|
A135|RQ1|Principles and Values|Process improvement|The rationale is to detach from 'the one best way' that the Agile Software Development process has become.|
A135|RQ1|Principles and Values|Change|Has the Taylorist 'One best way' seeped into systems design engineering?|
A135|RQ1|Principles and Values|Privacy and Security|Collected evidence and| in turn| certificates| are challenged by privacy requirements| where evidence collection may require access to systemâ€™s internals and private data.|
A135|RQ1|Principles and Values|Sustainability|Automation and the global march of progress threaten cultural diversity and lead to inability for artisans to make a living and support their families which is a threat to sustainable development and in the long run to international stability.|
A135|RQ1|Principles and Values|Architecture|It is now necessary to focus upon designing ICT systems which utilise automation and control systems to address the physical community digital divide.|
A135|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|By over automating systems in the past workers have been deskilled and invaluable tacit knowledge has been lost.|
A135|RQ2|Gaps|Little discussion of the social and political implications of technology|The Agile software development process is at odds with Claudio Ciborraâ€™s writings on â€˜hospitalityâ€™ where the technology is an invited and| therefore| welcome guest.|
A135|RQ3|Relationship with SWeBok|Software Engineering Process|Is it possible that removing the commercial aspect from systems development allows for the use of a different model of systems design for socially beneficial systems by using a responsible design method?|
A135|RQ3|Relationship with SWeBok|Software Quality|Tacit knowledge cannot be automated and is a uniquely human trait which when removed from the system affects the overall flexibility| quality| effectiveness and ethics of the system.|
A136|RQ1|Principles and Values|Innovation|Using Design Fiction methods to unpack and concretise the nature of spimes| we have developed Sterlingâ€™s concept from a â€˜think pieceâ€™ into a multidimensional lens.|
A136|RQ1|Principles and Values|Ethics and Responsibility|Design researchers and practitioners can begin to apply spimes as a multidimensional lens to help reframe their design practices around the creation of a more sustainable IoT product paradigm.|
A136|RQ1|Principles and Values|Process improvement|This paper outlines the manifestoâ€™s creation| its theoretical foundations and its intentions.|
A136|RQ1|Principles and Values|Change|The manifesto is the first step towards the reframing of design practices that will contribute to a more sustainable IoT product paradigm.|
A136|RQ1|Principles and Values|Sustainability|Spimes aim to make the implicit consequences of product obsolescence and unsustainable disposal explicit to potential users.|
A136|RQ1|Principles and Values|Architecture|Unlike IoT devices| whose material instantiation is only visible to its user| both instantiations of a spime would be explicit and manageable by its potential users.|
A136|RQ2|Gaps|Lack of practical guidelines for implementing principles|Sterling suggests some of their possible technological characteristics| he does not attempt to visualise potential spime devices nor explore the practicalities of incorporating such technologies into their design.|
A136|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Little discourse however| recognises the intrinsically unsustainable nature of IoT devices themselves.|
A136|RQ2|Gaps|Little discussion of the social and political implications of technology|IoT is a breeding ground for superfluous| novelty â€˜gizmoâ€™ products whose design incorporates environmentally damaging modes of manufacture| consumption and disposal.|
A136|RQ3|Relationship with SWeBok|Software architecture|Spimes would be designed so that their material and digital instantiations would be made explicit to potential users.|
A136|RQ3|Relationship with SWeBok|Software Design|Spime-based design would seamlessly intersect physical (atoms)| digital (bits) and sustainability (natural environment).|
A136|RQ3|Relationship with SWeBok|Software Quality|Transparency| coupled with a focus on product disassembly| and recyclable parts and componentry| would be some of the principal aspects of a spime objectâ€™s design specifications.|
A137|RQ1|Principles and Values|Innovation|The Object Constraint Language (OCL) is a textual specification language| designed especially for the use in the context of diagrammatic specification languages such as the UML.|
A137|RQ1|Principles and Values|Process improvement|Using OCL constraints can help keep UML diagrams simple and easy to understand while adding details to the model.|
A137|RQ1|Principles and Values|Architecture|OCL is deeply connected to UML diagrams| used to define pre- and postconditions| invariants| or transition guards.|
A137|RQ2|Gaps|Lack of practical guidelines for implementing principles|OCL does currently not have a formally defined meaning and can therefore only be regarded as semi-formal.|
A137|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|The official OCL specification in version 1.3 has been published... however| many practical and theoretical aspects still need refinement.|
A137|RQ3|Relationship with SWeBok|Software architecture|Although the UML is powerful and covers many important situations| it is often not sufficient to describe certain important constraints.|
A137|RQ3|Relationship with SWeBok|Software Design|OCL provides expressive operator names to increase readability of OCL constraints.|
A137|RQ3|Relationship with SWeBok|Software Engineering Models and Methods|OCL is a specification language that tries to mediate between the practical usersâ€™ needs and the theoretical work done in the area.|
A137|RQ3|Relationship with SWeBok|Computing Foundations|From first order logic languages| we know how to deal with that situation. There are two approaches possible| both have their merits and problems.|
A138|RQ1|Principles and Values|Innovation|We propose that this new science should be grounded| theoretically on a richer conception of sociality| and methodologically on the extensive use of computational modelling.|
A138|RQ1|Principles and Values|Change|Our response to these deficiencies is placed against the backdrop provided by the broader tradition of organisation theory.|
A138|RQ1|Principles and Values|Architecture|We provide a new model of multi-agent systems that reflects a fully explicated conception of cognition| both at the individual and the collective level.|
A138|RQ2|Gaps|Lack of integration between different areas of software engineering|Many of the current theoretical tools and principles of MAS research seem to be inadequate.|
A138|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|Traditional concern of much of the MAS community has been with the design of relatively few computational artificial agents.|
A138|RQ3|Relationship with SWeBok|Software architecture|Any organisation is a MAS in which some form of joint behaviour is carried out through differentiation and coordination of tasks among the constituent members.|
A138|RQ3|Relationship with SWeBok|Software Engineering Models and Methods|We develop a model of MAS in which mechanisms of joint cognition and behaviour are predicated in terms of cognition and behaviour at the individual level.|
A138|RQ3|Relationship with SWeBok|Computing Foundations|Science is primarily aimed at finding order in the complexity of nature. To do so| it must partition the object of analysis into various discrete segments| explain their interdependencies| and establish boundaries.|
A139|RQ1|Principles and Values|Innovation|The concept emerged from our recent effort to develop a computational model for conscious behavior in robots| based on the theory of automata.|
A139|RQ1|Principles and Values|Architecture|The architecture of a cognitive cyber-physical system C consists of four main parts: its sensory units| its motor units| its finite-state control unit and its dashboard.|
A139|RQ1|Principles and Values|Process improvement|Self-awareness thus provides a cognitive system with a rudimentary machine concept of the self: the system has information on what goes on in the outside world| what its actions are and what their effects.|
A139|RQ1|Principles and Values|Change|Minimal machine consciousness enables the system to operate awarely in its environment at any time.|
A139|RQ1|Principles and Values|Ethics and Responsibility|When designing new cyber-physical systems| or innovating the existing ones| especially in which risks for human life are at stake| it is a matter of responsible design and ethics to make such systems minimal machine conscious.|
A139|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|Minimal machine consciousness is not a feature of only highly complex systems| and cannot be achieved by a mere software upgrade. Rather| it requires a different system architecture| and a properly designed operational cycle.|
A139|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|It seems that| currently| no clear-cut example of a deliberately designed minimal machine conscious cyber-physical system exists.|
A139|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|Certification models and corresponding certificates can quickly become outdated and useless| requiring to re-execute the process from scratch with a waste of resources and time.|
A139|RQ3|Relationship with SWeBok|Software architecture|We therefore contend that minimal machine consciousness should be one of the major design objectives of any cyber-physical system.|
A139|RQ3|Relationship with SWeBok|Software Engineering Process|The SACA (Sense-Analyze-Compute-Act) cycle supports the self-controlled behavior of a cognitive cyber-physical system.|
A139|RQ3|Relationship with SWeBok|Software Engineering Models and Methods|The transition function is a function that for any given current state| current dashboard information| and the current analysis of it| determines a new state of the control unit.|
A139|RQ3|Relationship with SWeBok|Software Quality|Minimal machine consciousness enables the system to detect and correct failures that can potentially prevent a possible crash or disaster.|
A139|RQ3|Relationship with SWeBok|Software Security|Cyber-physical systems must be designed to guarantee minimal machine consciousness to ensure reliability and secure operation in real-world environments.|
A140|RQ1|Principles and Values|User focus|We emphasize disability inclusion in a much broader sense| and articulate a range of steps that can be conducted in order to meet this.|
A140|RQ1|Principles and Values|Collaboration|People with disabilities are more likely to have more limited access to networks of academic peers and potential collaborators.|
A140|RQ1|Principles and Values|Ethics and Responsibility|Research communities should more proactively comply with their moral and legal obligations.|
A140|RQ1|Principles and Values|Process improvement|We propose a number of adjustments to ameliorate some of these concerns and the disadvantage that they place many people with disabilities at.|
A140|RQ1|Principles and Values|Change|If our conference processes are to be inclusive for people with disabilities| then research communities should more proactively comply with their moral and legal obligations.|
A140|RQ2|Gaps|Lack of practical guidelines for implementing principles|Despite the introduction of Disability Discrimination Law... it is surprising that the CHI review process takes no substantive account of the needs of people with disabilities.|
A140|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|The low levels of requests (for whatever reasons) means that it is highly likely that there is substantial under-recommendation of reasonable adjustments within the SIGCHI community.|
A140|RQ2|Gaps|Little discussion of the social and political implications of technology|Current CHI community framing of disability is largely reduced to accessibility| without deeper consideration of social inequalities and institutional barriers.|
A140|RQ3|Relationship with SWeBok|Software Engineering Process|The iterative review process would enable corrections rather than simple rejections| supporting inclusive participation in the peer review cycle.|
A140|RQ3|Relationship with SWeBok|Software Quality|Removing arbitrary page limits would promote inclusion and reduce anxiety for those who need more space to articulate their work due to cognitive disabilities.|
A140|RQ3|Relationship with SWeBok|Software Engineering Professional Practice|We argue that conference organizers and academic staff have a responsibility to act ethically and legally in providing accessible and inclusive environments.|
A141|RQ1|Principles and Values|User focus|End users need ways to actively participate in the AI debate and related decision making.|
A141|RQ1|Principles and Values|Collaboration|This workshop brings together practitioners and researchers from diverse disciplinary backgrounds to discuss and reflect on the cultural| ethical| political| and social implications.|
A141|RQ1|Principles and Values|Innovation|Participatory Design| not only has much to offer| it has a responsibility to deeply engage.|
A141|RQ1|Principles and Values|Openness|There arenâ€™t consistent standards or transparent review practices.|
A141|RQ1|Principles and Values|Ethics and Responsibility|The design and development of AI-based intelligent systems present core dilemmas related to the fundamentals of human and social behavior.|
A141|RQ1|Principles and Values|Process improvement|Participatory design provides a domain and set of techniques that actively negotiate the use| bounds| and terms of AI and intelligent systems.|
A141|RQ1|Principles and Values|Change|Participatory design practitioners must weigh in as shapers of more democratic futures.|
A141|RQ1|Principles and Values|Artificial intelligence|AI and intelligent systems are in desperate need for ethical as well as design guidelines.|
A141|RQ1|Principles and Values|Privacy and Security|Collected evidence and| in turn| certificates| are challenged by privacy requirements.|
A141|RQ1|Principles and Values|Sustainability|Participatory approaches may help address the described issues while enabling sustainable business models and technological development.|
A141|RQ1|Principles and Values|Architecture|These sophisticated systems often rely on unscripted| autonomous transactions and play active roles in a personâ€™s life.|
A141|RQ2|Gaps|Lack of practical guidelines for implementing principles|There arenâ€™t consistent standards or transparent review practices.|
A141|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|How might we measure and evaluate the impact of such a process| especially given the variable temporalities at play?|
A141|RQ2|Gaps|Little discussion of the social and political implications of technology|The complexity of these systems and the obfuscation of their processes makes critical reflection difficult for many| erodes considered public debate| and makes oversight hard| if not impossible.|
A141|RQ3|Relationship with SWeBok|Software Engineering Process|Participatory design provides a domain and set of techniques that actively negotiate the use| bounds| and terms of AI and intelligent systems.|
A141|RQ3|Relationship with SWeBok|Software Engineering Professional Practice|Participatory design practitioners must weigh in.|
A141|RQ3|Relationship with SWeBok|Software Quality|A future enriched and enabled by intelligent-yet-trustworthy systems requires careful implementation of guidelines that govern the actions of those in charge of deciding what to design| how| why and what data to feed into a given system.|
A142|RQ1|Principles and Values|User focus|In particular| end users should read this to gain insight into the value that the event processing approach provides to solving real business problems.|
A142|RQ1|Principles and Values|Innovation|Event processing is a set of techniques and tools that help us understand and control event-driven systems.|
A142|RQ1|Principles and Values|Process improvement|Event processing provides real-time visibility in a wealth of event data and enables responsiveness in decision-making processes.|
A142|RQ1|Principles and Values|Change|The event processing grand challenge offers a focus to make the quantum leap in the impact of event processing on the world.|
A142|RQ1|Principles and Values|Architecture|The shift is supported by an event-driven architecture pattern| which supports event transport and processing as a programming paradigm.|
A142|RQ1|Principles and Values|Privacy and Security|In many systems| security is an overarching concern.|
A142|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|The current applications based on event processing technology just scratched the surface of its potential; the grand challenge offers a focus to make the quantum leap.|
A142|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|There are a range of open research problems to be resolved. As these technologies are improved upon| and problems are explored| many common characteristics have emerged.|
A142|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|Certification models and corresponding certificates can quickly become outdated and useless| requiring to re-execute the process from scratch with a waste of resources and time.|
A142|RQ3|Relationship with SWeBok|Software architecture|Event processing offers a standardized and optimized way to implement event-based applications.|
A142|RQ3|Relationship with SWeBok|Software Engineering Process|The effectiveness of a response depends on its timeliness. Event processing is valuable where the value of a response decays with increased response time.|
A142|RQ3|Relationship with SWeBok|Software Quality|Event processing systems also generate summary-level facts (complex events) and put them in context to identify threats and opportunity situations.|
A142|RQ3|Relationship with SWeBok|Software Security|In many systems| security is an overarching concern.|
A145|RQ3|Relationship with SWeBok|Computing Foundations|We start with some terminology. Event processing can be broadly defined to be any computing that performs operations on events.|
A143|RQ1|Principles and Values|Innovation|Big changes in approach are almost certainly needed| e.g.| systems that distinguish appearance from reality.|
A143|RQ1|Principles and Values|Ethics and Responsibility|AI research should not be dominated by near-term applications. DARPA should recall the extent to which its applied goals were benefitted by basic research.|
A143|RQ1|Principles and Values|Process improvement|Basic researchers in AI should measure their work as to the extent to which it advances this goal.|
A143|RQ1|Principles and Values|Change|Formalizing common sense requires extensions to mathematical logic including nonmonotonic reasoning and extensive reification.|
A143|RQ1|Principles and Values|Artificial intelligence|The long-term goal of AI is human-level AI. This is still not directly definable| although we still know of human abilities that even the the best present programs have not been able to emulate.|
A143|RQ2|Gaps|Little attention to the evolution and adaptation of manifestos|The so-called AI winter was dominated by people who lost money in companies. Thatâ€™s a common phenomenon.|
A143|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|NSF should not let itself be seduced by impatience.|
A143|RQ3|Relationship with SWeBok|Computing Foundations|I think the best hope for human-level AI is logical AI| based on the formalizing of commonsense knowledge and reasoning in mathematical logic.|
A143|RQ3|Relationship with SWeBok|Software Engineering Models and Methods|Formalizing common sense requires extensions to mathematical logic including nonmonotonic reasoning and extensive reification.|
A143|RQ3|Relationship with SWeBok|Software Quality|Approaches based on simulating aspects of the human nervous system| such as neural nets| may also work.|
A144|RQ1|Principles and Values|Collaboration|We value psychological safety and trust between technical and business stakeholders.|
A144|RQ1|Principles and Values|Ethics and Responsibility|We value transparency| explainability| and replicability in the identification| measurement| and prioritization of Technical Debt.|
A144|RQ1|Principles and Values|Process improvement|We value simple| actionable| value-based communication of Technical Debt to all stakeholders.|
A144|RQ1|Principles and Values|Architecture|We value software architecture understanding across the team as part of effective Technical Debt Management.|
A144|RQ2|Gaps|Lack of evaluation and monitoring of the impact of manifestos|There are no industry-standard and definitive tools for identifying| measuring| documenting| prioritizing| or preventing architecture issues resulting in Technical Debt.|
A144|RQ2|Gaps|Lack of assessment or monitoring of the quality of architecture|Neither commercial nor research tools currently measure interest despite being a decisive factor in prioritizing and repaying Technical Debt items.|
A144|RQ3|Relationship with SWeBok|Software architecture|Elevate the Role of Architecture in Technical Debt Management.|
A144|RQ3|Relationship with SWeBok|Software Engineering Process|The scope of this manifesto includes all relevant artifacts and processes within a Software Engineering lifecycle from cradle to grave.|
A144|RQ3|Relationship with SWeBok|Software Quality|Managing Technical Debt is essential to delivering high-quality software systems that are timely| are on-budget| and meet their stakeholder needs.|
A144|RQ3|Relationship with SWeBok|Software Engineering Models and Methods|Teams need to select metrics| collect data| and interpret them quantitatively and qualitatively with respect to that context.|